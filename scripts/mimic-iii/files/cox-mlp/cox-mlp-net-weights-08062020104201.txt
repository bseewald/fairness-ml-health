Weights: 
embeddings.embeddings.0.weight tensor([[ 0.1194,  0.0771],
        [ 0.2684, -0.1166],
        [-0.2910, -0.3439],
        [-0.2082, -0.3153]])
embeddings.embeddings.1.weight tensor([[ 0.1833,  0.5488],
        [-0.4586, -0.4769],
        [ 0.4622,  0.2682],
        [-0.2219,  0.1310],
        [ 0.3306,  0.1026]])
embeddings.embeddings.2.weight tensor([[-0.0875, -0.1904, -0.0951],
        [-0.0366, -0.3499,  0.1308],
        [-0.4146,  0.1523, -0.2910],
        [ 0.3598,  0.4096,  0.3949],
        [ 0.1075, -0.1708,  0.2155],
        [-0.4143, -0.1447,  0.2539]])
embeddings.embeddings.3.weight tensor([[ 0.2120,  0.2144],
        [-0.2547, -0.0987],
        [-0.4872,  0.2238],
        [ 0.2239,  0.3360]])
embeddings.embeddings.4.weight tensor([[-0.0994,  0.2016],
        [ 0.2714, -0.5848],
        [ 0.0652, -0.3349],
        [ 0.1131,  0.3229]])
mlp.net.0.linear.weight tensor([[ 0.4342,  0.1250,  0.2387,  ..., -0.4137,  0.2052, -0.1463],
        [-0.1120,  0.2431, -0.3531,  ..., -0.3570, -0.2090, -0.2821],
        [-0.0922, -0.5083, -0.1694,  ...,  0.4229, -0.3872,  0.5904],
        ...,
        [ 0.0374,  0.0108,  0.2484,  ...,  0.1976, -0.2072,  0.1344],
        [-0.4521,  0.1080, -0.5096,  ..., -0.0479,  0.0949,  0.0878],
        [ 0.3878, -0.4387,  0.0095,  ..., -0.3424, -0.1506,  0.0743]])
mlp.net.0.linear.bias tensor([-0.2063, -0.0532, -0.0570,  0.2178, -0.0657,  0.1375, -0.0880, -0.1104,
         0.2460, -0.1416, -0.0009,  0.1216, -0.0072,  0.0534,  0.1067,  0.0032,
        -0.0113, -0.0077, -0.0859,  0.0597, -0.1865, -0.1039, -0.0743, -0.0189,
        -0.0341,  0.1724,  0.2311,  0.0828, -0.1029,  0.1678,  0.1032, -0.1244,
        -0.0625,  0.1019,  0.1921, -0.1119, -0.1634, -0.1466,  0.0241, -0.1869,
         0.0814,  0.1079,  0.1411,  0.0315, -0.0266, -0.1607,  0.1265,  0.1363,
        -0.0806, -0.1697, -0.1080, -0.0994,  0.1105, -0.0903, -0.0854, -0.0247,
         0.1083,  0.0027,  0.0433,  0.0874,  0.0150, -0.0905, -0.0268, -0.2107])
mlp.net.0.batch_norm.weight tensor([0.9039, 0.9271, 0.8910, 0.8830, 0.8585, 0.9346, 0.8774, 0.8920, 0.8639,
        0.8887, 0.8840, 0.8842, 0.9422, 0.9233, 0.8868, 0.8922, 0.8873, 0.8977,
        0.8821, 0.9391, 0.8826, 0.9067, 0.8915, 0.8883, 0.8898, 0.8908, 0.9495,
        0.9098, 0.8913, 0.8702, 0.9151, 0.9171, 0.9070, 0.8930, 0.9028, 0.8929,
        0.9057, 0.8925, 0.9303, 0.8968, 0.9076, 0.8943, 0.8738, 0.9019, 0.8894,
        0.8896, 0.9083, 0.8743, 0.8975, 0.8928, 0.8933, 0.8859, 0.9429, 0.9331,
        0.9283, 0.8727, 0.9329, 0.8939, 0.8941, 0.8918, 0.8901, 0.9068, 0.9038,
        0.8617])
mlp.net.0.batch_norm.bias tensor([-0.0362, -0.0194,  0.0262, -0.0357,  0.0162,  0.0094, -0.0043,  0.0268,
         0.0181, -0.0104,  0.0207,  0.0166,  0.0122,  0.0256, -0.0005, -0.0098,
        -0.0049, -0.0027,  0.0164,  0.0129,  0.0071, -0.0044, -0.0118,  0.0387,
        -0.0064, -0.0092, -0.0310, -0.0287, -0.0068, -0.0031,  0.0314, -0.0279,
        -0.0196,  0.0003,  0.0064,  0.0111, -0.0162, -0.0154, -0.0141, -0.0128,
        -0.0103,  0.0034,  0.0094, -0.0002, -0.0026,  0.0084, -0.0309, -0.0402,
        -0.0217, -0.0024,  0.0103,  0.0026, -0.0093, -0.0467,  0.0349,  0.0307,
        -0.0155,  0.0136,  0.0152,  0.0118, -0.0012,  0.0048, -0.0259,  0.0254])
mlp.net.0.batch_norm.running_mean tensor([6.4951e-03, 1.1536e-01, 9.4952e-02, 1.0490e+00, 4.1250e-01, 1.0407e-01,
        6.5405e-02, 1.4704e-03, 5.3676e-01, 1.1032e-01, 5.1815e-02, 3.3286e-01,
        2.5350e-01, 3.8380e-01, 1.2400e+00, 4.9691e-03, 4.3193e-03, 1.0679e+00,
        3.5623e-01, 3.6566e-01, 1.6681e-03, 2.1683e-02, 4.9715e-01, 6.1723e-03,
        6.0616e-04, 5.4818e-01, 7.0622e-01, 4.1117e-03, 1.6954e-01, 4.2092e-01,
        2.7812e-01, 8.2506e-01, 4.8950e-01, 2.1667e-02, 6.2773e-01, 1.5862e-01,
        3.0191e-03, 1.0093e-02, 7.7639e-02, 3.4956e-01, 7.2618e-02, 1.3760e-01,
        4.5980e-01, 8.4732e-03, 1.2754e-03, 3.3946e-01, 6.1158e-02, 1.8193e-01,
        7.0597e-03, 1.3268e-01, 1.2391e-01, 6.4389e-02, 8.1459e-01, 1.7833e-03,
        1.7982e-01, 2.6148e-01, 2.5048e-01, 5.2130e-02, 1.4297e-02, 2.7146e-02,
        2.7316e-01, 1.3918e-02, 2.5884e-02, 5.5185e-03])
mlp.net.0.batch_norm.running_var tensor([1.4789e-03, 3.8518e-02, 4.4176e-02, 1.7716e-01, 1.3405e-01, 2.8379e-02,
        2.5306e-02, 2.2578e-04, 2.0319e-01, 5.6450e-02, 2.5051e-02, 1.6761e-01,
        5.9546e-02, 1.3298e-01, 1.8100e-01, 1.5281e-03, 1.1357e-03, 2.6800e-01,
        5.5682e-02, 4.4502e-02, 2.1940e-04, 7.4820e-03, 2.3179e-01, 1.1486e-03,
        6.7744e-05, 1.8754e-01, 7.0434e-02, 9.1694e-04, 4.1618e-02, 1.0661e-01,
        7.0043e-02, 1.7225e-01, 1.1024e-01, 6.8498e-03, 8.0388e-02, 3.2909e-02,
        7.8481e-04, 3.4655e-03, 3.9121e-02, 1.5697e-01, 2.0094e-02, 4.6472e-02,
        1.4773e-01, 2.0276e-03, 2.1754e-04, 1.5502e-01, 1.7846e-02, 5.4828e-02,
        1.3664e-03, 2.7696e-02, 1.7432e-02, 1.6354e-02, 7.9737e-02, 2.6359e-04,
        3.5020e-02, 5.5710e-02, 5.3876e-02, 3.7639e-02, 3.5087e-03, 5.9022e-03,
        5.6457e-02, 3.7456e-03, 1.3453e-02, 1.7939e-03])
mlp.net.0.batch_norm.num_batches_tracked tensor(460)
mlp.net.1.linear.weight tensor([[ 0.2417, -0.0739,  0.2626,  ...,  0.0341,  0.1734,  0.1395],
        [ 0.0136,  0.0292,  0.2566,  ...,  0.1114,  0.3977, -0.0723],
        [ 0.0040,  0.2466, -0.1050,  ..., -0.1582, -0.3204,  0.2624],
        ...,
        [ 0.0878, -0.1531, -0.1413,  ..., -0.1258, -0.0867, -0.0521],
        [-0.0586, -0.0379,  0.0323,  ...,  0.0988, -0.3451, -0.2315],
        [ 0.1677, -0.0303,  0.0233,  ...,  0.1189, -0.0900,  0.1882]])
mlp.net.1.linear.bias tensor([ 0.0950, -0.0545, -0.0778,  0.0098,  0.0837,  0.0791,  0.0272,  0.0437,
         0.0879, -0.0593, -0.0850,  0.0204, -0.0256,  0.0173,  0.1041, -0.0030,
        -0.0518, -0.0720,  0.0225,  0.0979,  0.1232,  0.1440,  0.0109,  0.0544,
         0.0260, -0.0938,  0.0887,  0.0411,  0.0223, -0.0845, -0.0045,  0.1087,
         0.0513, -0.0575, -0.0072,  0.0351,  0.0464, -0.0956, -0.0196, -0.0557,
         0.1340,  0.0453,  0.0761, -0.0486, -0.0240, -0.1023,  0.0091, -0.0222,
         0.0390, -0.0322, -0.0853,  0.0273,  0.0595,  0.0590,  0.1329, -0.0163,
         0.1091, -0.1128,  0.1076, -0.0629,  0.0593,  0.0838,  0.0250,  0.0883])
mlp.net.1.batch_norm.weight tensor([0.8661, 0.8707, 0.8707, 0.9036, 0.8471, 0.8475, 0.9065, 0.8898, 0.9093,
        0.8643, 0.8433, 0.8851, 0.8508, 0.8534, 0.8750, 0.8921, 0.8505, 0.8978,
        0.8926, 0.8623, 0.8966, 0.8522, 0.8647, 0.8567, 0.8322, 0.8698, 0.8780,
        0.8938, 0.8417, 0.8385, 0.8801, 0.8765, 0.8360, 0.9084, 0.8907, 0.8552,
        0.8501, 0.9040, 0.9229, 0.9020, 0.9313, 0.9188, 0.8354, 0.8707, 0.9069,
        0.8408, 0.8811, 0.9076, 0.9044, 0.8987, 0.8513, 0.8408, 0.8556, 0.8976,
        0.8884, 0.8718, 0.9093, 0.8525, 0.8491, 0.8484, 0.8883, 0.9092, 0.8979,
        0.8589])
mlp.net.1.batch_norm.bias tensor([ 2.2286e-03,  1.9139e-03, -7.8403e-03, -1.0207e-02,  1.6493e-03,
        -8.0404e-03, -6.8565e-03, -1.5586e-02, -2.4657e-03, -8.5169e-03,
         1.0341e-03,  1.3819e-03,  1.9601e-02, -5.5841e-03,  2.0419e-02,
         1.7157e-02,  4.6266e-03,  1.2755e-02,  2.5848e-03,  6.3281e-03,
         1.8333e-02,  9.3533e-03, -6.5854e-03, -2.6226e-02,  6.0640e-05,
        -5.4664e-04, -8.7643e-03, -1.6400e-03,  4.5673e-04,  1.8069e-02,
         1.6343e-02,  2.9453e-02,  5.7276e-03,  1.6885e-02, -1.4498e-02,
        -7.7143e-03, -9.1127e-03, -2.8062e-03,  1.4421e-02, -1.1653e-02,
        -5.5567e-04, -1.4915e-02, -6.3308e-03, -2.1711e-02,  8.2827e-03,
         3.2514e-03,  3.4991e-03, -2.3597e-03,  7.6775e-03,  1.7124e-02,
        -9.5815e-03, -4.1462e-03, -3.6460e-03, -1.2920e-02,  3.2449e-03,
        -1.1353e-02,  2.0942e-02,  6.9557e-04, -1.2174e-02, -1.0247e-02,
         5.8124e-03, -1.2776e-02, -1.2309e-02,  2.1926e-02])
mlp.net.1.batch_norm.running_mean tensor([0.6596, 0.7285, 0.5876, 0.5007, 0.6032, 0.6804, 0.7704, 0.5424, 0.7317,
        0.6843, 0.6954, 0.6082, 0.6567, 0.5498, 0.7159, 0.5704, 0.5415, 0.4939,
        0.5377, 0.6165, 0.6444, 0.7773, 0.5628, 0.7088, 0.6368, 0.6811, 0.8100,
        0.4753, 0.4560, 0.5408, 0.5757, 0.6306, 0.5684, 0.5692, 0.6546, 0.5111,
        0.6054, 0.5925, 0.5887, 0.5214, 0.6063, 0.5063, 0.4857, 0.4719, 0.7689,
        0.3937, 0.6578, 0.5414, 0.6293, 0.5317, 0.5192, 0.5837, 0.5663, 0.6204,
        0.7364, 0.5272, 0.6313, 0.5201, 0.6715, 0.5072, 0.6327, 0.7838, 0.5900,
        0.6737])
mlp.net.1.batch_norm.running_var tensor([0.9784, 1.4040, 1.2841, 1.0630, 0.8634, 1.3008, 1.3700, 0.5838, 1.1065,
        1.6406, 2.0788, 0.9039, 1.2903, 0.9589, 1.1703, 1.0416, 0.7535, 0.6099,
        0.9613, 1.1716, 0.9999, 1.4983, 0.8535, 1.0026, 1.1629, 1.4969, 1.3152,
        0.5113, 0.8689, 0.7805, 0.9891, 0.7141, 0.7272, 0.8349, 0.9723, 0.6313,
        0.9374, 0.9853, 0.6519, 0.6426, 0.7198, 0.4649, 0.7523, 0.8495, 1.1177,
        0.8127, 0.8062, 0.7870, 0.8326, 0.7524, 0.8704, 0.8341, 1.1487, 1.0599,
        1.1099, 0.7925, 0.9935, 1.2058, 0.6474, 0.7468, 0.7041, 1.3996, 0.9047,
        1.8092])
mlp.net.1.batch_norm.num_batches_tracked tensor(460)
mlp.net.2.weight tensor([[-0.0530, -0.0266, -0.0807, -0.0223,  0.0043,  0.0537, -0.0151,  0.0418,
          0.0246, -0.0673,  0.0201, -0.0116,  0.0279, -0.0579, -0.0604, -0.0169,
         -0.0131, -0.0268, -0.0307, -0.0378, -0.0204, -0.0596, -0.0054, -0.0276,
          0.0048, -0.0267,  0.0265,  0.0206, -0.0497, -0.0441, -0.0102,  0.0573,
          0.0170, -0.0245,  0.0143,  0.0023,  0.0561, -0.0403,  0.0291,  0.0299,
          0.0440,  0.0482, -0.0245,  0.0111,  0.0202, -0.0321,  0.0858, -0.0242,
          0.0204, -0.0185,  0.0065,  0.0457,  0.0185,  0.0228,  0.0587, -0.0015,
          0.0325,  0.0343, -0.0283, -0.0585,  0.0244,  0.0351,  0.0123, -0.0336]])
