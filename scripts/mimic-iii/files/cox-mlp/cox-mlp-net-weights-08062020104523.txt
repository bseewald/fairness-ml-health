Weights: 
embeddings.embeddings.0.weight tensor([[ 0.0953, -0.1957],
        [ 0.0314, -0.1883],
        [-0.0200,  0.3062],
        [-0.2355,  0.2069]])
embeddings.embeddings.1.weight tensor([[-0.3362,  0.4179],
        [ 0.2174, -0.1507],
        [-0.4507, -0.1430],
        [ 0.1583, -0.3593],
        [ 0.2639, -0.3392]])
embeddings.embeddings.2.weight tensor([[ 0.3566, -0.3651,  0.3610],
        [ 0.0304,  0.0731, -0.2574],
        [-0.2609,  0.2737,  0.4018],
        [-0.1245, -0.3005, -0.2248],
        [ 0.0901,  0.3955, -0.0676],
        [-0.2281, -0.2763, -0.4060]])
embeddings.embeddings.3.weight tensor([[ 0.2671, -0.0458],
        [-0.2183, -0.3036],
        [-0.4622,  0.4495],
        [ 0.3013, -0.5487]])
embeddings.embeddings.4.weight tensor([[ 0.4150, -0.4905],
        [ 0.4738, -0.2784],
        [-0.1053, -0.0278],
        [ 0.3627, -0.0476]])
mlp.net.0.linear.weight tensor([[ 0.0704, -0.1828,  0.0489,  ..., -0.0783, -0.5479, -0.0728],
        [ 0.0353,  0.1178, -0.0209,  ...,  0.3480, -0.0148, -0.4259],
        [ 0.1767,  0.4135,  0.0208,  ...,  0.0526, -0.2791, -0.5424],
        ...,
        [-0.2419, -0.2517,  0.0026,  ..., -0.3067,  0.4109, -0.0053],
        [ 0.0935, -0.3982, -0.4361,  ...,  0.4154, -0.1422,  0.4455],
        [-0.4573,  0.2207, -0.7142,  ..., -0.5745,  0.2249,  0.0764]])
mlp.net.0.linear.bias tensor([ 0.1711,  0.1876, -0.0996, -0.0060, -0.0858,  0.1052,  0.1539, -0.0303,
         0.0344, -0.0768, -0.0304, -0.0244, -0.0084,  0.1155, -0.1765,  0.0041,
        -0.0993, -0.0522,  0.0347,  0.0828,  0.0115,  0.1265, -0.0471,  0.0941,
        -0.0590,  0.1449,  0.0546, -0.1654,  0.0070, -0.0123, -0.0663,  0.0969,
        -0.1528,  0.0303, -0.1486, -0.0356,  0.1318, -0.0578,  0.1923, -0.1036,
        -0.1343,  0.1213, -0.1453, -0.1650,  0.0731,  0.1025,  0.0098, -0.0687,
         0.2073,  0.1123, -0.1041,  0.1280,  0.0707, -0.0877,  0.1095, -0.1650,
         0.1265,  0.0443,  0.1800, -0.0367,  0.0058,  0.0643,  0.0224,  0.1270])
mlp.net.0.batch_norm.weight tensor([0.7854, 0.8060, 0.7499, 0.7457, 0.8558, 0.7502, 0.7750, 0.7768, 0.7628,
        0.7609, 0.7259, 0.7812, 0.7884, 0.7559, 0.7381, 0.8102, 0.7379, 0.8374,
        0.7971, 0.7853, 0.7796, 0.8038, 0.7679, 0.7670, 0.8006, 0.7775, 0.8237,
        0.7297, 0.7512, 0.8087, 0.7896, 0.7764, 0.7393, 0.8484, 0.8375, 0.8129,
        0.8678, 0.7633, 0.7610, 0.8072, 0.7615, 0.7851, 0.7255, 0.7337, 0.7640,
        0.7517, 0.7678, 0.7702, 0.8108, 0.7996, 0.8088, 0.7641, 0.8353, 0.8055,
        0.7345, 0.7680, 0.8522, 0.7888, 0.7845, 0.8269, 0.7225, 0.8159, 0.7976,
        0.7591])
mlp.net.0.batch_norm.bias tensor([-0.0455, -0.0046,  0.0216, -0.0300,  0.0043,  0.0342,  0.0301, -0.0333,
         0.0066, -0.0310, -0.0561,  0.0374, -0.0100,  0.0067,  0.0054, -0.0163,
         0.0133, -0.0067, -0.0168, -0.0365, -0.0315, -0.0338,  0.0026,  0.0260,
         0.0124,  0.0321, -0.0317, -0.0009,  0.0229,  0.0317,  0.0164,  0.0514,
        -0.0260,  0.0306,  0.0021,  0.0080, -0.0006, -0.0228,  0.0375,  0.0057,
         0.0204, -0.0229,  0.0297,  0.0160, -0.0627,  0.0282, -0.0399,  0.0221,
         0.0440, -0.0283, -0.0207,  0.0465,  0.0117,  0.0114,  0.0033,  0.0040,
        -0.0242, -0.0388,  0.0017,  0.0271, -0.0029, -0.0172,  0.0423, -0.0800])
mlp.net.0.batch_norm.running_mean tensor([2.9911e-01, 7.3434e-02, 5.2301e-01, 1.3010e-03, 4.6573e-01, 7.9418e-01,
        5.9557e-02, 5.5831e-03, 6.0484e-02, 8.1089e-01, 5.9074e-04, 5.0901e-01,
        6.3258e-02, 2.8458e-01, 1.7482e-02, 9.9869e-01, 2.3305e-03, 2.4354e-01,
        2.0181e-01, 1.7366e-02, 6.8698e-03, 2.0877e-02, 5.9373e-02, 5.4642e-01,
        1.0619e+00, 1.5515e-01, 9.7880e-03, 1.1270e-01, 2.6675e-01, 1.0006e-01,
        6.9592e-03, 4.2041e-01, 1.5744e-01, 1.3351e-02, 2.5903e-02, 5.4351e-03,
        2.9984e-02, 1.2977e-02, 1.5638e-01, 2.8758e-01, 8.3624e-02, 1.0649e-02,
        2.0443e-02, 1.6772e-02, 4.2791e-02, 2.4311e-01, 4.0504e-02, 5.0209e-01,
        8.2414e-02, 4.0840e-03, 5.1303e-02, 3.3520e-01, 5.4171e-01, 2.3463e-01,
        4.8909e-01, 2.3438e-01, 1.7701e-01, 2.0837e-03, 4.9877e-01, 1.9168e-01,
        3.0147e-02, 8.9675e-02, 1.1351e-01, 1.3440e-03])
mlp.net.0.batch_norm.running_var tensor([0.1012, 0.0458, 0.1422, 0.0253, 0.1899, 0.1226, 0.0494, 0.0262, 0.0387,
        0.2385, 0.0251, 0.2056, 0.0386, 0.1374, 0.0275, 0.1917, 0.0255, 0.0902,
        0.0859, 0.0285, 0.0260, 0.0310, 0.0427, 0.2020, 0.2546, 0.0773, 0.0287,
        0.0560, 0.1090, 0.0580, 0.0273, 0.1249, 0.0861, 0.0297, 0.0305, 0.0263,
        0.0347, 0.0273, 0.0832, 0.0975, 0.0445, 0.0284, 0.0291, 0.0296, 0.0393,
        0.1148, 0.0380, 0.1370, 0.0391, 0.0259, 0.0387, 0.1289, 0.0751, 0.1505,
        0.1730, 0.1018, 0.0841, 0.0253, 0.1683, 0.0982, 0.0319, 0.0482, 0.0588,
        0.0254])
mlp.net.0.batch_norm.num_batches_tracked tensor(35)
mlp.net.1.linear.weight tensor([[-0.0184,  0.0656, -0.2443,  ..., -0.1436,  0.0669,  0.0604],
        [ 0.0825, -0.1191,  0.0780,  ..., -0.2125,  0.1907, -0.3317],
        [ 0.0646,  0.1779,  0.0781,  ..., -0.1561,  0.0116,  0.0673],
        ...,
        [-0.2502,  0.0538,  0.1166,  ...,  0.0272,  0.0814,  0.0288],
        [ 0.0886, -0.1075,  0.0233,  ..., -0.0724, -0.0097,  0.0375],
        [ 0.1448,  0.0392, -0.1440,  ...,  0.0214, -0.3152,  0.2718]])
mlp.net.1.linear.bias tensor([-0.1437,  0.0963,  0.0477, -0.0947, -0.0701, -0.0832,  0.0976, -0.0328,
        -0.1280,  0.0572, -0.0955, -0.0004, -0.0532,  0.0842, -0.0379,  0.0209,
        -0.0462,  0.0787,  0.0926,  0.0882,  0.0599, -0.0409,  0.0638, -0.0141,
        -0.0836,  0.1323, -0.0948, -0.0506, -0.1153, -0.0546,  0.0923,  0.0978,
         0.0072,  0.0010, -0.0212, -0.0128, -0.1526, -0.0451,  0.0850,  0.0514,
        -0.1188, -0.0558,  0.0489, -0.0186,  0.0186, -0.1071, -0.0667, -0.0299,
        -0.1250, -0.0835, -0.0469, -0.0318,  0.0538, -0.0752,  0.1193,  0.0307,
        -0.0148, -0.1038,  0.1292, -0.0491, -0.0572,  0.1596, -0.0621, -0.0679])
mlp.net.1.batch_norm.weight tensor([0.7529, 0.7897, 0.7969, 0.8079, 0.8413, 0.8570, 0.8386, 0.8351, 0.7998,
        0.7876, 0.7931, 0.7464, 0.7480, 0.8358, 0.7930, 0.8001, 0.7770, 0.8337,
        0.7485, 0.7726, 0.7530, 0.7525, 0.7855, 0.8000, 0.8510, 0.8142, 0.7514,
        0.7757, 0.7259, 0.7871, 0.8474, 0.7848, 0.8142, 0.8303, 0.7474, 0.8270,
        0.7867, 0.7806, 0.7804, 0.7763, 0.7054, 0.7549, 0.7301, 0.7889, 0.8366,
        0.7380, 0.7752, 0.7224, 0.7692, 0.7690, 0.7800, 0.8332, 0.7707, 0.7617,
        0.7331, 0.7750, 0.7991, 0.7667, 0.8316, 0.7594, 0.7901, 0.8213, 0.7842,
        0.8343])
mlp.net.1.batch_norm.bias tensor([ 0.0456, -0.0327, -0.0078, -0.0487, -0.0529, -0.0133, -0.0081, -0.0160,
        -0.0130,  0.0037,  0.0166,  0.0070, -0.0053,  0.0285,  0.0746, -0.0164,
         0.0183, -0.0349, -0.0270,  0.0331, -0.0367,  0.0101,  0.0645, -0.0420,
         0.0271,  0.0860,  0.0461, -0.0235, -0.0412,  0.0237,  0.0582, -0.0308,
        -0.0237, -0.0080,  0.0032, -0.0232, -0.0137, -0.0341, -0.0750,  0.0121,
        -0.0435, -0.0267, -0.0358,  0.0396,  0.0389,  0.0103, -0.0178,  0.0044,
         0.0299, -0.0617, -0.0344, -0.0486,  0.0142, -0.0372,  0.0326, -0.0185,
         0.0279, -0.0474, -0.0151,  0.0192,  0.0598, -0.0308,  0.0253,  0.0182])
mlp.net.1.batch_norm.running_mean tensor([0.2373, 0.4903, 0.4008, 0.2871, 0.2991, 0.4442, 0.3281, 0.3340, 0.3213,
        0.5513, 0.2684, 0.3000, 0.3991, 0.4344, 0.2824, 0.3541, 0.4008, 0.4493,
        0.4905, 0.4651, 0.3488, 0.2996, 0.4604, 0.3976, 0.4220, 0.5894, 0.3089,
        0.3510, 0.3442, 0.3262, 0.3955, 0.4624, 0.2734, 0.4318, 0.3688, 0.4107,
        0.3957, 0.3298, 0.3940, 0.3015, 0.2391, 0.2879, 0.5051, 0.3487, 0.4135,
        0.2911, 0.4427, 0.4354, 0.2561, 0.3602, 0.3850, 0.3727, 0.5207, 0.2674,
        0.4932, 0.3266, 0.2847, 0.3341, 0.4299, 0.2592, 0.3623, 0.4607, 0.3946,
        0.3581])
mlp.net.1.batch_norm.running_var tensor([0.2910, 0.3345, 0.7492, 0.2803, 0.3782, 0.4731, 0.2423, 0.1964, 0.2884,
        0.5727, 0.2784, 0.1835, 0.3009, 0.3640, 0.5573, 0.3613, 0.3312, 0.4533,
        0.5107, 0.3771, 0.2795, 0.2702, 0.7115, 0.4536, 0.4247, 0.6917, 0.2399,
        0.3615, 0.2773, 0.4744, 0.3534, 0.5727, 0.3073, 0.5273, 0.2746, 0.3235,
        0.6107, 0.3903, 0.3275, 0.2536, 0.1948, 0.3784, 0.5101, 0.3508, 0.3809,
        0.2355, 0.4072, 0.5356, 0.4402, 0.3431, 0.3230, 0.3542, 0.6503, 0.2518,
        0.4918, 0.4941, 0.2462, 0.3534, 0.3432, 0.2559, 0.3383, 0.3432, 0.2870,
        0.5139])
mlp.net.1.batch_norm.num_batches_tracked tensor(35)
mlp.net.2.linear.weight tensor([[-0.0008, -0.3340, -0.0084,  ...,  0.1280, -0.0148,  0.0308],
        [ 0.0236,  0.1719,  0.1236,  ...,  0.0050,  0.0930,  0.1938],
        [ 0.1315,  0.1162,  0.0245,  ...,  0.1316,  0.1778, -0.1044],
        ...,
        [-0.0447,  0.0338, -0.2200,  ..., -0.0045,  0.3228, -0.1218],
        [-0.0332,  0.0970, -0.1215,  ...,  0.2089, -0.1511, -0.1225],
        [-0.1189,  0.1994, -0.1716,  ..., -0.1298,  0.0929, -0.1969]])
mlp.net.2.linear.bias tensor([ 0.1147, -0.0615,  0.0653, -0.0880,  0.0608, -0.0782, -0.0154, -0.1117,
        -0.0734, -0.0082,  0.0779, -0.0263, -0.0188,  0.0041,  0.1020, -0.0747,
         0.0706, -0.0552, -0.0455,  0.0419, -0.0271,  0.0025, -0.0746,  0.0440,
        -0.0333,  0.0557, -0.0533, -0.1133, -0.0698, -0.0171,  0.0153, -0.0386,
        -0.0489, -0.0546, -0.0513,  0.0042, -0.0526, -0.0935, -0.0012,  0.0034,
         0.1006,  0.1018, -0.0348,  0.1231,  0.0650,  0.0178,  0.0476,  0.0595,
        -0.0471,  0.0337,  0.0785, -0.0108, -0.0427, -0.0037, -0.1221, -0.1205,
        -0.0719, -0.0859, -0.0354,  0.0596, -0.1197, -0.0210,  0.0665,  0.0364])
mlp.net.2.batch_norm.weight tensor([0.7792, 0.7318, 0.8041, 0.8194, 0.8473, 0.7534, 0.7888, 0.7716, 0.7591,
        0.7532, 0.8058, 0.8529, 0.7964, 0.7277, 0.7693, 0.7879, 0.8199, 0.7834,
        0.7921, 0.8218, 0.7646, 0.8091, 0.7682, 0.7307, 0.7495, 0.8241, 0.7418,
        0.7830, 0.8676, 0.7861, 0.8548, 0.7907, 0.8267, 0.8297, 0.8067, 0.8203,
        0.7626, 0.8029, 0.7493, 0.7429, 0.7917, 0.7144, 0.7768, 0.7953, 0.7858,
        0.7669, 0.7468, 0.7689, 0.7360, 0.7275, 0.7671, 0.7988, 0.7974, 0.8088,
        0.7239, 0.8458, 0.7973, 0.7997, 0.8160, 0.7628, 0.7775, 0.8162, 0.7591,
        0.8438])
mlp.net.2.batch_norm.bias tensor([ 0.0460,  0.0025, -0.0176, -0.0360, -0.0015,  0.0573,  0.0803,  0.0043,
         0.0209, -0.0295, -0.0228,  0.0021, -0.0843, -0.0478,  0.0516,  0.0410,
        -0.0094, -0.0011,  0.0329, -0.0075, -0.0336,  0.0337, -0.0297, -0.0208,
         0.0292, -0.0069,  0.0159, -0.0237, -0.0521,  0.0316, -0.0242,  0.0660,
         0.0115,  0.0268, -0.0361, -0.0111, -0.0546, -0.0140,  0.0164,  0.0251,
         0.0238, -0.0073, -0.0248, -0.0531, -0.0168,  0.0280, -0.0400, -0.0244,
         0.0021, -0.0446, -0.0279,  0.0243,  0.0405,  0.0470,  0.0179,  0.0865,
        -0.0317, -0.0109, -0.0060, -0.0132, -0.0073,  0.0789, -0.0465, -0.0501])
mlp.net.2.batch_norm.running_mean tensor([0.4219, 0.3887, 0.6545, 0.3451, 0.4091, 0.3318, 0.4250, 0.2662, 0.3967,
        0.3036, 0.6141, 0.2899, 0.3466, 0.4456, 0.4416, 0.3039, 0.3756, 0.3154,
        0.3840, 0.4261, 0.3713, 0.3180, 0.3312, 0.5733, 0.3248, 0.4265, 0.4181,
        0.2280, 0.4147, 0.3597, 0.3686, 0.3893, 0.4330, 0.3783, 0.2525, 0.3993,
        0.2611, 0.3333, 0.3519, 0.4051, 0.6273, 0.5205, 0.3596, 0.4548, 0.4349,
        0.4630, 0.4242, 0.3849, 0.2963, 0.4774, 0.3527, 0.4735, 0.2983, 0.3842,
        0.2493, 0.2529, 0.3846, 0.4979, 0.3790, 0.4059, 0.3778, 0.3719, 0.4370,
        0.3454])
mlp.net.2.batch_norm.running_var tensor([0.3241, 0.4988, 0.9315, 0.4569, 0.6514, 0.2594, 0.4213, 0.3284, 0.8898,
        0.2117, 0.6091, 0.2555, 0.6965, 0.3687, 0.4308, 0.2295, 0.4940, 0.2990,
        0.2764, 0.3098, 0.2954, 0.3109, 0.2608, 0.6608, 0.3246, 0.3795, 0.3719,
        0.2140, 0.4545, 0.5097, 0.2845, 0.5598, 0.5780, 0.4393, 0.2577, 0.3567,
        0.1842, 0.4866, 0.3193, 0.5348, 0.9003, 0.5470, 0.3669, 0.4176, 0.4007,
        0.4571, 0.4160, 0.3862, 0.3667, 0.5089, 0.2709, 0.6100, 0.2848, 0.2304,
        0.2859, 0.3552, 0.3263, 0.6941, 0.3509, 0.3866, 0.5762, 0.4041, 0.2958,
        0.2326])
mlp.net.2.batch_norm.num_batches_tracked tensor(35)
mlp.net.3.linear.weight tensor([[ 0.3978,  0.0024, -0.0364,  ...,  0.1653, -0.0789,  0.0365],
        [ 0.2075,  0.0862, -0.0842,  ...,  0.1314, -0.1608, -0.2496],
        [ 0.2708,  0.0477,  0.1010,  ...,  0.1393,  0.0179,  0.0115],
        ...,
        [ 0.0318,  0.1702, -0.0429,  ...,  0.2233, -0.0131,  0.0419],
        [-0.3085,  0.1068,  0.0251,  ..., -0.0899,  0.1095, -0.2484],
        [ 0.1640,  0.1015, -0.0776,  ..., -0.0366, -0.1420,  0.0426]])
mlp.net.3.linear.bias tensor([ 0.0450, -0.0868, -0.0786,  0.0343, -0.0021,  0.0614,  0.0437, -0.0798,
        -0.0255, -0.0219, -0.0717,  0.0365,  0.0455, -0.0108,  0.0258,  0.1335,
        -0.0053, -0.0414,  0.0718, -0.0251, -0.0329, -0.0926, -0.0314,  0.1409,
        -0.0057, -0.0510, -0.0676, -0.0499, -0.0340,  0.0440, -0.1150, -0.1076,
        -0.0083,  0.0239, -0.1030,  0.0704,  0.0303, -0.0327,  0.1032, -0.0215,
        -0.0657, -0.0354,  0.1346, -0.0658, -0.0481,  0.0727,  0.0391,  0.1129,
         0.0848, -0.0282, -0.0129, -0.0509, -0.0919, -0.0341, -0.0716, -0.0892,
        -0.0909, -0.1166,  0.0342, -0.0982, -0.0705, -0.1284, -0.0990,  0.0646])
mlp.net.3.batch_norm.weight tensor([0.7661, 0.7495, 0.7795, 0.7753, 0.7750, 0.7884, 0.7426, 0.8369, 0.7836,
        0.7433, 0.6923, 0.7679, 0.7527, 0.7744, 0.7368, 0.8118, 0.7219, 0.7653,
        0.7741, 0.7377, 0.7928, 0.7782, 0.7892, 0.7602, 0.7583, 0.7261, 0.7310,
        0.7947, 0.7764, 0.7753, 0.7500, 0.7659, 0.7622, 0.7267, 0.7865, 0.7887,
        0.7604, 0.7660, 0.8099, 0.7470, 0.7842, 0.7331, 0.8087, 0.7232, 0.7452,
        0.7517, 0.7402, 0.7694, 0.7311, 0.7408, 0.7464, 0.7969, 0.7811, 0.7769,
        0.7387, 0.7268, 0.7576, 0.7315, 0.7491, 0.7589, 0.7273, 0.7887, 0.7575,
        0.7180])
mlp.net.3.batch_norm.bias tensor([-8.7093e-03, -1.2062e-02, -1.2071e-02, -9.4477e-05, -9.3630e-03,
        -1.0256e-02,  3.0144e-02,  1.3466e-02,  1.8311e-02,  1.3567e-02,
         7.3849e-02,  1.0981e-02, -1.4950e-02,  1.3252e-02,  4.0132e-02,
         1.7453e-02, -1.3186e-02,  2.6884e-02, -3.6094e-02,  9.3991e-03,
        -1.1982e-02, -1.1544e-02, -1.2482e-02,  1.3666e-02, -1.3973e-02,
         1.7244e-02,  2.9212e-02,  1.7250e-02, -1.0080e-02, -1.3370e-02,
        -1.1184e-02,  1.4180e-02,  1.6536e-02,  8.0964e-02,  1.2533e-02,
         1.4472e-02,  8.7930e-03, -9.2129e-03,  1.4658e-02,  2.8522e-02,
        -1.2843e-02, -9.5322e-03, -3.1011e-03,  3.7473e-03, -1.4629e-02,
         9.6810e-03, -8.2653e-03,  1.8016e-02, -5.9772e-02,  1.8070e-02,
        -1.3467e-02,  1.1540e-02,  1.2263e-02,  2.0320e-04,  2.4302e-03,
        -9.4503e-03, -1.2797e-02, -6.5162e-03, -1.1921e-02, -1.4089e-02,
        -2.2574e-03,  1.0559e-02, -9.6533e-03, -1.3605e-02])
mlp.net.3.batch_norm.running_mean tensor([0.3052, 0.2807, 0.2893, 0.4451, 0.4313, 0.4846, 0.3398, 0.4683, 0.3888,
        0.3940, 0.3177, 0.4003, 0.4345, 0.3483, 0.5354, 0.4993, 0.4046, 0.3380,
        0.4098, 0.4701, 0.3763, 0.3217, 0.4944, 0.6874, 0.5341, 0.3672, 0.3050,
        0.4046, 0.3459, 0.5245, 0.5119, 0.2753, 0.4677, 0.3981, 0.3190, 0.4722,
        0.4419, 0.3533, 0.3608, 0.3909, 0.3271, 0.3768, 0.4274, 0.2433, 0.3161,
        0.3773, 0.4793, 0.4093, 0.3718, 0.4106, 0.3846, 0.3045, 0.3452, 0.2855,
        0.3693, 0.3314, 0.4108, 0.4181, 0.3627, 0.3463, 0.4356, 0.3398, 0.3969,
        0.4673])
mlp.net.3.batch_norm.running_var tensor([0.1999, 0.3105, 0.2160, 0.4948, 0.2970, 0.3892, 0.2554, 0.5199, 0.3943,
        0.5998, 0.5065, 0.4011, 0.9422, 0.3430, 0.6428, 0.6446, 0.7265, 0.3074,
        0.4679, 0.5888, 0.4631, 0.3779, 0.5523, 1.0571, 0.5529, 0.4790, 0.4533,
        0.3906, 0.4648, 0.5028, 0.8888, 0.2734, 0.4608, 0.3321, 0.3209, 0.4896,
        0.4396, 0.5597, 0.2709, 0.3894, 0.2840, 0.5115, 0.2719, 0.2608, 0.3343,
        0.2899, 0.8500, 0.3539, 0.2828, 0.5891, 0.4858, 0.2556, 0.2958, 0.2320,
        0.4618, 0.3609, 0.5732, 0.7303, 0.3512, 0.5804, 0.4933, 0.2994, 0.6494,
        0.4036])
mlp.net.3.batch_norm.num_batches_tracked tensor(35)
mlp.net.4.weight tensor([[-0.0009, -0.0440, -0.0215, -0.0244,  0.0566, -0.0967, -0.0092,  0.1368,
          0.0529,  0.0319, -0.0066,  0.0435, -0.0544,  0.0502, -0.0177,  0.0937,
         -0.0222,  0.0182, -0.0624,  0.0188, -0.0682, -0.0243, -0.0790,  0.0603,
         -0.0472,  0.0170,  0.0211,  0.0352, -0.0365, -0.0599, -0.0526,  0.0831,
          0.0158,  0.0298,  0.0944, -0.0372,  0.0763, -0.0402,  0.0457,  0.0314,
         -0.0508, -0.0351, -0.0676, -0.0238, -0.0516,  0.0523, -0.0601,  0.0507,
          0.0268,  0.0509, -0.0498,  0.0349,  0.0898,  0.0323, -0.0164, -0.0172,
         -0.0428, -0.0403, -0.0393, -0.0098, -0.0236,  0.0412, -0.0590,  0.0058]])
