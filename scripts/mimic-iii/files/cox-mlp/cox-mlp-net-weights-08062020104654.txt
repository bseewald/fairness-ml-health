Weights: 
embeddings.embeddings.0.weight tensor([[-0.5041, -0.1499],
        [-0.5138, -0.5008],
        [-0.1450, -0.0300],
        [-0.0304, -0.5593]])
embeddings.embeddings.1.weight tensor([[-0.0193,  0.1788],
        [ 0.0161,  0.1211],
        [-0.2525, -0.3371],
        [-0.1298, -0.3893],
        [ 0.5219, -0.1626]])
embeddings.embeddings.2.weight tensor([[-0.1459, -0.1700, -0.1762],
        [-0.3348, -0.2554, -0.2871],
        [ 0.1044, -0.2876, -0.1048],
        [ 0.0676, -0.3460,  0.0697],
        [ 0.0159,  0.0108, -0.3494],
        [-0.2558,  0.1376, -0.2445]])
embeddings.embeddings.3.weight tensor([[ 0.3260,  0.2769],
        [-0.1619, -0.3429],
        [ 0.4836, -0.2720],
        [ 0.5781,  0.2460]])
embeddings.embeddings.4.weight tensor([[-0.0743,  0.4225],
        [ 0.5036,  0.0195],
        [-0.1943,  0.4271],
        [ 0.1005, -0.4701]])
mlp.net.0.linear.weight tensor([[-0.3541,  0.0649, -0.2259,  ...,  0.1250, -0.1793, -0.1791],
        [ 0.4688,  0.0892,  0.1020,  ..., -0.3477,  0.0806,  0.4918],
        [-0.2538,  0.1619,  0.1180,  ...,  0.0402, -0.5404,  0.5185],
        ...,
        [ 0.1648,  0.4245,  0.5361,  ...,  0.4027,  0.0386,  0.3223],
        [ 0.1421,  0.0890, -0.5926,  ...,  0.2590, -0.3657, -0.4791],
        [ 0.0178, -0.0697,  0.1872,  ...,  0.1288, -0.0054,  0.0216]])
mlp.net.0.linear.bias tensor([-0.0708,  0.1391, -0.0094, -0.1973,  0.0031, -0.0158, -0.1498, -0.0705,
         0.0928, -0.1031,  0.1464,  0.0810,  0.0893,  0.1865, -0.0366,  0.1561,
        -0.0895,  0.1182, -0.1674, -0.1708,  0.1233,  0.0753,  0.0023, -0.1372,
        -0.0273, -0.1760,  0.1315,  0.1332, -0.1454, -0.0908,  0.0258,  0.1926,
        -0.1609,  0.0477,  0.1370,  0.0026,  0.0906, -0.1245,  0.1721,  0.1022,
         0.0138,  0.1503,  0.1646,  0.0661,  0.0023, -0.1458,  0.0088,  0.1689,
         0.0564, -0.0030,  0.1859, -0.1720, -0.1928, -0.0437, -0.0343, -0.0845,
        -0.1534, -0.1590,  0.1531,  0.1440, -0.1087, -0.1782, -0.0956,  0.0086])
mlp.net.0.batch_norm.weight tensor([0.8681, 0.8683, 0.8681, 0.8680, 0.8680, 0.8681, 0.8683, 0.8681, 0.8680,
        0.8681, 0.8682, 0.8683, 0.8683, 0.8681, 0.8680, 0.8683, 0.8683, 0.8680,
        0.8680, 0.8681, 0.8683, 0.8683, 0.8680, 0.8681, 0.8683, 0.8680, 0.8680,
        0.8681, 0.8681, 0.8681, 0.8680, 0.8683, 0.8680, 0.8681, 0.8682, 0.8683,
        0.8681, 0.8680, 0.8683, 0.8683, 0.8683, 0.8683, 0.8683, 0.8681, 0.8681,
        0.8682, 0.8682, 0.8680, 0.8683, 0.8683, 0.8680, 0.8681, 0.8681, 0.8683,
        0.8683, 0.8681, 0.8681, 0.8680, 0.8683, 0.8681, 0.8683, 0.8683, 0.8681,
        0.8683])
mlp.net.0.batch_norm.bias tensor([ 1.4529e-04, -1.4291e-04,  1.3088e-04, -1.3992e-04,  1.4335e-04,
        -1.3776e-04,  1.3729e-04, -6.4174e-05,  1.3677e-04, -1.4582e-04,
         7.5192e-05, -1.2766e-04,  1.4166e-04,  9.4919e-05,  1.4318e-04,
        -1.4320e-04, -1.4075e-04,  1.4233e-04,  6.6717e-05, -1.4650e-04,
        -1.4009e-04, -1.4344e-04,  1.3714e-04,  9.8321e-05,  1.4539e-04,
        -1.4127e-04,  1.3531e-04, -7.9619e-05, -1.4052e-04, -1.4285e-04,
         9.2572e-05, -6.3592e-05,  1.1841e-04,  6.1339e-05,  8.9650e-05,
        -6.4926e-05,  1.2191e-04, -6.3580e-05,  1.4357e-04, -1.2358e-04,
        -7.2732e-05,  6.8448e-05,  9.6583e-05, -1.1693e-04,  1.3851e-04,
         6.1903e-05,  8.7404e-05,  1.2321e-04,  6.5391e-05, -7.5665e-05,
        -1.1790e-04,  6.2319e-05, -1.3601e-04,  7.8928e-05, -1.4221e-04,
         1.0623e-04,  6.2436e-05, -1.3836e-04,  7.7410e-05, -1.3451e-04,
         1.0459e-04, -1.3254e-04,  1.4510e-04, -1.4149e-04])
mlp.net.0.batch_norm.running_mean tensor([9.3945e-03, 1.8101e-01, 4.0260e-02, 5.9137e-02, 4.0583e-02, 1.7836e-02,
        4.0453e-03, 6.3525e-02, 1.2676e-01, 7.8810e-03, 1.5210e-01, 9.9203e-03,
        2.1690e-03, 1.5982e-02, 7.6956e-02, 2.1520e-02, 1.2417e-03, 2.9238e-02,
        4.1308e-02, 9.4204e-04, 1.9369e-02, 8.9390e-05, 1.3209e-01, 3.8582e-05,
        1.9741e-02, 1.0895e-01, 1.1749e-01, 1.9166e-02, 1.6895e-01, 2.2215e-01,
        5.4957e-04, 7.2158e-02, 1.8413e-01, 2.1103e-01, 0.0000e+00, 1.3908e-01,
        1.9819e-02, 1.5025e-02, 3.0247e-02, 1.2742e-02, 6.4700e-02, 1.0930e-01,
        5.7096e-02, 1.5795e-02, 5.6526e-02, 1.4362e-01, 7.4859e-02, 1.6982e-01,
        8.6079e-03, 8.0582e-04, 9.7132e-02, 2.5721e-03, 9.2707e-03, 7.3083e-02,
        3.2192e-02, 7.4591e-02, 1.1018e-01, 1.8882e-02, 4.7741e-02, 1.7010e-02,
        5.0138e-04, 2.0370e-01, 1.2571e-03, 1.3800e-01])
mlp.net.0.batch_norm.running_var tensor([0.8123, 0.8594, 0.8209, 0.8245, 0.8296, 0.8149, 0.8108, 0.8220, 0.8415,
        0.8127, 0.8439, 0.8169, 0.8107, 0.8166, 0.8384, 0.8169, 0.8103, 0.8197,
        0.8225, 0.8102, 0.8147, 0.8100, 0.8386, 0.8100, 0.8156, 0.8327, 0.8354,
        0.8166, 0.8388, 0.8579, 0.8101, 0.8426, 0.8479, 0.8445, 0.8100, 0.8325,
        0.8182, 0.8155, 0.8182, 0.8162, 0.8368, 0.8298, 0.8425, 0.8177, 0.8267,
        0.8403, 0.8277, 0.8548, 0.8139, 0.8102, 0.8341, 0.8108, 0.8138, 0.8311,
        0.8198, 0.8273, 0.8492, 0.8168, 0.8217, 0.8148, 0.8101, 0.8522, 0.8103,
        0.8396])
mlp.net.0.batch_norm.num_batches_tracked tensor(2)
mlp.net.1.linear.weight tensor([[ 0.2576,  0.1802, -0.3422,  ...,  0.0438,  0.0009, -0.2659],
        [-0.0158,  0.0907,  0.2624,  ..., -0.0347,  0.2044,  0.0706],
        [ 0.2352, -0.0957, -0.1121,  ...,  0.1011, -0.0958,  0.1638],
        ...,
        [ 0.0145, -0.0053, -0.1581,  ..., -0.0253, -0.1496,  0.0022],
        [-0.0759, -0.1738,  0.0058,  ...,  0.0291,  0.0928,  0.2003],
        [-0.0526, -0.0789,  0.1020,  ...,  0.1298,  0.0820, -0.2082]])
mlp.net.1.linear.bias tensor([-0.0424,  0.0989,  0.1079,  0.1023, -0.0583, -0.1052, -0.0824, -0.0778,
         0.0357, -0.0582, -0.0804,  0.0468, -0.0371,  0.0293,  0.0254,  0.0916,
         0.1032,  0.0542, -0.0268,  0.0770,  0.0876, -0.0625, -0.0333, -0.0540,
         0.0354,  0.0345,  0.0036, -0.0590, -0.0636,  0.0140, -0.0100,  0.0166,
        -0.0176, -0.0438, -0.1065, -0.0609, -0.0306, -0.0011,  0.0656, -0.0455,
         0.0747, -0.0254,  0.0775, -0.1022,  0.0817,  0.0344, -0.0885,  0.0948,
        -0.0020,  0.0073, -0.0716,  0.0997, -0.0693,  0.0217,  0.0337,  0.0936,
         0.0257,  0.0448,  0.0196, -0.0502, -0.0026, -0.0510,  0.0540,  0.1055])
mlp.net.1.batch_norm.weight tensor([0.8680, 0.8682, 0.8681, 0.8683, 0.8682, 0.8681, 0.8683, 0.8683, 0.8681,
        0.8680, 0.8683, 0.8683, 0.8683, 0.8680, 0.8680, 0.8680, 0.8680, 0.8680,
        0.8683, 0.8681, 0.8681, 0.8681, 0.8683, 0.8681, 0.8681, 0.8683, 0.8680,
        0.8681, 0.8683, 0.8683, 0.8683, 0.8681, 0.8683, 0.8683, 0.8683, 0.8682,
        0.8681, 0.8680, 0.8680, 0.8682, 0.8680, 0.8681, 0.8683, 0.8680, 0.8680,
        0.8683, 0.8683, 0.8681, 0.8680, 0.8680, 0.8681, 0.8680, 0.8683, 0.8683,
        0.8680, 0.8683, 0.8680, 0.8683, 0.8681, 0.8683, 0.8681, 0.8681, 0.8683,
        0.8682])
mlp.net.1.batch_norm.bias tensor([-9.1087e-05,  1.0669e-04,  7.4743e-05, -1.4652e-04,  1.4647e-04,
        -1.4651e-04, -9.7036e-05,  1.4574e-04,  1.4650e-04, -9.4372e-05,
        -1.4577e-04,  8.8843e-05, -1.4636e-04,  1.4044e-04,  1.4118e-04,
         1.4567e-04, -1.3661e-04, -6.7396e-05,  1.4444e-04, -7.2665e-05,
        -1.3806e-04, -1.3752e-04, -1.3820e-04, -1.4641e-04,  1.2090e-04,
         1.4509e-04, -9.2409e-05, -1.3329e-04,  1.3423e-04,  1.2026e-04,
        -1.4091e-04,  6.2500e-05, -1.3461e-04,  1.3697e-04, -1.3604e-04,
         1.3964e-04, -7.0554e-05,  1.3997e-04,  1.3721e-04,  1.4631e-04,
         1.4636e-04,  8.1432e-05, -1.3779e-04, -1.4535e-04, -6.6629e-05,
        -6.3367e-05,  6.9123e-05,  1.4652e-04, -5.9583e-05, -1.1942e-04,
        -1.4410e-04,  1.4522e-04,  1.0997e-04, -1.3596e-04, -6.7233e-05,
        -6.3324e-05,  1.2277e-04,  8.1702e-05, -6.9178e-05, -1.4589e-04,
         1.4044e-04, -1.4232e-04, -1.4382e-04,  1.4568e-04])
mlp.net.1.batch_norm.running_mean tensor([0.1091, 0.1569, 0.1381, 0.1524, 0.1084, 0.1125, 0.0906, 0.1408, 0.1349,
        0.1000, 0.0998, 0.0995, 0.1150, 0.1421, 0.1227, 0.1406, 0.1435, 0.1325,
        0.1128, 0.1361, 0.1269, 0.1008, 0.1259, 0.1266, 0.1223, 0.1078, 0.1215,
        0.1149, 0.1314, 0.1256, 0.1113, 0.1494, 0.1325, 0.1424, 0.1277, 0.1500,
        0.1005, 0.1247, 0.1159, 0.0979, 0.1405, 0.1273, 0.1566, 0.1116, 0.1425,
        0.1418, 0.1212, 0.1246, 0.1187, 0.1259, 0.1087, 0.1447, 0.1101, 0.1261,
        0.1449, 0.1552, 0.1417, 0.1108, 0.1429, 0.1143, 0.1229, 0.1432, 0.1303,
        0.1261])
mlp.net.1.batch_norm.running_var tensor([0.9797, 1.0746, 1.0471, 1.0169, 0.9674, 1.0225, 0.9220, 1.0394, 0.9894,
        0.9491, 0.9984, 0.9275, 1.0106, 1.0022, 1.0383, 1.1499, 1.0369, 1.0022,
        1.0426, 1.0450, 1.0026, 0.9529, 1.0094, 1.0055, 1.0256, 1.0100, 0.9641,
        0.9803, 1.0281, 0.9726, 0.9837, 1.1072, 1.0277, 1.0505, 1.0008, 1.0379,
        0.9233, 1.0240, 0.9744, 0.9761, 1.0019, 1.1002, 1.0695, 1.0468, 1.0273,
        1.0512, 1.0305, 1.0043, 1.0422, 1.0115, 0.9685, 1.0715, 0.9493, 1.0293,
        1.0528, 1.1983, 1.0387, 0.9896, 1.1350, 0.9544, 1.0440, 1.0425, 1.0329,
        0.9649])
mlp.net.1.batch_norm.num_batches_tracked tensor(2)
mlp.net.2.linear.weight tensor([[-0.5160, -0.0893, -0.1034,  ..., -0.3400, -0.0733,  0.2016],
        [ 0.1534, -0.3077,  0.1370,  ..., -0.1830,  0.0407,  0.1882],
        [-0.3094, -0.0134, -0.0567,  ...,  0.0171,  0.0319,  0.0014],
        ...,
        [-0.0158, -0.0585,  0.1338,  ..., -0.0733,  0.2219,  0.0196],
        [ 0.2635, -0.0963,  0.1008,  ...,  0.0703, -0.0593, -0.0600],
        [ 0.3862,  0.0052,  0.3635,  ..., -0.0565,  0.1716, -0.2173]])
mlp.net.2.linear.bias tensor([ 0.0448, -0.0814,  0.0967, -0.0963,  0.0723,  0.0598, -0.0402, -0.1022,
        -0.0604,  0.0595,  0.0897, -0.0729,  0.0247, -0.0210, -0.0448,  0.1081,
        -0.0582,  0.0221,  0.0812,  0.0142, -0.0358,  0.1050, -0.0046,  0.0655,
         0.0547,  0.0307, -0.0520,  0.0464,  0.0787,  0.0800,  0.0476,  0.0389,
         0.1037, -0.0497, -0.0119, -0.0578,  0.0073,  0.0836, -0.0147,  0.0121,
        -0.0473, -0.0259,  0.0038,  0.0838, -0.0352,  0.1041, -0.0104,  0.0787,
        -0.0462,  0.0745,  0.0911, -0.0849,  0.0093,  0.0049,  0.0495, -0.0419,
         0.0075, -0.0839, -0.0429,  0.0434,  0.0593, -0.0318,  0.0347,  0.0428])
mlp.net.2.batch_norm.weight tensor([0.8683, 0.8681, 0.8683, 0.8680, 0.8680, 0.8681, 0.8683, 0.8681, 0.8680,
        0.8683, 0.8680, 0.8683, 0.8681, 0.8683, 0.8683, 0.8681, 0.8680, 0.8683,
        0.8683, 0.8683, 0.8680, 0.8680, 0.8680, 0.8683, 0.8681, 0.8680, 0.8681,
        0.8681, 0.8683, 0.8680, 0.8683, 0.8683, 0.8683, 0.8681, 0.8683, 0.8683,
        0.8683, 0.8681, 0.8683, 0.8683, 0.8683, 0.8681, 0.8682, 0.8681, 0.8683,
        0.8682, 0.8680, 0.8683, 0.8683, 0.8680, 0.8683, 0.8683, 0.8680, 0.8681,
        0.8683, 0.8680, 0.8681, 0.8683, 0.8681, 0.8683, 0.8680, 0.8683, 0.8681,
        0.8683])
mlp.net.2.batch_norm.bias tensor([-7.4183e-05, -1.2487e-04, -5.9718e-05,  1.4154e-04, -6.1490e-05,
         1.4222e-04,  1.4550e-04, -1.4077e-04,  1.3879e-04, -1.3964e-04,
         1.3611e-04, -1.3503e-04,  1.2722e-04, -1.4538e-04,  1.1641e-04,
        -5.9675e-05,  7.4140e-05, -1.4651e-04, -6.3323e-05,  1.2334e-04,
         1.0059e-04,  1.4277e-04, -6.2723e-05, -1.3717e-04,  6.6908e-05,
        -1.3478e-04, -1.4183e-04, -1.2770e-04, -9.0479e-05, -1.4256e-04,
         1.2534e-04,  1.2523e-04, -9.6759e-05, -6.7534e-05, -7.6220e-05,
        -7.0583e-05, -1.3656e-04,  7.6346e-05, -1.4493e-04,  1.4386e-04,
         9.3038e-05,  1.4582e-04, -1.3967e-04,  7.6495e-05, -1.4434e-04,
        -1.4586e-04,  1.4098e-04,  6.4362e-05, -1.1073e-04, -6.6725e-05,
         1.3716e-04,  1.2250e-04,  1.4651e-04, -7.0002e-05, -1.3058e-04,
        -1.3607e-04,  7.2638e-05, -1.4352e-04, -1.3408e-04,  1.3921e-04,
        -1.4334e-04,  8.3037e-05,  1.4286e-04, -1.4250e-04])
mlp.net.2.batch_norm.running_mean tensor([0.1311, 0.1154, 0.1250, 0.1189, 0.1539, 0.1457, 0.1197, 0.1238, 0.1280,
        0.1042, 0.1212, 0.1199, 0.1355, 0.1046, 0.1284, 0.1122, 0.1195, 0.1248,
        0.1387, 0.1425, 0.1005, 0.1428, 0.1167, 0.1192, 0.1434, 0.1328, 0.1062,
        0.1323, 0.1138, 0.1187, 0.1439, 0.1300, 0.1131, 0.1261, 0.1130, 0.1470,
        0.1615, 0.1558, 0.1168, 0.1181, 0.1193, 0.1135, 0.1180, 0.1342, 0.1211,
        0.1294, 0.1235, 0.1384, 0.1239, 0.1235, 0.1198, 0.1354, 0.1255, 0.1417,
        0.1626, 0.1332, 0.1416, 0.1152, 0.1316, 0.1412, 0.1043, 0.1152, 0.1342,
        0.1035])
mlp.net.2.batch_norm.running_var tensor([1.0068, 1.0035, 1.0014, 1.0430, 1.1387, 1.1140, 1.0108, 1.0342, 1.0150,
        0.9611, 0.9888, 0.9996, 1.0213, 0.9784, 1.0013, 0.9560, 1.0022, 0.9888,
        0.9946, 1.0433, 0.9799, 1.0956, 1.0075, 0.9620, 1.1250, 0.9753, 0.9875,
        1.0305, 1.0018, 0.9888, 1.0724, 0.9828, 0.9928, 1.1107, 1.0560, 1.1565,
        1.2397, 1.0886, 0.9963, 0.9613, 1.0731, 0.9940, 1.0027, 1.0706, 0.9777,
        1.0251, 1.0087, 1.0765, 1.0102, 0.9589, 0.9978, 1.1162, 0.9890, 1.0038,
        1.2517, 1.1347, 1.0416, 1.0116, 1.0050, 1.0683, 0.9548, 1.0279, 1.1175,
        0.9365])
mlp.net.2.batch_norm.num_batches_tracked tensor(2)
mlp.net.3.linear.weight tensor([[-0.0132,  0.0917,  0.1310,  ..., -0.0454,  0.0221,  0.1226],
        [ 0.0710, -0.0973, -0.0293,  ..., -0.0399, -0.1088, -0.0092],
        [-0.0405, -0.1092,  0.1885,  ...,  0.2101,  0.0788,  0.1130],
        ...,
        [-0.1353,  0.0645,  0.1090,  ..., -0.0116, -0.1406, -0.0050],
        [-0.3374,  0.1737,  0.0865,  ..., -0.1361, -0.1414,  0.0247],
        [-0.2288,  0.1255,  0.1704,  ..., -0.0315, -0.1826, -0.0281]])
mlp.net.3.linear.bias tensor([-0.1078,  0.0986,  0.0125,  0.0445, -0.0282,  0.0879,  0.0695, -0.0556,
         0.1048,  0.0956, -0.0901,  0.0794,  0.0195,  0.0782,  0.0417,  0.0964,
         0.1067, -0.0429,  0.0159,  0.0390,  0.0774, -0.0621,  0.0328,  0.0455,
         0.0911, -0.0110, -0.0263,  0.0089,  0.0334, -0.0980,  0.0187,  0.0821,
        -0.1067, -0.0717, -0.0878,  0.0432,  0.0185,  0.0622, -0.0180, -0.0328,
        -0.0002,  0.0268, -0.0687,  0.0880, -0.0921,  0.0183,  0.0546,  0.0722,
         0.0362, -0.1022, -0.0053, -0.0038,  0.0304,  0.1059, -0.1011,  0.0615,
        -0.0608, -0.1019, -0.0586,  0.0449, -0.0974, -0.0436,  0.0695, -0.0978])
mlp.net.3.batch_norm.weight tensor([0.8680, 0.8680, 0.8680, 0.8680, 0.8680, 0.8680, 0.8680, 0.8680, 0.8681,
        0.8680, 0.8681, 0.8683, 0.8680, 0.8681, 0.8680, 0.8683, 0.8683, 0.8680,
        0.8680, 0.8681, 0.8680, 0.8680, 0.8680, 0.8680, 0.8680, 0.8681, 0.8680,
        0.8680, 0.8683, 0.8680, 0.8681, 0.8680, 0.8682, 0.8681, 0.8680, 0.8680,
        0.8680, 0.8680, 0.8683, 0.8683, 0.8680, 0.8680, 0.8683, 0.8680, 0.8681,
        0.8680, 0.8680, 0.8680, 0.8680, 0.8681, 0.8681, 0.8680, 0.8680, 0.8681,
        0.8681, 0.8680, 0.8680, 0.8681, 0.8680, 0.8680, 0.8681, 0.8680, 0.8681,
        0.8683])
mlp.net.3.batch_norm.bias tensor([-1.3626e-04, -1.4103e-04, -7.5377e-05, -6.0774e-05,  1.4220e-04,
        -1.2017e-04,  1.2932e-04, -1.2494e-04, -1.3552e-04, -8.9502e-05,
         1.4207e-04,  1.4128e-04,  1.4480e-04,  6.2871e-05,  1.3137e-04,
        -6.0097e-05, -6.8848e-05, -1.4405e-04,  6.8851e-05,  1.4443e-04,
         1.4156e-04, -1.4652e-04,  1.4467e-04, -1.4645e-04,  8.9911e-05,
        -1.3623e-04,  7.0164e-05,  7.0044e-05,  6.4376e-05, -6.0236e-05,
         7.8591e-05, -1.0357e-04, -6.1211e-05,  1.3724e-04,  1.4282e-04,
        -1.0029e-04,  1.4559e-04, -6.3046e-05,  1.4007e-04,  1.1350e-04,
        -7.4897e-05,  1.3970e-04, -1.2271e-04,  6.1488e-05,  1.4396e-04,
         1.3444e-04, -9.3817e-05,  8.3137e-05, -6.3791e-05,  1.2263e-04,
        -1.4619e-04,  1.0897e-04,  1.4276e-04, -6.1039e-05, -1.2232e-04,
        -1.4563e-04,  1.4462e-04,  1.1314e-04,  1.4333e-04,  8.1015e-05,
        -8.9515e-05,  1.3800e-04,  7.4264e-05, -6.2355e-05])
mlp.net.3.batch_norm.running_mean tensor([0.1063, 0.1340, 0.1279, 0.1328, 0.1202, 0.1304, 0.1193, 0.1295, 0.1177,
        0.1303, 0.1241, 0.1284, 0.1533, 0.1236, 0.1336, 0.1133, 0.1183, 0.1355,
        0.1190, 0.1229, 0.1299, 0.1054, 0.1293, 0.1251, 0.1538, 0.1257, 0.1322,
        0.1497, 0.1329, 0.0982, 0.1384, 0.1458, 0.1162, 0.1359, 0.1160, 0.1395,
        0.1386, 0.1272, 0.1329, 0.1345, 0.1251, 0.1358, 0.1197, 0.1441, 0.1227,
        0.1238, 0.1313, 0.1436, 0.1224, 0.1094, 0.1361, 0.1426, 0.1333, 0.1604,
        0.1049, 0.1190, 0.1472, 0.1101, 0.1122, 0.1341, 0.1228, 0.1276, 0.1223,
        0.1309])
mlp.net.3.batch_norm.running_var tensor([1.0490, 1.0400, 1.0053, 1.0478, 1.0431, 0.9881, 1.0217, 1.0028, 1.0216,
        1.0318, 1.0461, 1.0407, 1.1614, 0.9926, 1.0901, 0.9713, 1.0061, 1.1574,
        1.0602, 0.9669, 1.0279, 0.9963, 1.0487, 1.1106, 1.0975, 1.1448, 1.1073,
        1.0976, 1.0220, 0.9850, 1.1142, 1.1045, 0.9919, 1.0266, 1.0508, 1.0249,
        1.0136, 1.0570, 1.1357, 1.0899, 1.0259, 1.1626, 1.0570, 1.0927, 1.0382,
        1.0846, 1.0600, 1.1091, 1.0222, 1.0495, 1.1584, 1.0961, 1.0241, 1.0773,
        0.9562, 1.0187, 1.0454, 0.9733, 0.9976, 1.0050, 1.0409, 1.0678, 0.9932,
        1.1395])
mlp.net.3.batch_norm.num_batches_tracked tensor(2)
mlp.net.4.weight tensor([[ 0.0819,  0.1069, -0.1062,  0.0270,  0.0773,  0.1035,  0.0589,  0.1013,
         -0.0856,  0.0675, -0.0457,  0.0172, -0.0755,  0.0304,  0.0771,  0.0062,
         -0.1031, -0.0395, -0.0824,  0.1065,  0.0061,  0.0353, -0.0972,  0.0857,
         -0.0950,  0.0592, -0.1040, -0.0580,  0.0036,  0.0046,  0.0083, -0.0635,
         -0.0518, -0.0104, -0.1047, -0.0866, -0.0581, -0.0887, -0.0549, -0.0592,
         -0.0701, -0.0364, -0.0039,  0.0923, -0.0260, -0.0515,  0.0419, -0.0655,
          0.0456, -0.0560, -0.0247,  0.1072, -0.0150,  0.0517, -0.0868,  0.0268,
          0.0998, -0.0602,  0.0134,  0.1002,  0.0332,  0.0861, -0.0549,  0.0180]])
