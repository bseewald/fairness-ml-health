Weights: 
embeddings.embeddings.0.weight tensor([[-0.0329,  0.0267],
        [ 0.0351, -0.0280],
        [ 0.0282, -0.0508],
        [-0.1187,  0.0836]])
embeddings.embeddings.1.weight tensor([[-0.0309,  0.0016],
        [ 0.1388, -0.0197],
        [-0.0667, -0.0786],
        [ 0.1131,  0.0263],
        [-0.0730,  0.0535]])
embeddings.embeddings.2.weight tensor([[-0.0359,  0.0212, -0.0187],
        [ 0.0557,  0.0121,  0.1586],
        [-0.0346,  0.0869, -0.0299],
        [-0.0225, -0.1031, -0.0727],
        [-0.0615,  0.0599,  0.0601],
        [ 0.0815, -0.0110, -0.0441]])
embeddings.embeddings.3.weight tensor([[-0.0444, -0.0187],
        [-0.1295,  0.1144],
        [-0.0050,  0.0330],
        [ 0.1635,  0.0094]])
embeddings.embeddings.4.weight tensor([[ 0.0520,  0.0545],
        [-0.1324, -0.1252],
        [ 0.0275,  0.0682],
        [-0.0514, -0.0076]])
mlp.net.0.linear.weight tensor([[ 0.0108, -0.0356, -0.0065,  ..., -0.0959,  0.0729,  0.0498],
        [ 0.0259,  0.0264,  0.0040,  ...,  0.0639, -0.0514, -0.0805],
        [-0.0077,  0.0049,  0.0290,  ..., -0.0232,  0.1571,  0.1055],
        ...,
        [ 0.0262, -0.0013,  0.0307,  ...,  0.0007, -0.0217, -0.0321],
        [ 0.0313, -0.0696, -0.0022,  ...,  0.0731, -0.0312,  0.0052],
        [-0.0181,  0.0095,  0.0103,  ..., -0.0165, -0.0430,  0.0424]])
mlp.net.0.linear.bias tensor([-0.0746,  0.0144,  0.0007,  0.0526,  0.0133,  0.0044, -0.0124,  0.0528,
        -0.0061,  0.0111,  0.0083, -0.0242, -0.0116,  0.0109, -0.0141, -0.0112,
         0.0202,  0.0276,  0.0054,  0.0595,  0.0323, -0.0085, -0.0413,  0.0429,
        -0.0708, -0.0328,  0.0119,  0.0254, -0.0033,  0.0060,  0.0240, -0.0087,
        -0.0549,  0.0245, -0.0088, -0.0043,  0.0105, -0.0187, -0.0362, -0.0221,
        -0.0046,  0.0400,  0.0486, -0.0026,  0.0267,  0.0111,  0.0095,  0.0063,
         0.0358,  0.0337, -0.0023, -0.0267, -0.0391, -0.0188,  0.0017, -0.0266,
         0.0012,  0.0346,  0.0179,  0.0092, -0.0403, -0.0236,  0.0027,  0.0213])
mlp.net.0.batch_norm.weight tensor([0.0988, 0.0779, 0.0928, 0.1102, 0.0879, 0.0606, 0.1339, 0.0487, 0.1424,
        0.0880, 0.0695, 0.1021, 0.0815, 0.0441, 0.1612, 0.1102, 0.1087, 0.0645,
        0.0369, 0.0915, 0.1006, 0.1050, 0.0907, 0.0191, 0.0712, 0.0511, 0.0745,
        0.0203, 0.0822, 0.1176, 0.0339, 0.0861, 0.0767, 0.0688, 0.0797, 0.0730,
        0.0968, 0.1097, 0.1077, 0.0907, 0.1232, 0.0579, 0.1218, 0.0520, 0.0179,
        0.0879, 0.0365, 0.0943, 0.0158, 0.0419, 0.1351, 0.0361, 0.0930, 0.0759,
        0.0566, 0.1049, 0.0948, 0.0569, 0.1170, 0.1089, 0.0570, 0.0668, 0.0423,
        0.0203])
mlp.net.0.batch_norm.bias tensor([-0.0316,  0.0060, -0.0363,  0.0127, -0.0025, -0.0407, -0.0098, -0.0044,
         0.0073, -0.0197, -0.0163, -0.0580, -0.0082,  0.0158,  0.0105, -0.0061,
         0.0058,  0.0268,  0.0056, -0.0124,  0.0030, -0.0010,  0.0084, -0.0145,
         0.0048,  0.0177,  0.0022,  0.0093,  0.0299, -0.0044, -0.0016,  0.0055,
        -0.0178,  0.0234,  0.0048,  0.0100, -0.0077, -0.0013, -0.0252,  0.0274,
         0.0154,  0.0104,  0.0008,  0.0165,  0.0171, -0.0203,  0.0044,  0.0435,
         0.0098,  0.0043, -0.0136,  0.0082, -0.0032, -0.0337,  0.0203, -0.0314,
         0.0191,  0.0118,  0.0083, -0.0123,  0.0249, -0.0148,  0.0132, -0.0004])
mlp.net.0.batch_norm.running_mean tensor([3.5076e-02, 2.3050e-02, 1.1185e-01, 6.3228e-02, 4.0983e-02, 1.5150e-01,
        2.3372e-02, 8.6744e-02, 9.5917e-03, 2.1596e-02, 7.2735e-02, 3.7584e-02,
        1.0213e-03, 1.9043e-02, 2.7261e-05, 2.1670e-02, 2.8360e-02, 8.7590e-02,
        1.0931e-01, 5.5742e-02, 1.4253e-01, 2.5425e-03, 1.5818e-04, 9.6615e-02,
        1.8591e-04, 1.7693e-03, 1.5596e-02, 8.8069e-02, 3.8309e-02, 3.3092e-02,
        1.2424e-01, 1.1960e-02, 1.2683e-04, 5.6804e-02, 9.3713e-05, 1.0845e-03,
        7.1232e-03, 1.1836e-04, 2.7142e-02, 2.4615e-02, 4.2201e-03, 1.0268e-01,
        3.4825e-02, 4.9241e-02, 4.3337e-02, 1.0074e-01, 2.3247e-02, 1.3514e-02,
        5.8430e-02, 8.7422e-02, 6.9729e-05, 3.7634e-02, 6.5904e-04, 5.5264e-03,
        1.6351e-02, 3.6491e-02, 1.2747e-02, 1.6119e-01, 1.3432e-01, 4.0247e-04,
        1.2993e-03, 4.0709e-03, 5.4805e-02, 8.9674e-02])
mlp.net.0.batch_norm.running_var tensor([9.1205e-04, 8.3100e-04, 1.6417e-03, 7.6414e-04, 1.8398e-03, 2.2788e-03,
        6.3955e-04, 1.2437e-03, 2.6330e-04, 7.5663e-04, 9.5016e-04, 8.4273e-04,
        8.0721e-05, 1.0480e-03, 5.6444e-05, 5.2721e-04, 9.3085e-04, 2.9696e-03,
        1.3323e-03, 1.3475e-03, 1.5444e-03, 1.4698e-04, 6.3756e-05, 1.9859e-03,
        6.5893e-05, 1.2850e-04, 6.4210e-04, 1.1719e-03, 1.5790e-03, 9.0110e-04,
        1.8288e-03, 5.8056e-04, 6.6397e-05, 2.3887e-03, 5.7091e-05, 1.0828e-04,
        3.1095e-04, 6.1375e-05, 7.0401e-04, 6.7411e-04, 2.1784e-04, 1.4109e-03,
        9.4366e-04, 1.0772e-03, 1.1349e-03, 2.2391e-03, 8.6330e-04, 4.7844e-04,
        1.4269e-03, 2.9705e-03, 5.7290e-05, 1.4480e-03, 8.1304e-05, 1.7537e-04,
        7.4457e-04, 5.8342e-04, 4.0682e-04, 3.5024e-03, 1.3787e-03, 7.1015e-05,
        1.0974e-04, 2.2393e-04, 1.4046e-03, 1.5969e-03])
mlp.net.0.batch_norm.num_batches_tracked tensor(93)
mlp.net.1.linear.weight tensor([[ 0.0175, -0.0403,  0.0354,  ...,  0.0045,  0.0085,  0.0065],
        [-0.0262, -0.0086, -0.0349,  ..., -0.0154,  0.0021,  0.0202],
        [ 0.0315, -0.0520,  0.0077,  ..., -0.0435,  0.0117, -0.0225],
        ...,
        [-0.0489,  0.0384, -0.0477,  ...,  0.0003,  0.0230,  0.0004],
        [-0.0489, -0.0210, -0.0372,  ..., -0.0269,  0.0006,  0.0049],
        [ 0.0450, -0.0077,  0.0103,  ..., -0.0378,  0.0081,  0.0296]])
mlp.net.1.linear.bias tensor([ 0.0294, -0.0199,  0.0238,  0.0453,  0.0039, -0.0118,  0.0182,  0.0082,
         0.0392,  0.0419,  0.0017,  0.0355,  0.0407,  0.0151, -0.0149,  0.0149,
         0.0145,  0.0367,  0.0097,  0.0056,  0.0325,  0.0354, -0.0019,  0.0092,
        -0.0150,  0.0461,  0.0041, -0.0009,  0.0813,  0.0065,  0.0256,  0.0407,
         0.0527,  0.0137,  0.0208,  0.0200,  0.0332, -0.0064,  0.0170,  0.0230,
         0.0411,  0.0319, -0.0027,  0.0275,  0.0105,  0.0135,  0.0385,  0.0513,
         0.0154,  0.0258,  0.0088,  0.0458,  0.0835,  0.0366,  0.0023, -0.0057,
         0.0151,  0.0093,  0.0532,  0.0285,  0.0455,  0.0372, -0.0024,  0.0057])
mlp.net.1.batch_norm.weight tensor([0.1272, 0.1948, 0.1964, 0.1130, 0.0958, 0.1462, 0.2218, 0.1940, 0.2149,
        0.0806, 0.2009, 0.1973, 0.1567, 0.2172, 0.1624, 0.2330, 0.1022, 0.2186,
        0.2358, 0.1272, 0.2229, 0.2206, 0.1814, 0.2272, 0.1912, 0.1630, 0.1754,
        0.2182, 0.1812, 0.2097, 0.2336, 0.1753, 0.0785, 0.2128, 0.2150, 0.1538,
        0.1263, 0.2034, 0.1976, 0.1824, 0.2215, 0.1189, 0.2394, 0.2336, 0.2116,
        0.1687, 0.2260, 0.2103, 0.2105, 0.1923, 0.2030, 0.1602, 0.2113, 0.1505,
        0.2032, 0.2206, 0.2120, 0.2227, 0.2235, 0.1774, 0.2307, 0.2312, 0.2208,
        0.2390])
mlp.net.1.batch_norm.bias tensor([-0.0513,  0.0020, -0.0143, -0.0107, -0.0036,  0.0130, -0.0129,  0.0080,
        -0.0380, -0.0068, -0.0023,  0.0538,  0.0108,  0.0330,  0.0032,  0.0016,
         0.0214, -0.0075, -0.0039,  0.0468,  0.0454, -0.0074, -0.0411,  0.0339,
        -0.0315, -0.0173,  0.0016,  0.0088,  0.0021, -0.0052,  0.0318,  0.0097,
         0.0343, -0.0561,  0.0466,  0.0046,  0.0032,  0.0068, -0.0014,  0.0163,
        -0.0043, -0.0147,  0.0115,  0.0034, -0.0108,  0.0023,  0.0236, -0.0085,
        -0.0259,  0.0040, -0.0393, -0.0111,  0.0152,  0.0205,  0.0285, -0.0395,
         0.0552,  0.0202, -0.0279, -0.0366, -0.0489, -0.0434,  0.0100,  0.0407])
mlp.net.1.batch_norm.running_mean tensor([0.0298, 0.0160, 0.0320, 0.0397, 0.0144, 0.0113, 0.0323, 0.0251, 0.0507,
        0.0428, 0.0163, 0.0415, 0.0457, 0.0270, 0.0138, 0.0343, 0.0217, 0.0430,
        0.0273, 0.0156, 0.0457, 0.0464, 0.0178, 0.0271, 0.0112, 0.0568, 0.0228,
        0.0150, 0.0859, 0.0264, 0.0336, 0.0462, 0.0476, 0.0303, 0.0378, 0.0322,
        0.0355, 0.0206, 0.0276, 0.0340, 0.0475, 0.0325, 0.0232, 0.0391, 0.0254,
        0.0218, 0.0466, 0.0513, 0.0257, 0.0330, 0.0199, 0.0488, 0.0795, 0.0362,
        0.0205, 0.0182, 0.0276, 0.0204, 0.0616, 0.0293, 0.0582, 0.0474, 0.0171,
        0.0278])
mlp.net.1.batch_norm.running_var tensor([0.0009, 0.0011, 0.0015, 0.0009, 0.0005, 0.0005, 0.0014, 0.0011, 0.0021,
        0.0006, 0.0006, 0.0012, 0.0013, 0.0011, 0.0007, 0.0017, 0.0006, 0.0017,
        0.0014, 0.0006, 0.0016, 0.0017, 0.0008, 0.0014, 0.0006, 0.0021, 0.0009,
        0.0006, 0.0017, 0.0014, 0.0015, 0.0013, 0.0004, 0.0016, 0.0018, 0.0013,
        0.0008, 0.0012, 0.0012, 0.0013, 0.0020, 0.0006, 0.0012, 0.0016, 0.0012,
        0.0008, 0.0018, 0.0016, 0.0010, 0.0017, 0.0008, 0.0012, 0.0028, 0.0012,
        0.0009, 0.0009, 0.0013, 0.0009, 0.0018, 0.0011, 0.0022, 0.0018, 0.0008,
        0.0016])
mlp.net.1.batch_norm.num_batches_tracked tensor(93)
mlp.net.2.weight tensor([[ 0.0261, -0.0483,  0.0620,  0.0202, -0.0254, -0.0331, -0.0996, -0.0830,
         -0.0871, -0.0137,  0.0779, -0.0713, -0.0528,  0.0834,  0.0535, -0.1048,
          0.0291,  0.0969,  0.0788,  0.0380, -0.1009, -0.0881,  0.0743, -0.0663,
         -0.0601, -0.0426, -0.0389,  0.0954, -0.0438,  0.0640,  0.0925, -0.0549,
          0.0153,  0.0717, -0.0909, -0.0330,  0.0393,  0.0799,  0.0911, -0.0481,
          0.0664,  0.0332, -0.0715, -0.0938, -0.0737,  0.0507, -0.0903,  0.0834,
          0.0820,  0.0507,  0.0819, -0.0549,  0.0692,  0.0252,  0.0876, -0.0946,
          0.0726, -0.0966, -0.0906,  0.0620, -0.0955, -0.0675, -0.0646,  0.0962]])
