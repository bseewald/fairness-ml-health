Weights: 
embeddings.embeddings.0.weight tensor([[-0.4427,  0.1331],
        [ 0.2021,  0.4899],
        [-0.1762, -0.2687],
        [ 0.0649, -0.5238]])
embeddings.embeddings.1.weight tensor([[-0.1396,  0.3031],
        [-0.3381, -0.0393],
        [ 0.2528,  0.2593],
        [ 0.0467, -0.4510],
        [ 0.0616,  0.0625]])
embeddings.embeddings.2.weight tensor([[ 0.0168,  0.3948,  0.0754],
        [ 0.2942, -0.2073, -0.1885],
        [-0.3217,  0.2085,  0.1399],
        [ 0.0764,  0.1681,  0.2889],
        [ 0.2759,  0.0239, -0.2415],
        [-0.0034, -0.3145, -0.0252]])
embeddings.embeddings.3.weight tensor([[-0.1588,  0.2805],
        [ 0.4839,  0.0189],
        [ 0.0821, -0.1729],
        [-0.3761, -0.4107]])
embeddings.embeddings.4.weight tensor([[ 0.0770, -0.0346],
        [ 0.2188, -0.5312],
        [ 0.0575, -0.1274],
        [ 0.3738, -0.1200]])
mlp.net.0.linear.weight tensor([[-0.2006, -0.3642, -0.2059,  ...,  0.2034,  0.4723, -0.0016],
        [-0.0289,  0.0098, -0.2658,  ...,  0.0676, -0.4303,  0.1327],
        [-0.0211, -0.2394, -0.5435,  ...,  0.5618,  0.0424,  0.2535],
        ...,
        [-0.1912, -0.1419,  0.2910,  ..., -0.2732, -0.1705, -0.0021],
        [ 0.3082, -0.0572, -0.0697,  ..., -0.0976, -0.1042,  0.4151],
        [-0.0439,  0.0412,  0.0563,  ..., -0.3583, -0.5184,  0.3153]])
mlp.net.0.linear.bias tensor([-0.0078,  0.0172, -0.0356, -0.2127,  0.0040,  0.1765,  0.1390,  0.1283,
         0.1433, -0.0503,  0.1131, -0.1633,  0.0672,  0.0606, -0.1674, -0.1367,
        -0.1121,  0.1199,  0.0648, -0.0263, -0.1109, -0.1875,  0.1299,  0.0867,
        -0.1278,  0.0534, -0.0384, -0.1379,  0.0176,  0.0897, -0.0307,  0.0660,
        -0.1116,  0.1106, -0.0860, -0.0316, -0.1622, -0.0983, -0.0138,  0.0949,
         0.1116,  0.0962,  0.0471, -0.0061, -0.0841,  0.0790, -0.1327, -0.0241,
        -0.1450,  0.1502, -0.0630,  0.0317,  0.0085, -0.2145,  0.1217, -0.0691,
         0.0165, -0.0274,  0.0937,  0.0361, -0.1049, -0.0163,  0.0359, -0.1165])
mlp.net.0.batch_norm.weight tensor([0.7354, 0.7928, 0.8342, 0.8200, 0.8595, 0.7830, 0.8087, 0.7284, 0.7307,
        0.7687, 0.7938, 0.8101, 0.8838, 0.7479, 0.8491, 0.8088, 0.8163, 0.7517,
        0.8195, 0.8002, 0.7239, 0.8285, 0.8419, 0.7929, 0.7885, 0.7390, 0.8154,
        0.8052, 0.7668, 0.7755, 0.8272, 0.7982, 0.7685, 0.7815, 0.8400, 0.8006,
        0.7791, 0.7488, 0.8293, 0.8680, 0.7799, 0.7934, 0.8245, 0.7350, 0.7580,
        0.8544, 0.8675, 0.8347, 0.7594, 0.8155, 0.7330, 0.8109, 0.8703, 0.7788,
        0.8032, 0.8106, 0.7266, 0.8162, 0.7824, 0.7508, 0.8136, 0.7399, 0.8329,
        0.7485])
mlp.net.0.batch_norm.bias tensor([-0.0081,  0.0564,  0.0107, -0.0942,  0.0903, -0.0121,  0.0502, -0.0900,
        -0.0307,  0.0431,  0.0117,  0.0610, -0.1304,  0.0043, -0.0724, -0.0775,
         0.0516,  0.0421,  0.0191, -0.0787, -0.1312, -0.0241,  0.0352,  0.0939,
         0.0340,  0.0354, -0.0224, -0.0711,  0.0156, -0.0112,  0.0699,  0.0128,
         0.0217,  0.0162,  0.0493, -0.0524,  0.0217,  0.1354,  0.0901,  0.1069,
         0.0108, -0.1125, -0.0046,  0.0071,  0.0584,  0.0353,  0.0627, -0.0574,
         0.0075,  0.0084, -0.0520,  0.0290, -0.0659, -0.0157, -0.0166, -0.0743,
         0.0537, -0.0385,  0.0337,  0.0583, -0.1407,  0.0224, -0.0188, -0.0374])
mlp.net.0.batch_norm.running_mean tensor([2.4649e-01, 4.8865e-02, 5.9088e-03, 2.2709e-02, 4.5863e-01, 4.7109e-01,
        1.3734e-01, 5.5632e-01, 4.1545e-02, 9.4684e-02, 5.1825e-01, 3.6368e-01,
        2.3177e-01, 3.0592e-01, 1.2202e-04, 1.4532e-02, 2.4445e-03, 5.2715e-02,
        5.0107e-02, 9.8842e-04, 9.3808e-02, 5.0870e-02, 6.2521e-02, 1.2516e-01,
        4.1255e-03, 6.6155e-01, 5.8667e-02, 9.7430e-02, 2.0095e-01, 2.3875e-01,
        1.7394e-01, 6.0190e-01, 1.9289e-02, 1.2566e-01, 2.9363e-02, 5.4423e-01,
        8.9488e-02, 9.5615e-02, 4.3152e-02, 2.0317e-01, 4.4911e-02, 8.9329e-01,
        4.5185e-01, 1.3398e-01, 1.1279e-01, 2.4300e-01, 2.7558e-01, 7.5918e-01,
        1.2692e-04, 7.1577e-01, 1.6423e-02, 3.1948e-01, 1.4586e-01, 1.4650e-02,
        3.5454e-01, 1.1285e-01, 7.8015e-02, 4.9304e-01, 5.1104e-01, 2.9664e-01,
        4.6625e-02, 6.0055e-01, 4.0502e-01, 1.0574e-02])
mlp.net.0.batch_norm.running_var tensor([0.0773, 0.0158, 0.0015, 0.0054, 0.0811, 0.1273, 0.0320, 0.0962, 0.0067,
        0.0175, 0.0896, 0.1090, 0.0609, 0.0665, 0.0006, 0.0045, 0.0011, 0.0159,
        0.0180, 0.0007, 0.0385, 0.0182, 0.0247, 0.0417, 0.0018, 0.0977, 0.0172,
        0.0330, 0.0684, 0.0750, 0.0613, 0.1208, 0.0061, 0.0385, 0.0086, 0.1431,
        0.0204, 0.0401, 0.0151, 0.0445, 0.0129, 0.1220, 0.1105, 0.0443, 0.0560,
        0.0709, 0.0845, 0.1327, 0.0006, 0.1251, 0.0041, 0.1071, 0.0345, 0.0047,
        0.0756, 0.0279, 0.0303, 0.1289, 0.0714, 0.1224, 0.0115, 0.1541, 0.1034,
        0.0029])
mlp.net.0.batch_norm.num_batches_tracked tensor(70)
mlp.net.1.linear.weight tensor([[-0.0752,  0.1015,  0.0960,  ...,  0.0891, -0.0022, -0.1143],
        [-0.2235, -0.1065,  0.3206,  ..., -0.1625, -0.2665,  0.1105],
        [ 0.1316,  0.0894, -0.0424,  ..., -0.0386,  0.0550, -0.0059],
        ...,
        [-0.0243, -0.2230,  0.2347,  ...,  0.1318, -0.1744, -0.0802],
        [-0.1831,  0.1386, -0.3296,  ...,  0.0140, -0.0869,  0.0532],
        [-0.0527, -0.2058,  0.0430,  ..., -0.0064,  0.1727,  0.0207]])
mlp.net.1.linear.bias tensor([-0.0402, -0.0123, -0.0396,  0.1170, -0.1117, -0.1029, -0.0677,  0.0261,
        -0.0109,  0.0970,  0.0087, -0.0347, -0.0373, -0.0546,  0.1431,  0.0405,
         0.0121, -0.0154,  0.0393,  0.0288, -0.0382, -0.0579,  0.0629,  0.0945,
        -0.0300, -0.0895,  0.0748,  0.0478,  0.0573, -0.1168, -0.0240, -0.1617,
         0.0383, -0.0862, -0.0978,  0.0428,  0.0401, -0.0377, -0.0478,  0.0913,
         0.0602,  0.0458,  0.0213,  0.0337,  0.1188,  0.0552, -0.0395,  0.0533,
        -0.0767,  0.0045,  0.0015,  0.1129,  0.1095,  0.0064,  0.0106,  0.0590,
         0.0316,  0.0493, -0.0436, -0.0295,  0.1802, -0.0313, -0.0333, -0.0981])
mlp.net.1.batch_norm.weight tensor([0.7554, 0.7500, 0.7749, 0.7533, 0.8000, 0.7610, 0.7453, 0.7440, 0.7027,
        0.7778, 0.7579, 0.7537, 0.7743, 0.7553, 0.7956, 0.7277, 0.8051, 0.7834,
        0.8129, 0.7962, 0.7548, 0.7724, 0.7765, 0.7013, 0.7565, 0.7133, 0.7130,
        0.7961, 0.7195, 0.7458, 0.7355, 0.8272, 0.7596, 0.8346, 0.7659, 0.7906,
        0.7495, 0.7201, 0.7358, 0.7633, 0.8138, 0.7834, 0.7268, 0.7894, 0.8121,
        0.7144, 0.7909, 0.7683, 0.7669, 0.7738, 0.7693, 0.7395, 0.7664, 0.7420,
        0.7589, 0.7957, 0.7802, 0.7772, 0.7521, 0.8041, 0.7585, 0.7249, 0.7723,
        0.8306])
mlp.net.1.batch_norm.bias tensor([-0.0334, -0.0132,  0.0419,  0.0181,  0.0017, -0.0060, -0.0540, -0.0012,
         0.0376, -0.0257,  0.0037, -0.0145,  0.0205,  0.0524,  0.0134, -0.1604,
         0.0071, -0.0143,  0.0026, -0.0111,  0.0063,  0.0298,  0.0130, -0.1047,
        -0.0024, -0.0735,  0.0179, -0.0069, -0.0230, -0.0136,  0.0291,  0.0017,
        -0.0226,  0.0067,  0.0651,  0.0106, -0.0293, -0.0777, -0.0922,  0.0106,
        -0.0116, -0.0344, -0.0721,  0.0103,  0.0103, -0.0008,  0.0012,  0.0059,
         0.0886,  0.0200,  0.0055,  0.0051, -0.0044,  0.0096, -0.0410,  0.0177,
        -0.0074, -0.0222,  0.0049, -0.0034, -0.0191, -0.0423,  0.0408,  0.0252])
mlp.net.1.batch_norm.running_mean tensor([0.3785, 0.5892, 0.3001, 0.5260, 0.1657, 0.3651, 0.3862, 0.4523, 0.4782,
        0.6032, 0.5999, 0.4340, 0.2035, 0.3208, 0.4706, 0.5473, 0.4401, 0.2726,
        0.3497, 0.4564, 0.4232, 0.2663, 0.4521, 0.5657, 0.3760, 0.4143, 0.3428,
        0.5104, 0.5651, 0.4570, 0.3419, 0.2286, 0.5556, 0.3702, 0.2425, 0.5099,
        0.3698, 0.4212, 0.4151, 0.3587, 0.5033, 0.4574, 0.3575, 0.3098, 0.4959,
        0.3248, 0.3556, 0.4853, 0.2234, 0.3906, 0.4944, 0.3751, 0.6268, 0.5637,
        0.4519, 0.4218, 0.3945, 0.4322, 0.4991, 0.4031, 0.6991, 0.3817, 0.5751,
        0.3390])
mlp.net.1.batch_norm.running_var tensor([0.5067, 0.6204, 0.3282, 0.4421, 0.1417, 0.2832, 0.2968, 0.6244, 0.3815,
        1.0179, 0.6284, 0.3341, 0.1864, 0.2083, 0.4879, 0.8750, 0.2745, 0.2331,
        0.2823, 0.3032, 0.5918, 0.1685, 0.3304, 0.6692, 0.4669, 0.6082, 0.3152,
        0.4742, 0.4630, 0.3678, 0.2647, 0.1953, 0.4509, 0.3443, 0.2348, 0.4397,
        0.3654, 0.4453, 0.5849, 0.3380, 0.4428, 0.5134, 0.2288, 0.2645, 0.4129,
        0.2711, 0.2399, 0.5198, 0.1368, 0.2936, 0.3272, 0.2367, 0.4933, 0.6587,
        0.6554, 0.2153, 0.4780, 0.3881, 0.5230, 0.3474, 0.7020, 0.4317, 0.7667,
        0.3460])
mlp.net.1.batch_norm.num_batches_tracked tensor(70)
mlp.net.2.weight tensor([[-0.0018, -0.0526,  0.0163, -0.0498,  0.0927,  0.0622, -0.0114, -0.0484,
          0.0164, -0.0359,  0.0436, -0.0567,  0.0457,  0.0241, -0.0495,  0.0092,
          0.0599, -0.0542,  0.0944, -0.0482, -0.0639,  0.0088,  0.0860,  0.0009,
         -0.0636,  0.0021,  0.0139,  0.0510, -0.0140, -0.0373, -0.0220, -0.1129,
         -0.0349,  0.1135,  0.0471,  0.0914,  0.0174, -0.0200, -0.0208, -0.0390,
         -0.0721, -0.0216, -0.0232, -0.0999,  0.1046, -0.0092, -0.0321,  0.0793,
          0.0254,  0.0810,  0.0570,  0.0071, -0.0064, -0.0455, -0.0611,  0.0266,
         -0.0914, -0.0617, -0.0395, -0.1133, -0.0325,  0.0014,  0.0148,  0.0664]])
