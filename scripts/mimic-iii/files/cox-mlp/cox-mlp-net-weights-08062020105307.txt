Weights: 
embeddings.embeddings.0.weight tensor([[ 0.0235, -0.0520],
        [-0.0175, -0.1203],
        [-0.0094,  0.1418],
        [ 0.1096, -0.0746]])
embeddings.embeddings.1.weight tensor([[ 0.0558, -0.0120],
        [-0.0185, -0.0832],
        [ 0.0213, -0.0711],
        [-0.1243, -0.1468],
        [ 0.0674,  0.0969]])
embeddings.embeddings.2.weight tensor([[ 0.0056, -0.0417, -0.0152],
        [-0.0969,  0.0070, -0.0817],
        [-0.0891,  0.0010, -0.0997],
        [ 0.0881,  0.1109,  0.0339],
        [-0.1028,  0.0062,  0.0054],
        [ 0.0352, -0.1041, -0.0046]])
embeddings.embeddings.3.weight tensor([[ 0.0586,  0.0349],
        [-0.1372, -0.0789],
        [-0.0178,  0.0383],
        [ 0.1642,  0.1470]])
embeddings.embeddings.4.weight tensor([[ 0.0602,  0.0466],
        [ 0.0357,  0.1408],
        [-0.1083, -0.1640],
        [ 0.0094, -0.0415]])
mlp.net.0.linear.weight tensor([[-0.0434, -0.0791,  0.0370,  ..., -0.0429,  0.0945,  0.1054],
        [ 0.0336,  0.0520,  0.0478,  ..., -0.0236,  0.0804,  0.0627],
        [ 0.0049, -0.0453, -0.0056,  ..., -0.0214, -0.0597,  0.0661],
        ...,
        [ 0.0231,  0.0079,  0.0215,  ...,  0.1417,  0.0148, -0.0046],
        [-0.0925, -0.0428,  0.0523,  ..., -0.0234,  0.0330, -0.0524],
        [ 0.0512, -0.0373, -0.0028,  ...,  0.1437, -0.0306, -0.0083]])
mlp.net.0.linear.bias tensor([-0.0904, -0.0508,  0.0292, -0.0019, -0.0184, -0.0205, -0.0101, -0.0124,
         0.0196, -0.0083,  0.0378,  0.0222, -0.0119,  0.0088,  0.0303, -0.0202,
         0.0239,  0.0782, -0.0662, -0.0195,  0.0185, -0.0138, -0.0654,  0.0062,
         0.0684,  0.0319, -0.0235, -0.0122, -0.0269,  0.0015, -0.0180, -0.0085,
        -0.0270, -0.0176,  0.0058,  0.0485, -0.0347,  0.0144, -0.0296, -0.0011,
         0.0051,  0.0105, -0.0108,  0.0610, -0.0933,  0.0998,  0.0048,  0.0183,
        -0.0277,  0.0074,  0.0337,  0.0693,  0.0584, -0.0059, -0.0435, -0.0133,
         0.0422, -0.0024,  0.0366,  0.0261, -0.0593,  0.0042,  0.0017, -0.0149])
mlp.net.0.batch_norm.weight tensor([0.0716, 0.0693, 0.1311, 0.1013, 0.2172, 0.1585, 0.1250, 0.1757, 0.0802,
        0.1063, 0.1222, 0.0817, 0.0957, 0.1019, 0.1051, 0.1438, 0.0887, 0.0911,
        0.1043, 0.1063, 0.1652, 0.0993, 0.1187, 0.0965, 0.0641, 0.1619, 0.1245,
        0.1379, 0.1094, 0.0458, 0.2159, 0.0568, 0.1357, 0.0816, 0.1409, 0.0703,
        0.1312, 0.1007, 0.0902, 0.1178, 0.1070, 0.0798, 0.0950, 0.1119, 0.0727,
        0.1323, 0.0844, 0.0839, 0.1158, 0.1499, 0.1069, 0.0033, 0.1688, 0.1198,
        0.1133, 0.0544, 0.0311, 0.1290, 0.0253, 0.0682, 0.1014, 0.1394, 0.1244,
        0.0928])
mlp.net.0.batch_norm.bias tensor([-0.0133,  0.0096, -0.0134,  0.0206,  0.0125, -0.0111, -0.0188,  0.0057,
         0.0076,  0.0018, -0.0342, -0.0052,  0.0486,  0.0167, -0.0140,  0.0258,
         0.0227,  0.0021,  0.0114, -0.0023, -0.0198, -0.0286,  0.0298, -0.0041,
         0.0091,  0.0273,  0.0403,  0.0218, -0.0309, -0.0043,  0.0232, -0.0200,
        -0.0108,  0.0047, -0.0041, -0.0464, -0.0019,  0.0425, -0.0083, -0.0074,
        -0.0082,  0.0164,  0.0094, -0.0401,  0.0343,  0.0478,  0.0178, -0.0154,
        -0.0192, -0.0050,  0.0027, -0.0155, -0.0085,  0.0163,  0.0502,  0.0344,
         0.0406,  0.0319,  0.0184, -0.0293, -0.0637, -0.0338, -0.0273, -0.0049])
mlp.net.0.batch_norm.running_mean tensor([4.1193e-03, 2.5170e-02, 5.4191e-02, 1.7351e-02, 6.5329e-02, 2.8432e-04,
        3.1154e-02, 6.2628e-02, 3.1822e-02, 0.0000e+00, 1.2370e-01, 9.2902e-02,
        8.9364e-03, 2.4800e-02, 5.4067e-02, 4.3271e-03, 3.8423e-02, 1.5163e-01,
        1.3466e-03, 0.0000e+00, 5.6181e-02, 1.5716e-02, 1.3950e-04, 1.3614e-01,
        1.2253e-01, 5.8250e-02, 1.7941e-02, 1.4044e-03, 2.9417e-02, 8.6440e-02,
        8.7838e-04, 6.9537e-02, 2.1364e-03, 1.9414e-02, 2.3799e-03, 1.8258e-01,
        2.0311e-02, 6.0263e-02, 8.9677e-02, 1.1312e-02, 1.1126e-01, 8.2023e-02,
        2.6729e-02, 2.0196e-01, 6.3337e-04, 1.3184e-01, 4.6515e-02, 8.9851e-02,
        4.0555e-04, 7.2136e-02, 1.4685e-01, 1.8281e-01, 1.1642e-01, 1.0202e-01,
        4.4614e-02, 3.2414e-03, 5.8267e-02, 3.1659e-03, 1.8610e-02, 1.2031e-01,
        2.0391e-02, 1.5397e-01, 2.0875e-02, 1.1885e-01])
mlp.net.0.batch_norm.running_var tensor([2.0975e-04, 1.2395e-03, 3.6513e-03, 7.8999e-04, 1.7464e-03, 1.7547e-05,
        1.9865e-03, 2.2016e-03, 1.2863e-03, 5.4688e-06, 6.0052e-03, 2.8032e-03,
        4.4470e-04, 1.4528e-03, 3.5187e-03, 2.2854e-04, 2.1022e-03, 1.8048e-03,
        7.9737e-05, 5.4688e-06, 1.7104e-03, 3.5709e-04, 1.1434e-05, 1.7206e-03,
        3.1836e-03, 1.5113e-03, 8.9471e-04, 6.3146e-05, 8.3769e-04, 2.3326e-03,
        6.0288e-05, 1.2779e-03, 1.5130e-04, 8.1402e-04, 1.1341e-04, 3.5725e-03,
        6.8822e-04, 2.7501e-03, 5.3554e-03, 6.5551e-04, 2.4088e-03, 2.8026e-03,
        1.3803e-03, 4.8220e-03, 5.0536e-05, 2.6407e-03, 3.5653e-03, 2.1706e-03,
        1.6943e-05, 1.8752e-03, 2.8965e-03, 4.0592e-03, 1.4621e-03, 2.9368e-03,
        1.8292e-03, 1.3185e-04, 1.7759e-03, 1.8727e-04, 8.7967e-04, 2.7598e-03,
        8.4066e-04, 3.2153e-03, 8.1945e-04, 3.1015e-03])
mlp.net.0.batch_norm.num_batches_tracked tensor(115)
mlp.net.1.linear.weight tensor([[-0.0432, -0.0357, -0.0032,  ..., -0.0229, -0.0436,  0.0028],
        [-0.0544,  0.0131, -0.0005,  ...,  0.0015,  0.0713, -0.0102],
        [ 0.0258, -0.0261, -0.0714,  ...,  0.0479, -0.0090,  0.0424],
        ...,
        [ 0.0380, -0.0041, -0.0284,  ...,  0.0105,  0.0624, -0.0069],
        [ 0.0315,  0.0791,  0.0482,  ...,  0.0130,  0.0095,  0.0311],
        [-0.0041,  0.0129, -0.0254,  ..., -0.0144,  0.0152, -0.0299]])
mlp.net.1.linear.bias tensor([-3.1745e-03,  9.6633e-03,  6.8444e-03, -7.0514e-03, -1.5332e-05,
         1.9155e-02,  6.4307e-03, -1.8997e-02, -6.3847e-03,  3.1313e-02,
        -5.5090e-02, -2.2913e-03, -1.3882e-02, -4.7352e-02, -1.3831e-02,
        -3.9259e-02,  6.3115e-02, -2.1258e-02,  3.2885e-02,  7.1968e-02,
         1.4286e-03,  1.8615e-02,  3.1692e-02, -9.1800e-03, -1.1823e-02,
        -6.6234e-02,  1.7108e-02,  4.3985e-02, -1.3194e-02, -9.6323e-03,
        -1.9023e-02,  1.3938e-02, -2.9196e-03, -8.6768e-02, -6.2427e-02,
         3.0833e-02,  1.6076e-02, -8.5638e-03, -3.3474e-03, -1.5789e-02,
        -4.8873e-03,  1.4703e-02,  3.3277e-03,  1.2327e-03, -6.0999e-02,
         3.8721e-02, -3.6153e-02, -5.4910e-02, -6.2302e-02,  6.1557e-03,
        -2.2631e-02, -2.0406e-02, -4.1809e-02,  3.0929e-02, -3.0128e-03,
         2.6587e-02, -2.1573e-02, -3.4110e-02, -3.2841e-02,  2.0029e-02,
        -3.8457e-02, -6.4970e-03, -5.8856e-02, -3.9708e-03])
mlp.net.1.batch_norm.weight tensor([0.0141, 0.0763, 0.1573, 0.1006, 0.0841, 0.1354, 0.0931, 0.1878, 0.0796,
        0.1108, 0.1060, 0.0771, 0.1410, 0.1502, 0.1523, 0.1284, 0.0527, 0.0968,
        0.0907, 0.1491, 0.1496, 0.0795, 0.1315, 0.1268, 0.0959, 0.1069, 0.0932,
        0.1220, 0.1642, 0.0869, 0.1061, 0.0914, 0.0745, 0.0476, 0.0955, 0.1525,
        0.0732, 0.0964, 0.1362, 0.0859, 0.0980, 0.1111, 0.0604, 0.1406, 0.1151,
        0.1112, 0.1696, 0.1133, 0.1095, 0.0463, 0.1359, 0.1250, 0.0911, 0.0965,
        0.1128, 0.0954, 0.1338, 0.1125, 0.0701, 0.0838, 0.0907, 0.1194, 0.1514,
        0.1569])
mlp.net.1.batch_norm.bias tensor([-2.1448e-02, -6.2871e-03,  4.8881e-02,  3.8887e-02,  4.4383e-03,
         1.3989e-02,  1.2170e-02,  3.3611e-02, -2.3629e-02,  5.1771e-02,
        -3.9449e-02,  2.9316e-02,  1.9132e-02, -1.5824e-02,  2.5653e-02,
        -1.9447e-02,  9.8272e-03,  2.3995e-02,  1.2817e-02, -2.0130e-02,
         3.4803e-02,  1.1250e-02,  1.4220e-02,  2.8177e-02, -3.6100e-02,
        -2.5280e-03,  1.7490e-02, -2.6792e-03, -3.1544e-02,  3.4299e-02,
         2.3798e-02,  4.8271e-02, -3.2264e-02, -3.4227e-02, -1.1222e-02,
         7.3138e-05,  3.4817e-02,  1.4510e-02, -2.5653e-02,  1.6103e-02,
         3.8958e-02, -2.9409e-03,  2.4056e-02,  3.5748e-02,  3.5135e-02,
         4.0852e-02, -4.1610e-02, -2.3596e-02,  3.1915e-02,  4.3308e-03,
        -2.8054e-02,  1.5352e-02,  1.7552e-02,  3.3122e-02,  1.6997e-02,
        -5.1090e-03,  3.3442e-02,  1.1414e-02,  2.5251e-02,  3.2771e-02,
        -7.9865e-03,  5.7240e-02, -5.0751e-02,  2.9476e-02])
mlp.net.1.batch_norm.running_mean tensor([0.0230, 0.0309, 0.0203, 0.0265, 0.0177, 0.0437, 0.0308, 0.0338, 0.0165,
        0.0514, 0.0041, 0.0176, 0.0251, 0.0068, 0.0253, 0.0081, 0.0653, 0.0090,
        0.0485, 0.0908, 0.0342, 0.0324, 0.0520, 0.0302, 0.0152, 0.0022, 0.0338,
        0.0561, 0.0244, 0.0134, 0.0171, 0.0360, 0.0155, 0.0033, 0.0081, 0.0491,
        0.0391, 0.0151, 0.0335, 0.0171, 0.0266, 0.0370, 0.0159, 0.0281, 0.0061,
        0.0535, 0.0179, 0.0030, 0.0049, 0.0190, 0.0182, 0.0238, 0.0210, 0.0293,
        0.0278, 0.0541, 0.0187, 0.0142, 0.0220, 0.0357, 0.0068, 0.0211, 0.0060,
        0.0273])
mlp.net.1.batch_norm.running_var tensor([0.0016, 0.0016, 0.0007, 0.0016, 0.0007, 0.0030, 0.0020, 0.0041, 0.0008,
        0.0027, 0.0002, 0.0013, 0.0015, 0.0005, 0.0016, 0.0005, 0.0039, 0.0004,
        0.0014, 0.0035, 0.0035, 0.0011, 0.0042, 0.0022, 0.0010, 0.0002, 0.0022,
        0.0034, 0.0015, 0.0007, 0.0010, 0.0021, 0.0006, 0.0002, 0.0004, 0.0038,
        0.0025, 0.0007, 0.0032, 0.0015, 0.0015, 0.0029, 0.0010, 0.0018, 0.0004,
        0.0025, 0.0019, 0.0003, 0.0003, 0.0010, 0.0015, 0.0016, 0.0020, 0.0016,
        0.0025, 0.0039, 0.0011, 0.0008, 0.0020, 0.0021, 0.0005, 0.0011, 0.0004,
        0.0019])
mlp.net.1.batch_norm.num_batches_tracked tensor(115)
mlp.net.2.linear.weight tensor([[-0.0388,  0.0238,  0.0199,  ..., -0.0126, -0.0438, -0.0141],
        [-0.0104,  0.0086, -0.0470,  ..., -0.0366, -0.0019,  0.0235],
        [-0.0121, -0.0107, -0.0621,  ..., -0.0616, -0.0200,  0.0391],
        ...,
        [ 0.0095,  0.0221,  0.0688,  ...,  0.0173, -0.0166,  0.0481],
        [-0.0014, -0.0354, -0.0455,  ..., -0.0692,  0.0822,  0.0051],
        [ 0.0125, -0.0392, -0.0465,  ..., -0.0260, -0.0480, -0.0607]])
mlp.net.2.linear.bias tensor([ 0.0258,  0.0057, -0.0028, -0.0714,  0.0370, -0.0167, -0.0081,  0.0091,
        -0.0225, -0.0111, -0.0063,  0.0695,  0.0211, -0.0018,  0.0594,  0.0164,
        -0.0057, -0.0036, -0.0067, -0.0109, -0.0505, -0.0281, -0.0182, -0.0055,
        -0.0817,  0.0005, -0.0154, -0.0218, -0.0182, -0.0522, -0.0467, -0.0141,
         0.0237, -0.0320, -0.0233, -0.0568, -0.0171,  0.0483, -0.0294,  0.0239,
         0.0763,  0.0118, -0.0170, -0.0738, -0.0434, -0.0405, -0.0187, -0.0053,
        -0.0317,  0.0047,  0.0220,  0.0115, -0.1202, -0.0435, -0.0309, -0.0458,
         0.0711,  0.0658, -0.0441, -0.0555, -0.0279, -0.0482, -0.0434, -0.0476])
mlp.net.2.batch_norm.weight tensor([0.0886, 0.0906, 0.0765, 0.1067, 0.0844, 0.0734, 0.1341, 0.1294, 0.1620,
        0.1134, 0.0223, 0.0892, 0.0596, 0.0772, 0.0847, 0.1201, 0.0742, 0.1795,
        0.0558, 0.0722, 0.1034, 0.1266, 0.0759, 0.0888, 0.0725, 0.0962, 0.1075,
        0.1889, 0.1284, 0.1237, 0.0650, 0.1095, 0.0759, 0.1002, 0.0673, 0.1136,
        0.0879, 0.0969, 0.1030, 0.0939, 0.1163, 0.0934, 0.1812, 0.1808, 0.0983,
        0.1116, 0.1516, 0.0920, 0.1892, 0.0682, 0.1168, 0.1028, 0.1179, 0.1012,
        0.1515, 0.0710, 0.0824, 0.1041, 0.1156, 0.1292, 0.0982, 0.1191, 0.1286,
        0.1390])
mlp.net.2.batch_norm.bias tensor([-0.0076, -0.0123,  0.0280,  0.0062,  0.0376, -0.0178, -0.0111,  0.0071,
        -0.0472, -0.0128,  0.0067,  0.0340, -0.0185,  0.0179,  0.0268, -0.0246,
         0.0376,  0.0099, -0.0325,  0.0434,  0.0244,  0.0053,  0.0350, -0.0332,
         0.0367, -0.0246, -0.0248, -0.0120, -0.0119, -0.0190, -0.0115,  0.0178,
         0.0100,  0.0045, -0.0109,  0.0025, -0.0152,  0.0036,  0.0140, -0.0350,
        -0.0057, -0.0075,  0.0201, -0.0057,  0.0454, -0.0378, -0.0108, -0.0194,
         0.0010, -0.0165, -0.0025,  0.0018,  0.0417, -0.0026, -0.0078,  0.0315,
         0.0072,  0.0285,  0.0079,  0.0019, -0.0183,  0.0496, -0.0101, -0.0343])
mlp.net.2.batch_norm.running_mean tensor([0.0426, 0.0200, 0.0333, 0.0109, 0.0449, 0.0122, 0.0270, 0.0279, 0.0102,
        0.0145, 0.0110, 0.0725, 0.0330, 0.0416, 0.0841, 0.0408, 0.0145, 0.0502,
        0.0249, 0.0124, 0.0111, 0.0117, 0.0234, 0.0251, 0.0030, 0.0221, 0.0149,
        0.0364, 0.0349, 0.0041, 0.0084, 0.0204, 0.0384, 0.0196, 0.0139, 0.0063,
        0.0271, 0.0543, 0.0116, 0.0303, 0.0865, 0.0486, 0.0377, 0.0036, 0.0088,
        0.0071, 0.0132, 0.0242, 0.0275, 0.0222, 0.0340, 0.0259, 0.0021, 0.0103,
        0.0084, 0.0114, 0.0755, 0.0968, 0.0055, 0.0106, 0.0096, 0.0261, 0.0116,
        0.0119])
mlp.net.2.batch_norm.running_var tensor([0.0030, 0.0006, 0.0039, 0.0012, 0.0016, 0.0005, 0.0031, 0.0032, 0.0010,
        0.0013, 0.0006, 0.0028, 0.0017, 0.0036, 0.0017, 0.0045, 0.0006, 0.0062,
        0.0019, 0.0006, 0.0013, 0.0011, 0.0013, 0.0024, 0.0002, 0.0018, 0.0011,
        0.0041, 0.0035, 0.0004, 0.0008, 0.0022, 0.0015, 0.0017, 0.0011, 0.0006,
        0.0025, 0.0021, 0.0009, 0.0026, 0.0040, 0.0043, 0.0043, 0.0004, 0.0011,
        0.0005, 0.0016, 0.0019, 0.0028, 0.0017, 0.0027, 0.0015, 0.0002, 0.0009,
        0.0008, 0.0011, 0.0024, 0.0031, 0.0006, 0.0013, 0.0009, 0.0025, 0.0010,
        0.0013])
mlp.net.2.batch_norm.num_batches_tracked tensor(115)
mlp.net.3.linear.weight tensor([[-0.0217, -0.0333, -0.0045,  ..., -0.0237,  0.0200,  0.0421],
        [ 0.0548,  0.0127,  0.0307,  ...,  0.0590,  0.0295,  0.0007],
        [-0.0434, -0.0389,  0.0185,  ..., -0.0157,  0.0434, -0.0361],
        ...,
        [ 0.0057, -0.0202, -0.0321,  ...,  0.0420,  0.0031, -0.0153],
        [ 0.0042,  0.0191, -0.0246,  ..., -0.0188, -0.0168,  0.0625],
        [ 0.0085,  0.0184, -0.0093,  ..., -0.0419,  0.0731,  0.0402]])
mlp.net.3.linear.bias tensor([-0.0546, -0.0421,  0.0801, -0.0527, -0.0586, -0.0298, -0.0311, -0.0237,
        -0.0237,  0.0627, -0.0184, -0.0207, -0.0098, -0.0644, -0.0260, -0.0057,
        -0.0566,  0.0021, -0.0015,  0.0829, -0.0537,  0.0729, -0.0304, -0.0629,
         0.0386,  0.0487, -0.0377, -0.0349, -0.0415,  0.0243, -0.0205, -0.0126,
        -0.0135,  0.0592, -0.0240, -0.0401, -0.0358,  0.0027, -0.0382, -0.0155,
        -0.0153, -0.0390, -0.0144,  0.0129, -0.0056,  0.0197, -0.0262,  0.0871,
        -0.0083, -0.0300, -0.0173,  0.0726, -0.0300,  0.0623, -0.0149, -0.0336,
        -0.0325,  0.0394,  0.0745, -0.0254,  0.0445, -0.0254, -0.0433, -0.0491])
mlp.net.3.batch_norm.weight tensor([0.2350, 0.1822, 0.1306, 0.2011, 0.1731, 0.2168, 0.1801, 0.1546, 0.1498,
        0.1544, 0.1977, 0.2171, 0.1361, 0.1610, 0.1394, 0.1758, 0.1990, 0.2177,
        0.1589, 0.1462, 0.1897, 0.1103, 0.1882, 0.0949, 0.2067, 0.1774, 0.1697,
        0.1741, 0.2259, 0.0419, 0.1295, 0.1628, 0.1918, 0.0914, 0.2083, 0.2429,
        0.1683, 0.1559, 0.1540, 0.1678, 0.2203, 0.2159, 0.2266, 0.1425, 0.1782,
        0.1634, 0.1991, 0.1522, 0.2040, 0.2024, 0.2108, 0.1428, 0.2108, 0.1118,
        0.1549, 0.1734, 0.2368, 0.1840, 0.1704, 0.2185, 0.0922, 0.2188, 0.1727,
        0.1552])
mlp.net.3.batch_norm.bias tensor([-0.0089,  0.0106, -0.0104,  0.0152, -0.0129, -0.0121, -0.0110, -0.0134,
        -0.0098, -0.0094,  0.0191, -0.0108,  0.0189, -0.0113, -0.0078,  0.0172,
        -0.0002,  0.0149,  0.0112, -0.0124, -0.0003, -0.0079,  0.0123, -0.0021,
        -0.0072, -0.0074, -0.0107, -0.0113, -0.0031, -0.0081,  0.0194,  0.0174,
         0.0138, -0.0125, -0.0027, -0.0081, -0.0120, -0.0153, -0.0103,  0.0148,
         0.0146, -0.0062,  0.0110, -0.0125,  0.0186,  0.0157,  0.0171, -0.0087,
         0.0136, -0.0106,  0.0098,  0.0263,  0.0120, -0.0077, -0.0103, -0.0119,
        -0.0076,  0.0144, -0.0083,  0.0180, -0.0116,  0.0167, -0.0098, -0.0137])
mlp.net.3.batch_norm.running_mean tensor([0.0151, 0.0367, 0.0942, 0.0061, 0.0081, 0.0180, 0.0207, 0.0130, 0.0142,
        0.0673, 0.0279, 0.0257, 0.0186, 0.0146, 0.0198, 0.0259, 0.0214, 0.0285,
        0.0229, 0.0972, 0.0174, 0.0857, 0.0238, 0.0037, 0.0613, 0.0613, 0.0120,
        0.0180, 0.0260, 0.0374, 0.0214, 0.0241, 0.0282, 0.0692, 0.0237, 0.0198,
        0.0129, 0.0239, 0.0119, 0.0267, 0.0346, 0.0267, 0.0341, 0.0468, 0.0266,
        0.0379, 0.0279, 0.0798, 0.0239, 0.0268, 0.0294, 0.0628, 0.0244, 0.0717,
        0.0174, 0.0302, 0.0196, 0.0592, 0.0897, 0.0303, 0.0457, 0.0269, 0.0141,
        0.0114])
mlp.net.3.batch_norm.running_var tensor([0.0033, 0.0059, 0.0039, 0.0005, 0.0012, 0.0034, 0.0038, 0.0018, 0.0019,
        0.0057, 0.0037, 0.0058, 0.0017, 0.0025, 0.0032, 0.0027, 0.0051, 0.0037,
        0.0022, 0.0050, 0.0039, 0.0027, 0.0025, 0.0004, 0.0087, 0.0070, 0.0021,
        0.0039, 0.0067, 0.0008, 0.0020, 0.0026, 0.0035, 0.0010, 0.0054, 0.0045,
        0.0019, 0.0035, 0.0018, 0.0027, 0.0053, 0.0072, 0.0052, 0.0059, 0.0031,
        0.0027, 0.0037, 0.0052, 0.0024, 0.0059, 0.0032, 0.0017, 0.0032, 0.0030,
        0.0026, 0.0077, 0.0043, 0.0036, 0.0043, 0.0043, 0.0011, 0.0034, 0.0023,
        0.0021])
mlp.net.3.batch_norm.num_batches_tracked tensor(115)
mlp.net.4.weight tensor([[-0.0762,  0.0462, -0.0204,  0.0658, -0.0475, -0.0513, -0.0409, -0.0309,
         -0.0373, -0.0247,  0.0472, -0.0576,  0.0256, -0.0276, -0.0201,  0.0387,
         -0.0387,  0.0680,  0.0362, -0.0262, -0.0521, -0.0117,  0.0537, -0.0170,
         -0.0643, -0.0410, -0.0457, -0.0311, -0.0730, -0.0060,  0.0154,  0.0397,
          0.0483, -0.0011, -0.0392, -0.0890, -0.0492, -0.0280, -0.0340,  0.0492,
          0.0591, -0.0729,  0.0742, -0.0206,  0.0307,  0.0378,  0.0420, -0.0416,
          0.0649, -0.0401,  0.0635,  0.0285,  0.0775, -0.0143, -0.0453, -0.0351,
         -0.0788,  0.0559, -0.0436,  0.0648, -0.0120,  0.0586, -0.0500, -0.0308]])
