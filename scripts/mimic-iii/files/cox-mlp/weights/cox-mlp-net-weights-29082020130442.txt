Weights: 
embeddings.embeddings.0.weight tensor([[-0.1816,  0.1226],
        [ 0.5419, -0.2991],
        [ 0.1522,  0.4221],
        [ 0.5576,  0.4102]])
embeddings.embeddings.1.weight tensor([[ 0.0096,  0.2999],
        [ 0.1764,  0.1190],
        [-0.1510, -0.3816],
        [ 0.5676, -0.4873],
        [-0.2143, -0.6202]])
embeddings.embeddings.2.weight tensor([[-0.3913, -0.2513, -0.1908],
        [-0.0608,  0.1168, -0.1927],
        [-0.4643, -0.1341,  0.3993],
        [ 0.4786,  0.0362,  0.0181],
        [ 0.3136, -0.2165,  0.3887],
        [-0.2927, -0.1196,  0.4388]])
embeddings.embeddings.3.weight tensor([[ 0.0077, -0.0344],
        [-0.2910,  0.1426],
        [ 0.2457,  0.5363],
        [ 0.1975,  0.2471]])
embeddings.embeddings.4.weight tensor([[ 0.4426,  0.5928],
        [-0.4503, -0.1893],
        [ 0.1794,  0.6111],
        [ 0.4031, -0.5819]])
mlp.net.0.linear.weight tensor([[-0.2382,  0.0353,  0.4622,  ...,  0.0976, -0.0625, -0.1785],
        [ 0.2197,  0.0506,  0.5640,  ..., -0.8452,  0.0089, -0.4821],
        [ 0.8656, -0.1557,  0.4686,  ...,  0.0116, -0.1101, -0.1381],
        ...,
        [-0.1060,  0.2238, -0.3346,  ..., -0.0643,  0.3057, -0.0759],
        [-0.2488, -0.2193, -0.9439,  ...,  0.2765, -0.6512,  0.0240],
        [ 0.2331, -0.2937, -0.1392,  ..., -0.1968,  0.1326,  0.2782]])
mlp.net.0.linear.bias tensor([ 0.1236,  0.0283, -0.1148, -0.1021, -0.1535,  0.0291,  0.1107, -0.1978,
         0.0435,  0.1754, -0.1544, -0.0800,  0.2117, -0.1883,  0.0361,  0.0472,
         0.1394,  0.0133,  0.1345, -0.1267,  0.0452,  0.1910, -0.1831, -0.0250,
         0.0027,  0.0415, -0.1660, -0.1530,  0.1210, -0.1003,  0.0475, -0.1500,
         0.1072, -0.0174, -0.1569,  0.1261,  0.2040, -0.0867, -0.0447, -0.1348,
         0.2082, -0.0137, -0.0148, -0.2145,  0.1125,  0.0235, -0.0284, -0.0103,
         0.2207, -0.0490,  0.0342,  0.0873,  0.1554,  0.2180,  0.2015, -0.0451,
        -0.2182, -0.2083,  0.0237, -0.1055,  0.0931,  0.1664, -0.1654,  0.0685])
mlp.net.0.batch_norm.weight tensor([1.0130, 0.9985, 1.0031, 0.9829, 0.9866, 1.0028, 1.0059, 1.0100, 0.9891,
        0.9926, 1.0005, 0.9984, 1.0003, 0.9944, 0.9939, 0.9980, 1.0056, 1.0042,
        0.9917, 0.9901, 1.0095, 1.0016, 1.0058, 0.9921, 1.0030, 1.0038, 1.0051,
        1.0090, 1.0006, 1.0012, 0.9888, 0.9931, 0.9929, 1.0006, 1.0114, 1.0003,
        1.0145, 0.9952, 0.9934, 0.9991, 0.9945, 0.9922, 1.0015, 0.9824, 1.0073,
        1.0023, 1.0097, 0.9900, 0.9851, 1.0099, 1.0092, 1.0098, 1.0021, 0.9876,
        0.9987, 1.0069, 0.9992, 1.0043, 1.0184, 1.0096, 1.0124, 0.9814, 1.0154,
        0.9934])
mlp.net.0.batch_norm.bias tensor([ 1.1725e-02,  3.7705e-03,  2.7065e-03,  4.0257e-03,  4.2177e-03,
        -4.0850e-03,  8.4827e-03,  1.3389e-02, -9.5863e-04,  5.5000e-04,
        -9.7946e-03,  3.2920e-03,  3.2581e-03,  1.4120e-02, -3.3411e-03,
         3.0522e-03,  1.1168e-02,  9.4075e-04,  6.5591e-03,  9.9830e-03,
        -2.9001e-04, -6.9360e-03, -1.6657e-04, -5.2334e-03, -1.0594e-02,
        -2.9432e-03,  1.6632e-03, -2.6031e-04,  3.8466e-03,  9.8367e-03,
        -4.0186e-03, -5.9503e-03,  6.7931e-03, -7.6150e-03,  3.1989e-03,
         8.1374e-03,  7.5382e-03,  2.6696e-03, -7.0262e-03, -3.8412e-03,
        -5.7242e-03,  3.8137e-03,  6.1753e-04,  1.6746e-02,  2.6870e-03,
         2.7750e-05,  1.5003e-03,  9.8482e-03, -1.1235e-03,  5.8013e-03,
         5.5305e-03,  9.6887e-03,  2.3678e-03,  2.1726e-03,  9.4037e-03,
        -1.1606e-02,  6.6938e-03, -1.0327e-02,  1.2268e-02, -4.1149e-03,
         1.2651e-02, -8.0514e-04, -6.6075e-03, -2.2406e-03])
mlp.net.0.batch_norm.running_mean tensor([1.1546e+00, 1.9944e-01, 1.3866e-01, 6.0292e-01, 5.0479e-02, 4.9715e-01,
        2.0554e-01, 1.1662e-01, 2.0496e-01, 2.9789e-01, 1.8831e-01, 2.5652e-01,
        2.7553e-01, 1.3633e+00, 1.2321e-01, 1.3301e-01, 1.0272e+00, 1.7204e-03,
        7.3390e-01, 2.5358e-01, 2.1472e-01, 2.5083e-01, 2.1908e-01, 3.0736e-01,
        1.3027e-01, 6.9642e-03, 1.0541e-03, 4.8642e-02, 7.2815e-02, 7.2177e-02,
        1.1497e+00, 2.7298e-01, 3.0712e-01, 6.2293e-01, 1.0510e+00, 2.4091e-01,
        4.8974e-01, 3.0843e-01, 2.2022e-01, 6.1288e-01, 5.9600e-01, 3.2964e-01,
        1.4240e-02, 3.2776e-01, 1.2691e-01, 4.8450e-01, 1.3434e+00, 3.7005e-01,
        7.4483e-02, 6.5176e-02, 4.2447e-01, 9.0046e-02, 3.9924e-01, 1.4458e-01,
        2.3132e-01, 3.1913e-01, 2.2285e-02, 2.2098e-02, 8.6745e-01, 3.3888e-02,
        3.0245e-02, 2.5379e-01, 1.8238e-04, 7.7530e-01])
mlp.net.0.batch_norm.running_var tensor([0.2319, 0.0835, 0.0673, 0.1460, 0.0185, 0.2103, 0.0469, 0.0455, 0.0863,
        0.1336, 0.0892, 0.0927, 0.0745, 0.3519, 0.0377, 0.0465, 0.1701, 0.0010,
        0.2093, 0.0806, 0.0628, 0.0754, 0.0253, 0.0932, 0.0415, 0.0025, 0.0007,
        0.0165, 0.0169, 0.0194, 0.2009, 0.0858, 0.1177, 0.1520, 0.2917, 0.0913,
        0.0692, 0.0832, 0.0762, 0.1475, 0.0538, 0.1102, 0.0065, 0.0644, 0.0349,
        0.1487, 0.2455, 0.0868, 0.0235, 0.0169, 0.0830, 0.0509, 0.1177, 0.0645,
        0.0808, 0.1165, 0.0049, 0.0078, 0.1486, 0.0115, 0.0091, 0.0583, 0.0004,
        0.1416])
mlp.net.0.batch_norm.num_batches_tracked tensor(74)
mlp.net.1.linear.weight tensor([[-0.1740,  0.1309, -0.1527,  ...,  0.1134,  0.1223, -0.0807],
        [-0.1002, -0.1245,  0.1025,  ...,  0.0117, -0.1566, -0.0772],
        [-0.0766, -0.1515,  0.0452,  ..., -0.1905, -0.0144,  0.2936],
        ...,
        [-0.0362, -0.2195, -0.2950,  ...,  0.0597, -0.2037,  0.0464],
        [-0.0280, -0.0026,  0.1744,  ..., -0.0249, -0.2543, -0.0065],
        [-0.0688,  0.1196, -0.1576,  ...,  0.0601,  0.1105, -0.1764]])
mlp.net.1.linear.bias tensor([ 0.0828,  0.0301,  0.0473,  0.0815,  0.0417,  0.1160, -0.0812, -0.0313,
        -0.1199,  0.1227,  0.0755,  0.0968,  0.0383,  0.0968, -0.1076,  0.0200,
         0.0719,  0.0285, -0.0698,  0.0451, -0.0066, -0.0711,  0.0624, -0.0232,
        -0.0074, -0.0423, -0.1196,  0.0297, -0.0264,  0.1094, -0.1000,  0.0922,
         0.0698,  0.1226,  0.0698, -0.0532,  0.0544, -0.0541, -0.0863, -0.0782,
        -0.0812, -0.0975,  0.0165,  0.0836,  0.0769,  0.1004, -0.0756, -0.0278,
        -0.0774,  0.0012, -0.0604,  0.0093, -0.1115,  0.0571,  0.0733, -0.1050,
         0.0062,  0.0398, -0.0624, -0.0311,  0.1159,  0.0864, -0.0433,  0.0305])
mlp.net.1.batch_norm.weight tensor([0.9975, 1.0075, 1.0157, 1.0020, 1.0149, 1.0136, 0.9752, 1.0009, 0.9999,
        1.0114, 0.9879, 0.9823, 0.9977, 1.0131, 1.0063, 1.0108, 0.9979, 0.9860,
        1.0080, 0.9860, 0.9987, 0.9899, 1.0046, 0.9858, 1.0001, 0.9912, 1.0028,
        0.9970, 0.9918, 1.0021, 0.9972, 1.0033, 1.0154, 1.0033, 0.9944, 0.9937,
        1.0249, 0.9893, 0.9962, 1.0052, 1.0127, 1.0071, 0.9924, 1.0056, 1.0172,
        0.9968, 0.9868, 1.0118, 1.0171, 0.9925, 0.9830, 0.9998, 0.9994, 1.0058,
        0.9903, 1.0010, 0.9960, 0.9850, 0.9954, 0.9968, 1.0176, 0.9821, 0.9990,
        0.9991])
mlp.net.1.batch_norm.bias tensor([ 0.0140,  0.0034,  0.0083, -0.0087, -0.0099,  0.0038, -0.0056, -0.0083,
        -0.0011, -0.0011, -0.0092,  0.0021,  0.0101, -0.0058, -0.0059, -0.0069,
         0.0036, -0.0063, -0.0121,  0.0015,  0.0064, -0.0016, -0.0096, -0.0040,
        -0.0034, -0.0003, -0.0066, -0.0050,  0.0076, -0.0063,  0.0120,  0.0047,
        -0.0007,  0.0030, -0.0118,  0.0040, -0.0005,  0.0035,  0.0042,  0.0063,
         0.0098,  0.0049, -0.0019,  0.0012,  0.0107, -0.0053, -0.0076,  0.0069,
        -0.0042, -0.0040,  0.0045,  0.0063, -0.0138,  0.0043,  0.0066,  0.0138,
         0.0082, -0.0194, -0.0093,  0.0097,  0.0020,  0.0003,  0.0057,  0.0085])
mlp.net.1.batch_norm.running_mean tensor([0.7276, 0.6424, 0.5849, 0.6594, 0.7082, 0.7202, 0.3906, 0.7093, 0.4803,
        0.7397, 0.6620, 0.5957, 0.6109, 0.6270, 0.4812, 0.7202, 0.7803, 0.6185,
        0.5747, 0.6103, 0.5685, 0.6241, 0.6412, 0.5070, 0.7388, 0.3926, 0.4958,
        0.6116, 0.4799, 0.8491, 0.4209, 0.4987, 0.7185, 0.6106, 0.6939, 0.4285,
        0.4364, 0.8605, 0.4283, 0.6323, 0.7032, 0.4871, 0.6113, 0.7521, 0.6559,
        0.6816, 0.8051, 0.6225, 0.5937, 0.5803, 0.7701, 0.4045, 0.6999, 0.5431,
        0.5908, 0.5805, 0.5563, 0.5985, 0.4398, 0.4736, 0.6105, 0.7557, 0.5525,
        0.4753])
mlp.net.1.batch_norm.running_var tensor([0.9935, 0.7768, 0.8101, 1.0493, 1.0930, 0.9896, 0.4936, 1.1079, 0.5521,
        1.0681, 1.1444, 0.7664, 0.6459, 0.7031, 0.7764, 1.0302, 1.2684, 0.6688,
        1.0202, 0.6534, 0.8925, 1.0466, 0.9052, 0.6848, 1.1941, 0.5901, 0.5889,
        0.6455, 0.6528, 1.3015, 0.7661, 0.6046, 1.3837, 0.6893, 1.0526, 0.5567,
        0.3827, 1.5200, 0.4517, 0.9408, 1.2561, 0.6152, 0.9373, 1.1293, 0.6977,
        0.8383, 1.4740, 0.7254, 1.1181, 0.7339, 1.2293, 0.3490, 1.0809, 0.5881,
        0.8380, 0.6904, 0.6227, 0.8787, 0.7387, 0.6013, 0.8495, 0.8457, 0.7789,
        0.5825])
mlp.net.1.batch_norm.num_batches_tracked tensor(74)
mlp.net.2.linear.weight tensor([[ 0.0329,  0.2729, -0.2334,  ...,  0.0119,  0.0894, -0.2450],
        [ 0.0052,  0.2595, -0.1655,  ...,  0.1466,  0.0538,  0.0271],
        [ 0.1296, -0.0934,  0.1976,  ...,  0.0605, -0.0621,  0.0702],
        ...,
        [ 0.0801, -0.1882,  0.0630,  ..., -0.3096, -0.0343, -0.0703],
        [-0.2680, -0.0263, -0.1144,  ..., -0.2092, -0.0526, -0.1184],
        [-0.2140,  0.2762, -0.1572,  ..., -0.0489,  0.1336, -0.1684]])
mlp.net.2.linear.bias tensor([-0.0097,  0.1176,  0.0447,  0.1077, -0.0484,  0.0092, -0.0109, -0.0345,
         0.0775,  0.0030, -0.0213, -0.0675, -0.0780,  0.0112,  0.0610,  0.1173,
        -0.0548, -0.0688,  0.0951, -0.1177, -0.0261, -0.0094,  0.0028,  0.0585,
        -0.0655, -0.0738,  0.0949, -0.1185, -0.1131,  0.0271,  0.1233, -0.1174,
        -0.0989,  0.0446,  0.0484, -0.0672,  0.0007, -0.0118,  0.0632,  0.0726,
        -0.0947,  0.0601, -0.0247,  0.0209,  0.0608, -0.0213, -0.1218,  0.1200,
        -0.0468, -0.0266,  0.0352, -0.0659,  0.0252, -0.0524,  0.0464, -0.0848,
         0.0611, -0.0331,  0.0534, -0.0692,  0.0143, -0.0173, -0.0906, -0.1034])
mlp.net.2.batch_norm.weight tensor([0.9949, 0.9995, 0.9919, 0.9983, 1.0017, 0.9939, 1.0138, 1.0137, 0.9801,
        0.9992, 0.9938, 0.9877, 0.9872, 0.9978, 1.0063, 1.0008, 0.9938, 0.9801,
        1.0225, 1.0159, 0.9988, 0.9995, 0.9918, 0.9936, 1.0222, 0.9904, 1.0045,
        1.0143, 0.9911, 1.0016, 0.9715, 1.0138, 1.0088, 0.9950, 1.0049, 0.9901,
        1.0024, 1.0061, 0.9822, 1.0221, 1.0182, 1.0120, 1.0043, 1.0174, 1.0030,
        0.9888, 1.0025, 1.0082, 1.0109, 1.0001, 1.0203, 1.0180, 1.0012, 1.0178,
        0.9841, 0.9900, 1.0181, 1.0107, 1.0092, 0.9966, 1.0131, 1.0090, 0.9966,
        0.9999])
mlp.net.2.batch_norm.bias tensor([ 0.0032, -0.0046, -0.0057,  0.0012, -0.0044, -0.0019, -0.0079,  0.0051,
        -0.0201, -0.0031, -0.0107, -0.0026, -0.0050, -0.0107,  0.0040,  0.0090,
        -0.0015, -0.0039,  0.0036,  0.0022, -0.0137,  0.0125,  0.0182,  0.0045,
        -0.0003,  0.0064,  0.0082,  0.0019,  0.0121,  0.0011, -0.0007, -0.0163,
         0.0044, -0.0096, -0.0140, -0.0006,  0.0021,  0.0069, -0.0145,  0.0102,
        -0.0105, -0.0073, -0.0039, -0.0041, -0.0015,  0.0025, -0.0127,  0.0138,
        -0.0137,  0.0027, -0.0064,  0.0056,  0.0016,  0.0025, -0.0154, -0.0043,
         0.0019,  0.0102,  0.0083, -0.0109, -0.0109,  0.0112,  0.0028, -0.0038])
mlp.net.2.batch_norm.running_mean tensor([0.6656, 0.6429, 0.6370, 0.6598, 0.5050, 0.8178, 0.6987, 0.4642, 0.6502,
        0.6190, 0.5784, 0.5646, 0.5495, 0.5335, 0.7359, 0.6264, 0.4543, 0.5620,
        0.6956, 0.4591, 0.5505, 0.5601, 0.6494, 0.6258, 0.6403, 0.6022, 0.6708,
        0.6505, 0.6595, 0.5935, 0.6839, 0.3335, 0.4561, 0.5094, 0.8432, 0.5165,
        0.6188, 0.5358, 0.5951, 0.6465, 0.6125, 0.5695, 0.5389, 0.5983, 0.7437,
        0.6699, 0.3284, 0.6930, 0.5549, 0.4373, 0.6384, 0.6467, 0.5284, 0.4749,
        0.6257, 0.5602, 0.6079, 0.5590, 0.5621, 0.6208, 0.5793, 0.6555, 0.6673,
        0.4279])
mlp.net.2.batch_norm.running_var tensor([0.8080, 1.2781, 0.9803, 0.8211, 0.5881, 1.0807, 1.4340, 0.5460, 0.8132,
        0.8728, 0.7034, 0.7685, 0.6681, 0.9094, 1.4890, 1.0227, 0.4656, 0.8271,
        0.9987, 0.6479, 0.6724, 0.8437, 0.8160, 0.9554, 1.6021, 0.9006, 1.1406,
        1.0672, 1.4583, 0.8830, 1.0168, 0.3532, 0.6283, 0.4953, 1.6896, 0.8775,
        1.0523, 0.7270, 0.6367, 1.0041, 0.9763, 0.9506, 0.6441, 0.6833, 1.0408,
        1.6427, 0.3647, 0.9037, 0.7905, 0.6202, 0.8757, 1.0889, 0.6091, 0.6056,
        1.0631, 0.8895, 1.1610, 0.9450, 0.9259, 1.2090, 0.8347, 1.1779, 1.3121,
        0.5750])
mlp.net.2.batch_norm.num_batches_tracked tensor(74)
mlp.net.3.linear.weight tensor([[-0.2930, -0.1457, -0.3591,  ..., -0.2414,  0.2649, -0.0244],
        [ 0.2765, -0.0824, -0.5168,  ..., -0.0648,  0.0784,  0.0586],
        [ 0.1371, -0.3371, -0.0503,  ...,  0.0323, -0.1363, -0.0397],
        ...,
        [ 0.0624, -0.0071, -0.1068,  ...,  0.2306, -0.0624, -0.0705],
        [-0.1294,  0.1005,  0.4192,  ...,  0.0098, -0.1015, -0.1965],
        [-0.1532, -0.0999, -0.0724,  ..., -0.1265,  0.0689, -0.1957]])
mlp.net.3.linear.bias tensor([-0.1164,  0.0772, -0.1026,  0.1215, -0.0445, -0.0377,  0.1019, -0.0565,
         0.0513, -0.1154, -0.0440,  0.1283, -0.1298,  0.0546,  0.0180, -0.0932,
        -0.0875,  0.0877,  0.1249,  0.0013,  0.0948, -0.1049,  0.0616,  0.0104,
        -0.0278,  0.0172,  0.0025, -0.0629, -0.0487, -0.0375, -0.1027,  0.0291,
        -0.0260, -0.0293,  0.0185,  0.0269,  0.0395, -0.0064, -0.0593, -0.0788,
         0.0394,  0.0451,  0.1152,  0.0426, -0.0650, -0.1142,  0.0164,  0.1303,
        -0.0767, -0.0601, -0.1131, -0.0470, -0.0641, -0.0796,  0.0823,  0.0521,
        -0.0442, -0.0980,  0.0793, -0.0050, -0.0910, -0.0763,  0.1221,  0.0015])
mlp.net.3.batch_norm.weight tensor([0.9956, 0.9758, 0.9857, 0.9892, 0.9800, 0.9868, 0.9878, 0.9847, 0.9783,
        1.0120, 0.9954, 1.0084, 0.9790, 0.9728, 1.0051, 1.0085, 0.9839, 0.9883,
        0.9911, 0.9805, 1.0113, 1.0110, 0.9809, 1.0029, 0.9905, 0.9899, 1.0077,
        0.9922, 0.9711, 0.9823, 1.0114, 0.9826, 0.9853, 0.9910, 0.9875, 0.9862,
        0.9929, 0.9798, 0.9802, 0.9830, 0.9885, 0.9703, 0.9878, 0.9766, 0.9865,
        0.9832, 1.0153, 0.9949, 0.9693, 0.9876, 0.9788, 0.9885, 0.9763, 0.9801,
        1.0066, 1.0043, 1.0042, 1.0043, 0.9730, 0.9952, 0.9800, 0.9823, 1.0065,
        0.9720])
mlp.net.3.batch_norm.bias tensor([-0.0068, -0.0006, -0.0014,  0.0026,  0.0046,  0.0011, -0.0002, -0.0060,
         0.0008, -0.0007,  0.0099, -0.0116,  0.0005,  0.0025, -0.0090,  0.0005,
         0.0087,  0.0012, -0.0023, -0.0116, -0.0020,  0.0016, -0.0023, -0.0108,
        -0.0090,  0.0009, -0.0032,  0.0066, -0.0076,  0.0047, -0.0105,  0.0024,
        -0.0056,  0.0097, -0.0058,  0.0091,  0.0018, -0.0002,  0.0026, -0.0011,
        -0.0003,  0.0007, -0.0015,  0.0059,  0.0028, -0.0060, -0.0007,  0.0041,
        -0.0123, -0.0034,  0.0072, -0.0066, -0.0041, -0.0033,  0.0102, -0.0076,
        -0.0017,  0.0023,  0.0025,  0.0103,  0.0019, -0.0007, -0.0119, -0.0024])
mlp.net.3.batch_norm.running_mean tensor([0.5811, 0.6134, 0.5591, 0.7984, 0.6512, 0.5260, 0.7905, 0.5827, 0.6536,
        0.5920, 0.5936, 0.7267, 0.6547, 0.6560, 0.6035, 0.4737, 0.6003, 0.7400,
        0.6250, 0.6748, 0.6038, 0.6770, 0.4932, 0.6300, 0.5810, 0.8069, 0.5777,
        0.6043, 0.5065, 0.5710, 0.6113, 0.5556, 0.6042, 0.5628, 0.5107, 0.5567,
        0.5380, 0.5014, 0.7118, 0.6682, 0.6476, 0.6377, 0.6080, 0.6288, 0.5173,
        0.6380, 0.6245, 0.7437, 0.5564, 0.5356, 0.5663, 0.5205, 0.4427, 0.5093,
        0.6128, 0.5678, 0.7904, 0.5249, 0.6562, 0.5855, 0.5718, 0.6861, 0.7908,
        0.5170])
mlp.net.3.batch_norm.running_var tensor([0.6321, 0.7960, 0.7310, 1.6353, 0.8462, 0.7329, 2.1881, 0.7926, 1.6431,
        0.7566, 0.7840, 0.8203, 0.9769, 0.9341, 1.1234, 0.7183, 0.9299, 1.2113,
        0.8303, 1.7736, 0.6065, 1.7899, 0.4908, 1.0127, 0.8632, 1.1141, 0.6976,
        0.6984, 0.7280, 1.0162, 0.7558, 0.7370, 1.0059, 0.8550, 0.4818, 0.9149,
        0.6362, 0.8974, 1.1395, 0.7567, 0.8127, 0.8402, 0.6499, 0.9135, 0.5888,
        1.2061, 0.8531, 1.5690, 0.8136, 0.7574, 1.3450, 0.5767, 0.7021, 0.9703,
        1.1600, 0.5835, 2.0026, 0.7439, 0.9361, 0.7490, 0.8423, 0.8873, 1.7461,
        0.6767])
mlp.net.3.batch_norm.num_batches_tracked tensor(74)
mlp.net.4.weight tensor([[-0.0256,  0.0357,  0.0438,  0.0766,  0.0978, -0.0908, -0.0739,  0.0377,
          0.0850, -0.0396,  0.0470, -0.0533, -0.0883,  0.0551, -0.0697, -0.0206,
          0.0716, -0.0362,  0.0910, -0.1043,  0.0249, -0.0614, -0.0433, -0.0146,
          0.0357, -0.0202, -0.0311, -0.0039,  0.0783,  0.0170, -0.0142, -0.0616,
          0.0344, -0.0144,  0.0935, -0.1025, -0.0573,  0.0886,  0.0613,  0.0574,
          0.0002,  0.0773, -0.0502, -0.0870, -0.0873, -0.1011,  0.0311, -0.0522,
          0.0932,  0.0390, -0.1004,  0.0704,  0.0570, -0.0336, -0.0225,  0.0819,
         -0.0764,  0.0130, -0.0888, -0.0208,  0.0274,  0.0186,  0.0097,  0.0728]])
