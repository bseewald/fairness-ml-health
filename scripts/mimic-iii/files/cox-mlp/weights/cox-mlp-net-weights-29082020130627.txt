Weights: 
embeddings.embeddings.0.weight tensor([[ 0.3943,  0.1114],
        [ 0.3490, -0.0800],
        [ 0.0959,  0.2995],
        [-0.2511, -0.2120]])
embeddings.embeddings.1.weight tensor([[ 0.3325, -0.4675],
        [ 0.1617,  0.3411],
        [-0.2449,  0.2122],
        [ 0.2031, -0.4325],
        [ 0.1455, -0.4385]])
embeddings.embeddings.2.weight tensor([[ 0.0008,  0.3611,  0.4200],
        [ 0.3185,  0.1462,  0.3555],
        [ 0.0613,  0.3858,  0.3502],
        [-0.0189, -0.3425,  0.3303],
        [ 0.3511, -0.1160,  0.2105],
        [ 0.1348,  0.3627, -0.0693]])
embeddings.embeddings.3.weight tensor([[-0.2373, -0.5808],
        [-0.4823,  0.4086],
        [ 0.0867, -0.3365],
        [-0.0866, -0.9942]])
embeddings.embeddings.4.weight tensor([[-0.4926, -0.2717],
        [ 0.5548,  0.6796],
        [-0.6214,  0.0145],
        [-0.6416, -0.5874]])
mlp.net.0.linear.weight tensor([[-0.1053, -0.2735, -0.6656,  ...,  0.1247, -0.3034,  0.4486],
        [ 0.4786,  0.2473,  0.2986,  ..., -0.5060, -0.4705,  0.2712],
        [-0.3347, -0.0914, -0.7529,  ..., -0.2229, -0.3362,  0.4086],
        ...,
        [ 0.1586,  0.4363, -0.4444,  ..., -0.2379,  0.3676,  0.5279],
        [-0.2754,  0.2865, -0.1446,  ...,  0.3127, -0.1798,  0.0409],
        [-0.0720,  0.0726,  0.1683,  ..., -0.3541, -0.3019,  0.1373]])
mlp.net.0.linear.bias tensor([-0.0528,  0.0738, -0.1063,  0.0291,  0.1480, -0.0384,  0.0933,  0.1020,
        -0.0230,  0.0827,  0.2250, -0.1246, -0.0914,  0.2109,  0.1733, -0.1875,
        -0.0644,  0.0973,  0.1387,  0.0983, -0.2245, -0.2023, -0.0879,  0.0601,
        -0.1047,  0.0636, -0.0421, -0.1518, -0.0270,  0.1893,  0.1474,  0.0440,
         0.1284, -0.0780,  0.0456, -0.0063,  0.0227,  0.1287,  0.0105, -0.1277,
        -0.1631, -0.0209,  0.1526,  0.1062, -0.0142,  0.0863, -0.0800, -0.0751,
         0.1407,  0.0306,  0.1025, -0.1082,  0.0606,  0.1739, -0.1764,  0.1257,
        -0.0267, -0.0129, -0.0018, -0.1251,  0.0495, -0.0463,  0.1659, -0.0286])
mlp.net.0.batch_norm.weight tensor([0.9222, 0.7708, 0.8667, 0.9170, 0.9630, 1.0168, 0.9216, 0.9207, 0.8877,
        0.8896, 0.9521, 0.7762, 0.9573, 1.1687, 0.8592, 0.8651, 1.0756, 0.8981,
        0.9100, 0.9487, 0.9562, 0.9337, 0.9420, 0.7467, 0.9345, 0.9062, 1.0359,
        0.8195, 0.8847, 1.0527, 1.0014, 1.1482, 0.8830, 0.8933, 0.8845, 0.8922,
        0.9656, 0.8742, 0.8127, 0.8813, 0.9940, 1.0700, 0.8456, 0.9757, 0.8592,
        0.9076, 1.0458, 0.9720, 0.9941, 1.0459, 0.9634, 0.9480, 0.9274, 0.8737,
        0.7873, 0.9554, 0.7818, 0.8396, 0.8237, 0.8979, 0.8755, 0.8311, 1.0173,
        0.9145])
mlp.net.0.batch_norm.bias tensor([-0.1609, -0.0136,  0.0223,  0.0582, -0.0710,  0.1117,  0.0409,  0.0405,
         0.0313,  0.0734,  0.0025, -0.0349, -0.0703,  0.0307,  0.1320,  0.1111,
         0.0261, -0.0207, -0.0034, -0.0585,  0.0580,  0.1058, -0.0501,  0.0122,
         0.0989, -0.0331,  0.0226, -0.1152,  0.1667, -0.1153,  0.0911, -0.0233,
        -0.0799,  0.0284, -0.0174, -0.0896, -0.0783, -0.0593,  0.0416, -0.0539,
         0.1691, -0.0006, -0.0462, -0.0543, -0.0335,  0.0115,  0.0341, -0.0722,
         0.0005,  0.1142,  0.0284, -0.0519, -0.0455, -0.0536,  0.0488,  0.0733,
        -0.0201,  0.0508, -0.1216,  0.0458,  0.0166, -0.0958,  0.1585,  0.0325])
mlp.net.0.batch_norm.running_mean tensor([7.1236e-03, 5.8417e-01, 5.0725e-01, 5.0910e-01, 8.6195e-03, 5.8920e-01,
        1.7510e-01, 2.5960e-02, 1.9857e-02, 7.3724e-01, 6.4361e-01, 3.8063e-01,
        8.6045e-03, 6.0675e-01, 8.1038e-02, 1.2032e-02, 2.8901e-02, 6.9686e-01,
        1.3015e+00, 7.8062e-01, 2.6252e-01, 3.3469e-01, 1.4177e-01, 3.1230e-01,
        1.8731e-01, 2.7344e-01, 1.3248e-02, 6.1685e-01, 8.5760e-02, 5.2038e-01,
        6.0660e-01, 7.0193e-01, 1.6961e-01, 2.2948e-01, 1.1593e+00, 1.3879e+00,
        1.0655e-01, 6.1656e-01, 8.1189e-01, 3.3808e-01, 1.8286e-02, 1.0441e-01,
        3.7535e-01, 5.6916e-02, 9.5628e-04, 3.0793e-01, 3.4108e-04, 2.0617e-01,
        1.5410e-01, 1.5522e-01, 2.0037e-01, 5.2005e-01, 1.0056e+00, 1.8248e-02,
        2.2589e-01, 4.4642e-01, 1.9718e-02, 7.1195e-03, 4.4418e-01, 6.8931e-01,
        2.0457e-01, 3.4501e-01, 4.0998e-01, 3.5543e-01])
mlp.net.0.batch_norm.running_var tensor([2.0187e-03, 1.8922e-01, 1.8949e-01, 2.3475e-01, 2.7873e-03, 2.9572e-01,
        6.6473e-02, 7.7312e-03, 4.8707e-03, 1.3670e-01, 9.0715e-02, 1.6534e-01,
        1.5468e-03, 2.9411e-01, 2.4952e-02, 4.0167e-03, 1.2475e-02, 1.8879e-01,
        1.3891e-01, 6.9773e-02, 1.2045e-01, 1.2719e-01, 7.9720e-02, 1.1955e-01,
        5.8429e-02, 1.3143e-01, 3.5566e-03, 1.3071e-01, 2.3461e-02, 1.0573e-01,
        3.2190e-01, 2.4921e-01, 3.9669e-02, 9.4065e-02, 2.2321e-01, 2.0341e-01,
        5.0029e-02, 1.3016e-01, 2.6583e-01, 1.6400e-01, 6.1066e-03, 4.6398e-02,
        1.3312e-01, 2.7392e-02, 2.8779e-04, 9.4471e-02, 6.0668e-05, 8.4027e-02,
        4.6760e-02, 6.2514e-02, 1.2609e-01, 1.2482e-01, 2.1091e-01, 7.1102e-03,
        9.1045e-02, 2.1802e-01, 3.1669e-03, 2.3138e-03, 1.5267e-01, 1.3534e-01,
        7.9877e-02, 1.2521e-01, 1.4200e-01, 8.6193e-02])
mlp.net.0.batch_norm.num_batches_tracked tensor(117)
mlp.net.1.linear.weight tensor([[-0.1942,  0.0570,  0.0934,  ...,  0.1401, -0.4576,  0.1566],
        [ 0.0489,  0.1101,  0.0712,  ..., -0.0921,  0.5040,  0.0518],
        [-0.1748,  0.0309, -0.0552,  ...,  0.0743,  0.0122, -0.0441],
        ...,
        [ 0.1701,  0.0101,  0.1542,  ..., -0.0075, -0.2887,  0.1334],
        [-0.6263,  0.3134, -0.1209,  ...,  0.0747,  0.3054, -0.1783],
        [ 0.0951,  0.1246, -0.0584,  ...,  0.2039, -0.0869, -0.2758]])
mlp.net.1.linear.bias tensor([-0.1695,  0.1049, -0.1948,  0.0412, -0.1205, -0.0217,  0.0595, -0.0189,
         0.0371, -0.0624,  0.0447,  0.0157, -0.0062, -0.0451,  0.0502,  0.0138,
        -0.0772, -0.0933, -0.2442,  0.0252, -0.0756,  0.0798,  0.0073, -0.0493,
         0.0541, -0.0805,  0.0762,  0.2262, -0.0802,  0.0538, -0.0018, -0.1459,
        -0.0941,  0.1287, -0.1272, -0.0122,  0.0775,  0.1062,  0.0286,  0.0593,
        -0.1717,  0.0438, -0.0622, -0.0061,  0.0756,  0.1173,  0.0629,  0.1838,
        -0.0983, -0.1491,  0.0927,  0.0766,  0.1122,  0.2010, -0.1543, -0.0067,
        -0.0879, -0.0285, -0.0138, -0.1199,  0.0487, -0.0942,  0.1580, -0.1224])
mlp.net.1.batch_norm.weight tensor([0.9265, 0.9781, 1.0157, 1.0602, 0.9844, 0.8745, 1.0321, 0.9048, 0.8738,
        0.8370, 0.9807, 0.9803, 0.9492, 0.8364, 0.7204, 0.8636, 0.8884, 0.8847,
        0.9449, 0.8600, 0.9247, 0.9265, 0.8002, 0.8818, 1.0468, 0.7715, 0.9053,
        0.8550, 0.9514, 0.9919, 1.0520, 0.9973, 0.9150, 0.8845, 0.8638, 1.0578,
        1.0203, 1.0153, 1.0250, 0.9909, 0.9373, 0.8993, 0.8422, 0.9608, 1.1023,
        1.0055, 0.9253, 0.8453, 0.8406, 0.8683, 0.9110, 0.9420, 0.8407, 1.0103,
        0.8060, 0.8907, 0.8461, 1.0565, 0.8839, 0.9654, 1.0636, 0.8669, 0.8822,
        0.9268])
mlp.net.1.batch_norm.bias tensor([ 0.0141,  0.0033, -0.0664,  0.0786, -0.0391,  0.0933,  0.1399, -0.0704,
         0.0224,  0.0814,  0.0137,  0.0926, -0.0509,  0.1266,  0.0492, -0.0230,
        -0.0087, -0.0344,  0.0657, -0.0063, -0.0838, -0.0537, -0.0452, -0.0659,
         0.1501, -0.0105,  0.0438,  0.0485,  0.1649,  0.0593,  0.0337, -0.0200,
         0.0800,  0.1387,  0.0294,  0.0562, -0.0786,  0.0335,  0.1061,  0.0834,
         0.1405, -0.0405,  0.0711,  0.0212, -0.0514, -0.0555,  0.0422,  0.0087,
         0.0124,  0.0983,  0.0054,  0.0135, -0.0559,  0.0410, -0.0430, -0.0568,
         0.0070,  0.0186, -0.0292, -0.1086, -0.0824, -0.0002, -0.1002,  0.0119])
mlp.net.1.batch_norm.running_mean tensor([0.7953, 1.2179, 0.6750, 1.1068, 0.6973, 0.7853, 1.1270, 0.8509, 1.0566,
        0.7843, 1.0044, 0.7597, 0.8292, 0.7195, 0.8023, 0.7853, 0.8339, 0.7772,
        0.8383, 0.7680, 0.7604, 0.8723, 0.6785, 0.8949, 1.2382, 0.8027, 0.7994,
        1.0533, 0.6917, 0.9923, 1.1388, 0.6388, 0.7462, 0.9327, 0.6694, 1.0949,
        1.0864, 0.8504, 0.9581, 0.8808, 0.8971, 0.8873, 0.7442, 0.9383, 1.0699,
        1.0470, 0.6491, 1.1861, 0.7283, 0.6831, 0.6100, 1.1292, 0.9298, 1.1152,
        0.7250, 0.7141, 0.6185, 1.0359, 0.8360, 0.7508, 0.9756, 0.7954, 1.0260,
        0.6960])
mlp.net.1.batch_norm.running_var tensor([1.7710, 4.5865, 1.3452, 3.5448, 1.7708, 2.2663, 3.6613, 2.6070, 1.8624,
        1.8659, 1.8162, 1.9598, 2.0000, 1.5757, 1.3454, 2.4242, 2.5830, 1.8200,
        2.9631, 1.4749, 1.4253, 1.8074, 1.2923, 1.7897, 4.0807, 1.1799, 1.3768,
        1.7474, 1.6839, 2.3741, 3.9364, 1.2321, 1.6527, 1.6694, 1.1816, 4.1317,
        2.3127, 1.6911, 2.3877, 2.5729, 2.4531, 1.6716, 1.6044, 2.5055, 3.4122,
        2.1347, 1.0669, 2.3033, 1.6186, 1.2056, 0.9486, 3.8971, 2.0205, 2.0315,
        1.6799, 1.4906, 1.2420, 2.3969, 1.2903, 1.3565, 2.9500, 1.8352, 1.6822,
        1.9272])
mlp.net.1.batch_norm.num_batches_tracked tensor(117)
mlp.net.2.linear.weight tensor([[ 0.1173, -0.1828, -0.0037,  ..., -0.0855, -0.1470,  0.0431],
        [ 0.1304, -0.0823, -0.1229,  ..., -0.1467, -0.0973,  0.0631],
        [-0.0415, -0.0702,  0.2174,  ...,  0.1008,  0.0937,  0.0936],
        ...,
        [-0.1760, -0.2218, -0.2825,  ..., -0.0306, -0.1828, -0.0198],
        [-0.0055, -0.1627, -0.3658,  ..., -0.0032, -0.2969,  0.0464],
        [-0.1166, -0.0778,  0.0030,  ...,  0.1760,  0.1021, -0.0773]])
mlp.net.2.linear.bias tensor([-0.0247, -0.0539,  0.2713,  0.1839,  0.1046,  0.0423, -0.0587, -0.0507,
         0.2202, -0.0111, -0.0935,  0.0624,  0.0585,  0.0423, -0.0988,  0.0292,
        -0.0663,  0.0983, -0.0875, -0.0558,  0.0480,  0.1697,  0.0357, -0.0379,
         0.0284,  0.1239, -0.0821,  0.0215, -0.1099, -0.0362, -0.1403,  0.0406,
         0.0033,  0.1340,  0.1927,  0.0432, -0.0214, -0.0694, -0.1642, -0.0041,
        -0.0302,  0.2604,  0.1877, -0.0945,  0.0636,  0.0520,  0.1761,  0.2057,
         0.0631, -0.0154, -0.0247, -0.0340, -0.1894, -0.0570, -0.0294,  0.0071,
         0.0383,  0.1152,  0.0368,  0.1684, -0.0750, -0.0983, -0.0192,  0.0321])
mlp.net.2.batch_norm.weight tensor([0.9123, 1.0588, 1.0021, 1.0694, 0.9557, 0.7884, 0.8367, 0.8919, 0.9061,
        0.8853, 0.9003, 0.9766, 0.8194, 0.9164, 0.8649, 0.9730, 0.8707, 1.0295,
        0.9468, 0.8966, 1.0447, 1.0067, 1.0273, 0.9159, 0.8950, 0.9556, 0.9049,
        0.9302, 1.0620, 0.9284, 0.9628, 0.9403, 0.9795, 0.9729, 0.9494, 0.9648,
        0.9370, 0.8899, 0.8869, 0.8700, 0.9163, 0.8443, 0.8930, 0.9539, 0.9207,
        0.8261, 0.7664, 0.9880, 0.9506, 0.8550, 0.9768, 0.8993, 0.8942, 0.9946,
        0.9881, 0.8574, 0.9397, 1.0456, 0.9378, 0.8959, 0.9076, 0.8586, 0.8895,
        0.9395])
mlp.net.2.batch_norm.bias tensor([-0.0118,  0.0494, -0.0258, -0.1062,  0.0126,  0.0649, -0.0226, -0.1578,
         0.0097, -0.0472, -0.1442, -0.0082,  0.1259, -0.1058,  0.0660, -0.0740,
        -0.0596,  0.0147,  0.0582, -0.0558, -0.0137,  0.0499,  0.1095,  0.0422,
         0.0253, -0.0614, -0.0681, -0.0253,  0.0855,  0.0672,  0.0928,  0.0179,
         0.0419, -0.0002,  0.1166,  0.0951,  0.0374, -0.1000,  0.0640,  0.0336,
        -0.0628, -0.0422,  0.1712,  0.0069, -0.0545, -0.0365,  0.0334, -0.0038,
        -0.0213,  0.0027, -0.0231,  0.0360,  0.0128,  0.0573,  0.0182,  0.1015,
         0.0099,  0.1170, -0.0836, -0.1281, -0.1013, -0.0925, -0.0554,  0.1021])
mlp.net.2.batch_norm.running_mean tensor([0.7733, 0.8894, 1.2394, 1.2936, 0.9345, 0.8717, 0.8920, 0.8477, 0.8758,
        0.8291, 0.8543, 0.9727, 0.8214, 1.1456, 0.7299, 0.8245, 0.6993, 1.1134,
        0.7092, 0.8551, 0.6545, 0.9163, 0.9425, 0.8148, 1.3099, 1.0104, 0.7268,
        0.7943, 0.7102, 0.7882, 0.9550, 0.8530, 0.6967, 1.2035, 1.2122, 0.7499,
        0.7656, 0.8814, 0.7348, 0.8189, 0.7387, 1.0607, 1.0170, 0.8469, 0.7813,
        0.8989, 0.7647, 1.0258, 1.1153, 0.8369, 0.7620, 0.9802, 0.7160, 0.6047,
        0.9379, 0.6586, 0.7884, 1.1532, 0.9300, 1.1586, 0.6713, 0.8108, 0.9643,
        0.5734])
mlp.net.2.batch_norm.running_var tensor([1.4183, 3.1067, 2.3507, 2.3708, 2.6798, 1.6808, 3.2199, 2.3893, 2.1259,
        1.5081, 1.7666, 3.7420, 1.9603, 4.2475, 1.8254, 1.4225, 1.9924, 3.8553,
        1.6607, 2.9583, 1.4281, 2.6510, 3.0978, 1.4503, 2.5868, 2.9223, 1.8081,
        2.0230, 1.6827, 1.6978, 3.2509, 2.3040, 1.7331, 4.5337, 4.1348, 2.2655,
        1.9078, 2.6416, 2.1712, 2.6240, 2.3684, 1.7489, 3.0503, 2.5884, 1.2704,
        3.1617, 1.1608, 1.8889, 1.8673, 2.8927, 2.0368, 4.0270, 1.5203, 0.8977,
        2.3018, 1.5231, 1.2854, 4.7623, 1.7088, 1.8836, 1.1642, 2.4013, 1.7681,
        0.7474])
mlp.net.2.batch_norm.num_batches_tracked tensor(117)
mlp.net.3.linear.weight tensor([[ 0.0229,  0.2082,  0.3463,  ...,  0.2125,  0.3091, -0.1520],
        [ 0.1555, -0.0025,  0.1528,  ..., -0.0864, -0.2484,  0.0254],
        [-0.0361, -0.1765,  0.2555,  ...,  0.0168,  0.0013,  0.3027],
        ...,
        [-0.2855, -0.2690, -0.0656,  ...,  0.3648,  0.3031, -0.2088],
        [ 0.1073,  0.5388,  0.1127,  ..., -0.1957, -0.0246, -0.1327],
        [ 0.1118,  0.3754, -0.0038,  ..., -0.0200, -0.0424,  0.2518]])
mlp.net.3.linear.bias tensor([-0.0608,  0.1740,  0.0552, -0.1290, -0.0493,  0.0910,  0.1057,  0.0946,
        -0.1955, -0.0192, -0.1741, -0.1504, -0.1074,  0.1340, -0.0647,  0.0684,
         0.1292,  0.0199,  0.0966, -0.1057,  0.0068,  0.1148,  0.0164, -0.0235,
         0.1055, -0.0646,  0.0517,  0.0144,  0.0778,  0.0731,  0.0313, -0.0508,
         0.1733,  0.0653,  0.0524,  0.0745,  0.0733,  0.1164,  0.0308,  0.0342,
         0.0887,  0.1691,  0.0949, -0.1101, -0.1020, -0.1230,  0.0417, -0.0333,
         0.1142, -0.0360, -0.0373,  0.1597,  0.0765,  0.1734, -0.0047,  0.0582,
        -0.0665,  0.0142, -0.1283,  0.0635, -0.0211,  0.0394,  0.1068, -0.0859])
mlp.net.3.batch_norm.weight tensor([0.7887, 0.7786, 0.8099, 0.7784, 0.8726, 0.8072, 0.8795, 0.8481, 0.6803,
        0.8123, 0.8592, 0.7705, 0.7581, 0.8029, 0.7787, 0.8300, 0.8239, 0.7582,
        0.8480, 0.8692, 0.7898, 0.7823, 0.8399, 0.8116, 0.7954, 0.8184, 0.7890,
        0.7743, 0.7849, 0.8405, 0.8258, 0.8530, 0.8108, 0.8264, 0.7311, 0.7865,
        0.8160, 0.8487, 0.8115, 0.8053, 0.7899, 0.8642, 0.8475, 0.9391, 0.7820,
        0.7928, 0.7882, 0.7973, 0.8239, 0.7711, 0.8077, 0.8275, 0.8521, 0.8603,
        0.8413, 0.8617, 0.8447, 0.8507, 0.8246, 0.8821, 0.8322, 0.8157, 0.8326,
        0.8044])
mlp.net.3.batch_norm.bias tensor([ 4.8345e-02,  2.0334e-02,  7.0386e-03, -4.8182e-02,  4.3438e-02,
         1.7066e-02, -2.9692e-02, -2.5028e-02, -8.7409e-02, -3.5370e-02,
        -4.5982e-03, -2.1137e-02, -3.1184e-02, -7.8489e-02,  2.4411e-02,
         2.3563e-02,  2.5344e-02, -2.8840e-03, -6.8222e-02,  1.1719e-02,
         3.8316e-02, -7.7689e-02, -4.4518e-02,  1.3252e-02,  4.9254e-02,
        -2.6972e-02, -5.2224e-02,  1.8545e-02, -7.5771e-02,  1.8087e-03,
         1.4523e-02,  8.5297e-02, -3.0393e-02,  1.1778e-02, -1.3639e-04,
         2.1256e-02,  3.4168e-02, -3.3848e-02,  3.0535e-02, -1.0290e-02,
         6.8022e-03,  6.0209e-02,  1.8799e-02, -5.0226e-02,  1.5193e-02,
        -1.9556e-03, -1.1012e-02, -2.9245e-02,  1.0732e-02,  3.5439e-02,
         4.7641e-02,  2.7494e-02, -8.8346e-02, -4.4670e-05,  9.7048e-03,
         7.9724e-03, -1.5460e-01, -5.1674e-02, -1.3741e-02,  1.1424e-01,
         1.2832e-02,  4.1336e-02, -3.0767e-02, -5.4256e-02])
mlp.net.3.batch_norm.running_mean tensor([0.5732, 1.0543, 0.7126, 0.7326, 0.6880, 0.7544, 1.0201, 0.8089, 0.6565,
        0.6146, 0.6251, 0.7410, 0.7034, 0.9517, 0.6110, 1.0531, 1.1639, 0.7573,
        0.8017, 0.7850, 0.7374, 0.8193, 0.7591, 0.8655, 0.9815, 0.6447, 0.7719,
        0.8541, 0.8787, 1.3332, 0.9857, 0.6115, 1.0654, 0.6729, 0.7936, 1.0548,
        1.2106, 0.8362, 1.0819, 0.7554, 0.8207, 1.0003, 1.2419, 0.8022, 0.6783,
        0.7184, 0.6657, 0.9948, 0.9798, 0.7847, 0.7638, 1.4415, 0.9073, 1.1110,
        0.9017, 0.8733, 0.8025, 0.8911, 0.6000, 1.2876, 0.7366, 0.7772, 0.9243,
        0.9522])
mlp.net.3.batch_norm.running_var tensor([1.2833, 2.8263, 1.2335, 2.8165, 1.8087, 2.4152, 4.5280, 1.9351, 1.6716,
        1.3574, 2.2811, 3.0541, 1.5757, 2.6974, 1.9516, 3.2751, 1.8231, 2.2368,
        2.1509, 1.8698, 1.2975, 2.4206, 1.4608, 3.5006, 3.4594, 1.5138, 1.7363,
        2.2641, 2.6823, 2.5101, 2.3325, 1.5813, 1.7641, 1.8163, 2.3441, 1.6017,
        6.0686, 3.1929, 3.6722, 1.0443, 1.6265, 2.1900, 2.2344, 2.2969, 1.7323,
        1.6694, 1.3680, 1.3619, 3.8430, 1.1751, 1.4663, 2.3472, 1.4284, 1.6751,
        3.1327, 3.0080, 1.8817, 3.2144, 1.5818, 2.4635, 1.9644, 1.6176, 2.9523,
        3.6764])
mlp.net.3.batch_norm.num_batches_tracked tensor(117)
mlp.net.4.weight tensor([[-0.0103, -0.0016, -0.0297, -0.0531, -0.0363, -0.0285, -0.0409, -0.0036,
         -0.0154,  0.0008,  0.0119, -0.0273, -0.0034, -0.0195, -0.0152, -0.0311,
          0.0525,  0.0165,  0.0094, -0.0195,  0.0304, -0.0048,  0.0263, -0.0144,
         -0.0069,  0.0020,  0.0177, -0.0104,  0.0172,  0.0599, -0.0180, -0.0394,
          0.0299, -0.0156, -0.0048,  0.0465, -0.0262, -0.0561, -0.0122,  0.0068,
         -0.0213,  0.0428,  0.0418, -0.0634, -0.0147,  0.0030, -0.0121,  0.0187,
         -0.0251,  0.0042, -0.0172,  0.0537,  0.0429,  0.0570, -0.0305, -0.0399,
         -0.0372, -0.0236,  0.0190,  0.0433, -0.0109,  0.0298, -0.0080, -0.0499]])
