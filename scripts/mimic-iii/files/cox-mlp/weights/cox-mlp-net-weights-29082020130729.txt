Weights: 
embeddings.embeddings.0.weight tensor([[-0.0708, -0.1554],
        [-0.4536, -0.1917],
        [-0.3623,  0.6363],
        [-0.3049,  0.3693]])
embeddings.embeddings.1.weight tensor([[ 0.0851, -0.1365],
        [ 0.6601, -0.2209],
        [-0.3245, -0.2765],
        [-0.3339,  0.5928],
        [ 0.5783, -0.2156]])
embeddings.embeddings.2.weight tensor([[-0.2843, -0.4257,  0.4761],
        [-0.0037,  0.3188, -0.0656],
        [-0.0320, -0.3332,  0.2767],
        [-0.1730, -0.4132, -0.2108],
        [-0.3900, -0.3868,  0.3039],
        [-0.3580, -0.2968,  0.0202]])
embeddings.embeddings.3.weight tensor([[ 0.4151,  0.0723],
        [ 0.4339,  0.6843],
        [ 0.0068,  0.4199],
        [-0.3812, -0.3227]])
embeddings.embeddings.4.weight tensor([[-0.5072, -0.5307],
        [-0.1493, -0.6821],
        [-0.1455,  0.2411],
        [-0.3409,  0.5238]])
mlp.net.0.linear.weight tensor([[ 0.5625, -0.0178,  0.4761,  ..., -0.0020,  0.2260,  0.0801],
        [ 0.5269,  0.5954,  0.1512,  ...,  0.1625,  0.2352,  0.0736],
        [ 0.3024,  0.2393, -0.2641,  ..., -0.5451, -0.1622,  0.5260],
        ...,
        [ 0.4048, -0.0269,  0.1077,  ..., -0.2933,  0.1001,  0.1969],
        [ 0.1055,  0.0232, -0.1300,  ..., -0.2044, -0.1928, -0.1210],
        [ 0.0843, -0.3559, -0.3507,  ..., -0.1762, -0.0050, -0.1950]])
mlp.net.0.linear.bias tensor([ 0.0284, -0.0796, -0.0035,  0.2204, -0.0640, -0.2179,  0.0843, -0.0435,
         0.1574,  0.0357,  0.2037, -0.1889,  0.0430, -0.2067,  0.0005,  0.0283,
        -0.0372, -0.1111, -0.1371, -0.0376, -0.1061, -0.1514,  0.1279, -0.1808,
         0.2071, -0.0726,  0.0210, -0.0778, -0.0074,  0.1005,  0.1035,  0.0676,
         0.0717, -0.1674,  0.2235,  0.0074, -0.2310, -0.1796,  0.2224, -0.0746,
         0.1126,  0.1290,  0.2256, -0.1521,  0.0631, -0.1361,  0.2221, -0.0846,
        -0.2401,  0.0610,  0.1618, -0.0376, -0.0728, -0.0960,  0.0836, -0.0930,
        -0.0534, -0.1711,  0.0697, -0.0366, -0.1440, -0.2140,  0.1244,  0.0989])
mlp.net.0.batch_norm.weight tensor([0.9669, 0.9589, 0.9965, 1.0280, 0.9467, 0.9386, 1.0727, 1.0263, 1.1028,
        0.9884, 0.9718, 1.0454, 1.0303, 0.9616, 1.0888, 1.0629, 0.9543, 0.9958,
        1.0046, 1.0153, 1.0041, 1.0006, 0.9603, 1.1124, 1.0354, 0.9731, 1.0067,
        0.9522, 0.9628, 0.9649, 0.9737, 1.0178, 0.9757, 0.9484, 1.0612, 0.9226,
        1.0397, 1.0537, 0.9382, 0.9227, 1.0366, 0.9638, 1.0000, 0.9893, 0.9507,
        0.9749, 1.0245, 0.9494, 0.9264, 1.0135, 0.9911, 1.0288, 0.9800, 1.0074,
        0.9917, 1.0145, 1.0208, 1.0146, 1.0199, 0.9666, 1.0373, 1.0041, 0.9505,
        1.0164])
mlp.net.0.batch_norm.bias tensor([ 0.0626, -0.0140, -0.0181,  0.0042,  0.0107,  0.0023,  0.0217, -0.0101,
        -0.0076,  0.0313,  0.0206,  0.0159, -0.0064, -0.0222,  0.0049,  0.0150,
         0.0241,  0.0068,  0.0060,  0.0649, -0.0108, -0.0280, -0.0195,  0.0184,
         0.0154, -0.0157,  0.0279,  0.0128, -0.0127, -0.0223,  0.0252, -0.0148,
         0.0099,  0.0115,  0.0196,  0.0047,  0.0084,  0.0051,  0.0119, -0.0129,
         0.0205,  0.0039, -0.0018,  0.0080, -0.0159, -0.0130,  0.0020, -0.0155,
         0.0130, -0.0301,  0.0063, -0.0228, -0.0056, -0.0326, -0.0035, -0.0208,
         0.0063, -0.0119,  0.0166, -0.0089,  0.0118,  0.0004,  0.0438,  0.0104])
mlp.net.0.batch_norm.running_mean tensor([5.9473e-02, 2.4876e-01, 3.2968e-01, 4.9183e-01, 2.4390e-01, 8.8839e-01,
        5.7210e-02, 4.8973e-01, 7.7569e-01, 2.0857e-03, 8.3501e-02, 4.6032e-02,
        8.3263e-01, 2.2803e-01, 1.4503e-01, 5.0564e-01, 8.8045e-01, 1.9139e-01,
        2.2900e-03, 1.5399e-01, 6.1701e-03, 2.4933e-01, 2.5117e-01, 5.7963e-01,
        3.0388e-01, 5.9952e-03, 5.2669e-01, 3.5414e-01, 1.3803e-01, 1.4642e-02,
        8.2952e-01, 2.4488e-02, 2.2200e-01, 4.7801e-01, 5.2438e-01, 2.2806e-01,
        1.1100e-02, 1.2825e-01, 2.7835e-01, 4.5577e-01, 2.6286e-01, 1.9655e-01,
        0.0000e+00, 3.9880e-04, 5.4544e-02, 8.6757e-01, 9.1226e-01, 2.0666e-01,
        2.6189e-04, 1.7158e-03, 1.2659e+00, 3.8252e-01, 1.1929e-02, 1.5953e-02,
        4.9426e-01, 4.4693e-01, 3.9389e-03, 3.1308e-01, 4.7832e-01, 4.4697e-01,
        2.9114e-01, 9.1163e-01, 1.5850e-02, 6.4684e-04])
mlp.net.0.batch_norm.running_var tensor([2.2986e-02, 8.2953e-02, 1.2015e-01, 1.9636e-01, 6.2511e-02, 3.3205e-01,
        1.8132e-02, 1.2573e-01, 2.2855e-01, 1.2951e-03, 3.3520e-02, 1.4434e-02,
        1.5673e-01, 8.9251e-02, 6.1257e-02, 1.7852e-01, 2.1835e-01, 8.2167e-02,
        8.0557e-04, 5.8285e-02, 1.0283e-03, 4.6892e-02, 8.0023e-02, 2.0899e-01,
        9.2032e-02, 1.7522e-03, 1.1326e-01, 1.5886e-01, 4.6744e-02, 4.7275e-03,
        1.4762e-01, 5.2093e-03, 8.9000e-02, 1.6860e-01, 1.4997e-01, 7.5535e-02,
        2.5994e-03, 2.8404e-02, 8.4255e-02, 1.8085e-01, 9.4425e-02, 7.4169e-02,
        1.8581e-42, 1.5503e-04, 2.2593e-02, 2.0604e-01, 1.5737e-01, 6.8317e-02,
        6.9807e-05, 5.9933e-04, 1.6923e-01, 1.9509e-01, 2.6244e-03, 4.8930e-03,
        1.9314e-01, 2.0791e-01, 1.4072e-03, 1.5338e-01, 1.6622e-01, 1.6695e-01,
        9.0805e-02, 2.2504e-01, 2.0252e-03, 1.3672e-04])
mlp.net.0.batch_norm.num_batches_tracked tensor(912)
mlp.net.1.linear.weight tensor([[ 0.0245,  0.1127, -0.1340,  ..., -0.0676, -0.0760, -0.0080],
        [ 0.1006,  0.3849, -0.1664,  ..., -0.1353,  0.0834,  0.3338],
        [-0.1746,  0.0871, -0.1819,  ...,  0.0782,  0.1346,  0.0085],
        ...,
        [-0.1505, -0.0024, -0.0775,  ..., -0.2195, -0.0928, -0.1033],
        [ 0.2592,  0.0097, -0.3799,  ..., -0.0778,  0.0566, -0.1207],
        [-0.1713,  0.0685,  0.0782,  ...,  0.0183,  0.1613,  0.2733]])
mlp.net.1.linear.bias tensor([ 0.0296,  0.1257, -0.0501, -0.0666,  0.1089,  0.0329,  0.1750,  0.0387,
         0.1066,  0.0097,  0.0733,  0.0426, -0.1113, -0.0499, -0.0223, -0.0846,
        -0.1065,  0.1136, -0.0554, -0.0155,  0.0687,  0.1085, -0.0786, -0.0993,
         0.0059,  0.0949,  0.0259,  0.0273, -0.0091, -0.0363,  0.1203,  0.0074,
         0.1051,  0.1158,  0.0035, -0.0854, -0.0059,  0.0805,  0.0154,  0.0994,
        -0.0846,  0.0244, -0.1363, -0.0060,  0.0140, -0.0195, -0.0313, -0.0050,
         0.0848,  0.1344,  0.0247, -0.0232,  0.0491,  0.1956,  0.1363, -0.0236,
         0.1439,  0.0636,  0.0306,  0.0480, -0.0040, -0.0794,  0.1354,  0.0675])
mlp.net.1.batch_norm.weight tensor([0.9538, 0.9267, 0.9637, 0.9900, 0.9908, 0.9706, 0.9813, 0.9519, 0.9434,
        0.9225, 0.9833, 0.9076, 0.9237, 0.9170, 0.9757, 0.9828, 0.9310, 0.9597,
        1.0049, 0.9446, 0.9432, 0.9763, 0.9353, 0.9218, 0.9549, 0.9917, 0.9947,
        0.9833, 0.9592, 0.9525, 0.9444, 0.9352, 0.9247, 0.9275, 0.9122, 0.9390,
        0.9600, 0.9446, 0.9264, 0.9182, 0.9229, 0.9287, 0.9294, 0.9783, 0.9525,
        0.9226, 1.0016, 0.9652, 0.9641, 0.9674, 0.9917, 0.9492, 0.9582, 0.9979,
        0.9522, 0.9359, 0.9924, 0.9716, 0.9813, 0.9563, 0.9452, 0.9968, 0.9511,
        1.0228])
mlp.net.1.batch_norm.bias tensor([ 1.6117e-03,  5.1294e-03, -5.7569e-04,  1.3713e-02,  1.8163e-02,
        -4.5017e-03, -3.8943e-03,  1.6206e-02, -5.1677e-03,  8.8863e-03,
         1.7073e-02, -2.6175e-03,  6.7406e-04, -9.0124e-03,  3.1286e-02,
        -2.5607e-02,  1.3502e-04, -2.0028e-02, -1.0785e-02,  7.9226e-03,
         1.3794e-03, -1.2690e-02,  3.7852e-03, -5.0833e-04, -1.1399e-02,
        -2.1771e-02,  5.3189e-03,  2.4179e-02, -1.1487e-02, -1.7871e-02,
        -2.2064e-02, -7.8936e-03,  2.6436e-03, -2.1221e-02, -1.6353e-02,
        -2.0132e-03,  6.1588e-03, -1.2392e-02, -1.1040e-02,  9.1062e-03,
        -1.2372e-02, -5.6323e-04,  9.6940e-03, -3.9819e-02, -1.2178e-02,
        -1.8954e-02,  3.0957e-02, -6.2641e-03, -4.5407e-03,  1.4000e-02,
         1.6022e-02, -1.9983e-03, -3.9893e-02, -2.9620e-02, -3.5773e-02,
        -3.9786e-05, -1.8662e-04,  3.7214e-02,  9.9520e-03,  1.7352e-02,
        -1.6922e-02, -1.4428e-02, -6.5463e-03,  7.5245e-03])
mlp.net.1.batch_norm.running_mean tensor([0.9749, 1.1236, 0.8549, 0.9261, 0.9567, 1.1037, 1.1311, 0.8731, 1.0471,
        0.9776, 1.0955, 0.8974, 0.8273, 0.8284, 0.9071, 0.9639, 0.8546, 0.9272,
        1.1241, 0.8834, 0.9985, 0.9884, 0.7779, 0.9112, 1.2034, 0.9959, 1.1285,
        0.9244, 0.8365, 0.8883, 0.9159, 1.0997, 1.1529, 1.0270, 0.9648, 1.0838,
        0.9082, 0.9507, 0.8709, 1.1629, 0.8191, 1.1407, 0.8219, 0.9005, 1.0594,
        0.9309, 0.9201, 0.9526, 0.9271, 0.9615, 0.9751, 0.8666, 1.4599, 1.0759,
        1.0459, 0.9552, 1.0661, 0.9260, 1.0652, 1.1293, 0.9694, 0.8133, 1.1519,
        0.8253])
mlp.net.1.batch_norm.running_var tensor([2.3677, 2.8823, 1.6574, 2.1322, 2.1012, 2.4732, 2.4435, 1.7680, 2.3792,
        2.2740, 2.6096, 1.9075, 1.9738, 2.0607, 1.6994, 2.2602, 2.9162, 2.3271,
        2.9271, 2.3481, 2.2605, 2.6984, 1.9663, 1.8888, 2.8420, 1.9542, 3.3860,
        2.1677, 1.5261, 1.7752, 2.1465, 2.9556, 2.4955, 2.6164, 2.8967, 2.9935,
        1.9585, 2.2810, 2.0281, 3.2647, 1.7548, 3.1793, 2.3107, 1.9488, 2.7149,
        2.5114, 2.2889, 1.7629, 2.2576, 1.6901, 2.2655, 1.7709, 4.2306, 2.4638,
        2.3668, 2.1111, 2.1049, 1.9756, 2.7310, 3.8226, 2.3232, 2.5601, 2.7309,
        1.5905])
mlp.net.1.batch_norm.num_batches_tracked tensor(912)
mlp.net.2.weight tensor([[-0.0355,  0.0030, -0.0013, -0.0188,  0.0204,  0.0191,  0.0187,  0.0196,
          0.0101,  0.0032,  0.0051,  0.0106, -0.0174, -0.0042,  0.0036, -0.0129,
         -0.0309, -0.0247,  0.0211, -0.0006, -0.0043, -0.0212, -0.0197,  0.0276,
          0.0283,  0.0127, -0.0136, -0.0225,  0.0098, -0.0112, -0.0217,  0.0022,
          0.0445, -0.0285, -0.0167,  0.0107, -0.0119, -0.0014, -0.0209, -0.0266,
         -0.0113, -0.0260, -0.0255,  0.0120, -0.0259, -0.0211, -0.0246,  0.0254,
         -0.0065,  0.0248, -0.0112,  0.0027,  0.0383,  0.0322, -0.0134, -0.0266,
          0.0301, -0.0368, -0.0173,  0.0028,  0.0055, -0.0127, -0.0157, -0.0250]])
