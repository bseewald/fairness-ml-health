Weights: 
embeddings.embeddings.0.weight tensor([[-0.2363, -0.0696],
        [ 0.1761,  0.1886],
        [-0.1002, -0.2512],
        [ 0.1287,  0.1797]])
embeddings.embeddings.1.weight tensor([[ 0.2131, -0.0924],
        [ 0.0476, -0.2399],
        [-0.0108, -0.0554],
        [ 0.0635,  0.0937],
        [ 0.0235,  0.1542]])
embeddings.embeddings.2.weight tensor([[-0.0850,  0.2023, -0.1824],
        [ 0.0178, -0.0496, -0.1293],
        [-0.0335,  0.1877, -0.0289],
        [ 0.0913,  0.0219, -0.0861],
        [-0.1587,  0.1255,  0.0537],
        [-0.1182, -0.1813, -0.0528]])
embeddings.embeddings.3.weight tensor([[-0.1991,  0.1458],
        [ 0.3014,  0.2094],
        [-0.1494,  0.2813],
        [-0.1179, -0.0153]])
embeddings.embeddings.4.weight tensor([[-0.1859,  0.2022],
        [ 0.0356, -0.1974],
        [ 0.0441,  0.1412],
        [ 0.1959, -0.2700]])
mlp.net.0.linear.weight tensor([[ 0.0910, -0.0045,  0.0681,  ..., -0.0249, -0.0674,  0.1827],
        [ 0.0612,  0.1427,  0.0251,  ...,  0.0767, -0.1824,  0.0443],
        [ 0.1488,  0.1693, -0.1305,  ..., -0.2313,  0.1136,  0.0386],
        ...,
        [-0.2913,  0.0776,  0.0416,  ...,  0.2847, -0.0466,  0.1510],
        [ 0.0697, -0.1277, -0.0767,  ..., -0.0516,  0.0104,  0.0083],
        [-0.0045, -0.0622,  0.0984,  ...,  0.0948, -0.2743,  0.1003]])
mlp.net.0.linear.bias tensor([ 0.0289, -0.0018,  0.0176,  0.0551, -0.0113, -0.0259, -0.0030,  0.0829,
        -0.0804, -0.0300, -0.0093, -0.0813, -0.0893, -0.0260, -0.0765, -0.0431,
        -0.0011,  0.0261,  0.0254, -0.0698, -0.0221, -0.0887,  0.0126,  0.0439,
        -0.0152,  0.0412, -0.0639, -0.0662,  0.0030, -0.0493,  0.0738, -0.0128,
         0.0738, -0.0729, -0.0424, -0.0182, -0.0461,  0.0722,  0.0370,  0.0151,
        -0.0078, -0.0910, -0.0651,  0.1112, -0.0003,  0.0693,  0.0152,  0.0504,
         0.0022, -0.0048, -0.0916, -0.0521,  0.0121,  0.0249, -0.1027,  0.0873,
         0.0004,  0.0515, -0.0491,  0.0769, -0.0262,  0.0224,  0.0136,  0.0520])
mlp.net.0.batch_norm.weight tensor([0.4094, 0.4434, 0.4297, 0.4393, 0.4147, 0.4174, 0.4032, 0.4082, 0.4297,
        0.4222, 0.4135, 0.4208, 0.4514, 0.4324, 0.4218, 0.4185, 0.4268, 0.4119,
        0.4207, 0.4334, 0.4098, 0.4387, 0.4189, 0.4270, 0.4164, 0.4316, 0.4087,
        0.4060, 0.4119, 0.4161, 0.4414, 0.4070, 0.4238, 0.4468, 0.4165, 0.4245,
        0.4220, 0.4304, 0.4177, 0.4213, 0.4353, 0.4257, 0.4226, 0.4224, 0.4310,
        0.4274, 0.4411, 0.4226, 0.3938, 0.4305, 0.4047, 0.4117, 0.4042, 0.4228,
        0.4187, 0.4260, 0.4167, 0.4095, 0.4160, 0.4062, 0.4445, 0.4132, 0.4493,
        0.4285])
mlp.net.0.batch_norm.bias tensor([ 1.0429e-02, -3.7327e-03, -7.3368e-03,  1.8043e-03, -1.8740e-03,
         1.7927e-02,  1.6883e-02,  1.1357e-02, -4.6535e-03, -6.6919e-04,
        -3.7728e-03,  7.0896e-03,  2.0458e-03, -3.0100e-03, -4.3303e-03,
         1.2819e-03, -2.2796e-03,  4.3470e-03, -3.1646e-03, -2.4671e-03,
         6.9303e-03, -1.8421e-03, -5.9969e-03,  1.3979e-02,  1.8887e-02,
        -1.8594e-02, -3.8405e-03,  1.0021e-02, -1.0863e-03, -3.0004e-03,
        -1.3826e-02,  1.3904e-03,  5.7758e-03, -1.8501e-02,  8.7534e-03,
        -7.6746e-03,  2.2324e-03, -1.1879e-02,  4.4624e-03, -1.5195e-03,
         3.0349e-02, -2.6343e-03, -8.0758e-03,  2.7714e-04, -2.8800e-05,
         3.1655e-03,  8.5128e-03,  1.9077e-02,  3.8594e-03,  2.3506e-03,
         2.6103e-03, -3.0655e-03, -7.2328e-03, -5.9270e-03,  1.8806e-02,
        -1.6392e-02, -7.2119e-03,  5.9167e-04,  1.5253e-02,  1.2847e-03,
         5.4400e-03, -3.4006e-03, -2.7073e-03,  7.6513e-03])
mlp.net.0.batch_norm.running_mean tensor([4.5192e-01, 3.1761e-03, 1.7314e-01, 9.4149e-02, 4.9343e-02, 1.0606e-01,
        2.8601e-03, 3.5639e-02, 1.1326e-03, 2.3506e-01, 3.0372e-04, 7.2650e-02,
        2.2921e-02, 5.1455e-02, 1.9558e-04, 3.7485e-01, 1.5917e-01, 4.4358e-02,
        3.6393e-02, 1.1308e-01, 1.9509e-01, 2.9030e-01, 8.4605e-02, 4.5755e-02,
        1.2391e-01, 1.5285e-02, 3.4701e-01, 9.6732e-02, 4.3552e-03, 8.5154e-04,
        1.1680e-01, 2.8848e-03, 4.0631e-01, 2.9091e-01, 1.4863e-03, 5.7115e-02,
        2.7204e-04, 4.6359e-02, 3.7206e-02, 1.2869e-02, 9.8307e-02, 6.8832e-03,
        1.2895e-02, 1.1448e-01, 2.6239e-02, 4.8615e-04, 1.2300e-01, 7.1538e-02,
        2.7066e-02, 4.8097e-01, 2.3657e-02, 3.1734e-02, 3.5711e-01, 2.4224e-01,
        7.9390e-09, 5.1253e-01, 4.2853e-03, 3.6282e-01, 8.7526e-03, 2.3036e-01,
        3.4847e-02, 3.2810e-02, 4.8121e-02, 7.7236e-02])
mlp.net.0.batch_norm.running_var tensor([3.1083e-02, 3.6811e-04, 2.3548e-02, 1.0261e-02, 5.0799e-03, 5.7658e-03,
        3.4091e-04, 4.8645e-03, 1.8338e-04, 1.6729e-02, 2.4440e-05, 8.6275e-03,
        1.8001e-03, 4.5174e-03, 1.2790e-05, 5.3146e-02, 2.5181e-02, 3.4501e-03,
        3.3771e-03, 9.9839e-03, 1.3764e-02, 3.1500e-02, 1.1603e-02, 3.3081e-03,
        1.2745e-02, 1.8474e-03, 3.6646e-02, 1.5705e-02, 6.2352e-04, 3.2854e-05,
        1.0936e-02, 1.6748e-04, 9.1950e-03, 2.8798e-02, 1.3940e-04, 6.4363e-03,
        1.6405e-05, 8.6496e-03, 4.3306e-03, 9.8653e-04, 1.2281e-02, 9.0620e-04,
        2.9523e-03, 7.4253e-03, 4.2408e-03, 2.7446e-05, 6.3708e-03, 8.5453e-03,
        2.9447e-03, 2.6926e-02, 2.3214e-03, 3.1800e-03, 3.2108e-02, 2.2413e-02,
        1.8852e-07, 2.8125e-02, 4.1455e-04, 2.0118e-02, 1.6033e-03, 3.9451e-02,
        9.0076e-03, 5.1750e-03, 2.6903e-03, 6.3402e-03])
mlp.net.0.batch_norm.num_batches_tracked tensor(147)
mlp.net.1.linear.weight tensor([[ 0.0009, -0.0209,  0.0493,  ..., -0.1115,  0.0213, -0.0625],
        [ 0.0437,  0.1271, -0.0163,  ...,  0.0907,  0.0049, -0.0005],
        [ 0.1580, -0.0814,  0.0563,  ...,  0.0155,  0.0883, -0.1811],
        ...,
        [ 0.0857, -0.0799, -0.1125,  ..., -0.1569, -0.0124,  0.0335],
        [ 0.0956,  0.0799, -0.0389,  ..., -0.0439,  0.1812, -0.1911],
        [-0.0425,  0.1795,  0.0491,  ..., -0.0677,  0.1592, -0.1229]])
mlp.net.1.linear.bias tensor([-0.0422,  0.0174,  0.0592, -0.0187, -0.0011, -0.0080, -0.0460, -0.0132,
        -0.0438,  0.0088, -0.0378,  0.0342, -0.0375, -0.0302,  0.0335,  0.0042,
         0.0781, -0.0036, -0.0324,  0.0315,  0.0292, -0.0043, -0.0402, -0.0176,
         0.0159, -0.0184, -0.0313, -0.0200, -0.0345,  0.0442,  0.0341,  0.0092,
         0.0282, -0.0195, -0.0351,  0.0183, -0.0013, -0.0433, -0.0081,  0.0329,
         0.0103, -0.0269, -0.0378, -0.0196, -0.0068,  0.0160,  0.0176,  0.0094,
        -0.0090,  0.0214, -0.0520,  0.0430,  0.0024, -0.0004,  0.0444,  0.0096,
         0.0294, -0.0059, -0.0202, -0.0073,  0.0592, -0.0307,  0.0332,  0.0173])
mlp.net.1.batch_norm.weight tensor([0.4207, 0.4110, 0.4165, 0.4003, 0.4176, 0.4085, 0.4114, 0.4199, 0.4207,
        0.4160, 0.4149, 0.4429, 0.4185, 0.4236, 0.4212, 0.3999, 0.4422, 0.4028,
        0.4245, 0.4272, 0.4204, 0.4161, 0.4204, 0.4153, 0.4489, 0.4285, 0.4380,
        0.4277, 0.4271, 0.4372, 0.4184, 0.4197, 0.4097, 0.4136, 0.4149, 0.4149,
        0.4337, 0.4086, 0.4403, 0.4133, 0.4425, 0.4347, 0.4058, 0.4354, 0.4155,
        0.4355, 0.4405, 0.4601, 0.4135, 0.4376, 0.4154, 0.4217, 0.4178, 0.4095,
        0.4474, 0.4223, 0.4406, 0.4429, 0.4048, 0.4201, 0.4085, 0.4211, 0.4142,
        0.4188])
mlp.net.1.batch_norm.bias tensor([ 0.0129, -0.0025, -0.0048,  0.0048,  0.0115,  0.0013,  0.0037, -0.0048,
         0.0059, -0.0014, -0.0004,  0.0174,  0.0033,  0.0037,  0.0061,  0.0035,
        -0.0062,  0.0160, -0.0018, -0.0034, -0.0191,  0.0085, -0.0104,  0.0083,
        -0.0064, -0.0128,  0.0026, -0.0067,  0.0041, -0.0085,  0.0044,  0.0031,
         0.0034,  0.0197, -0.0127,  0.0082, -0.0019,  0.0065, -0.0017,  0.0015,
        -0.0150, -0.0190,  0.0030, -0.0092,  0.0094, -0.0057,  0.0161, -0.0182,
         0.0024, -0.0046,  0.0055,  0.0067, -0.0004,  0.0035, -0.0166, -0.0135,
         0.0012, -0.0024,  0.0079,  0.0187, -0.0074,  0.0070,  0.0013, -0.0155])
mlp.net.1.batch_norm.running_mean tensor([0.0551, 0.1751, 0.1458, 0.1300, 0.1279, 0.1068, 0.1042, 0.1147, 0.1208,
        0.1402, 0.0987, 0.1234, 0.1320, 0.0962, 0.1077, 0.1244, 0.1935, 0.1341,
        0.1097, 0.1165, 0.1087, 0.1351, 0.1073, 0.1074, 0.1065, 0.1036, 0.0982,
        0.0826, 0.0713, 0.1440, 0.1413, 0.1509, 0.1777, 0.0936, 0.0862, 0.1603,
        0.1432, 0.1004, 0.1169, 0.1159, 0.1254, 0.0992, 0.0957, 0.1305, 0.0992,
        0.1116, 0.1158, 0.1264, 0.1326, 0.1185, 0.0693, 0.1498, 0.1166, 0.1044,
        0.1244, 0.1289, 0.1441, 0.0929, 0.1375, 0.1066, 0.1222, 0.0769, 0.1399,
        0.1508])
mlp.net.1.batch_norm.running_var tensor([0.0094, 0.0514, 0.0426, 0.0362, 0.0705, 0.0236, 0.0238, 0.0506, 0.0319,
        0.0563, 0.0433, 0.0183, 0.0425, 0.0357, 0.0192, 0.0364, 0.0456, 0.0405,
        0.0255, 0.0193, 0.0359, 0.0427, 0.0289, 0.0417, 0.0307, 0.0290, 0.0230,
        0.0297, 0.0150, 0.0429, 0.0487, 0.0478, 0.0435, 0.0211, 0.0189, 0.0440,
        0.0351, 0.0292, 0.0424, 0.0231, 0.0304, 0.0332, 0.0299, 0.0482, 0.0284,
        0.0241, 0.0224, 0.0281, 0.0481, 0.0405, 0.0281, 0.0428, 0.0370, 0.0195,
        0.0317, 0.0340, 0.0426, 0.0165, 0.0573, 0.0250, 0.0198, 0.0222, 0.0419,
        0.0897])
mlp.net.1.batch_norm.num_batches_tracked tensor(147)
mlp.net.2.linear.weight tensor([[ 0.0824,  0.0356, -0.0886,  ...,  0.0435, -0.0346, -0.0032],
        [-0.0593,  0.0973,  0.0121,  ...,  0.0781, -0.2369,  0.0009],
        [ 0.0761, -0.0492, -0.1219,  ...,  0.0048, -0.0012, -0.0348],
        ...,
        [-0.0555,  0.1447,  0.0431,  ..., -0.0362,  0.0549, -0.0783],
        [ 0.1064,  0.0282,  0.0339,  ..., -0.0302, -0.1036,  0.0312],
        [-0.0104, -0.0706, -0.0245,  ..., -0.0263, -0.0173, -0.0347]])
mlp.net.2.linear.bias tensor([-5.3344e-02, -8.8451e-03,  3.7695e-02, -3.1009e-02,  5.4863e-02,
         3.3065e-02,  1.5420e-03,  4.5884e-02,  8.2851e-03, -3.2905e-04,
        -1.8755e-02, -2.8351e-02, -1.6705e-02, -9.2897e-03,  4.1877e-02,
        -5.1358e-02, -4.1276e-02,  5.3999e-02, -1.8026e-02, -2.2782e-02,
        -4.9580e-03,  1.1826e-02,  6.5688e-05, -1.5435e-02, -2.8478e-02,
         4.8529e-02,  2.8662e-02,  1.9172e-02,  4.2915e-02,  3.4321e-02,
        -2.7717e-02,  3.9263e-03, -3.7104e-02, -6.7432e-03, -3.3145e-02,
         3.0754e-02,  1.4256e-02,  2.1363e-02, -2.4180e-02, -4.2071e-02,
         4.3849e-02,  3.5374e-02,  3.0168e-03, -3.2371e-02,  1.4509e-02,
         5.1392e-02, -1.9269e-04,  4.3382e-02,  3.3378e-02,  3.4936e-03,
        -3.3946e-02, -1.1230e-02,  2.8977e-02, -2.6546e-02,  2.6737e-03,
        -3.8786e-02,  1.1378e-03,  2.6476e-02,  4.6195e-02, -3.9565e-02,
         2.8551e-02, -5.2318e-03,  3.0235e-02, -2.5769e-02])
mlp.net.2.batch_norm.weight tensor([0.4107, 0.3952, 0.4183, 0.4247, 0.4220, 0.4232, 0.4417, 0.4121, 0.4294,
        0.4325, 0.4253, 0.4072, 0.4071, 0.4086, 0.4450, 0.4107, 0.4140, 0.4514,
        0.4283, 0.4226, 0.4242, 0.4254, 0.4096, 0.4395, 0.4051, 0.4413, 0.4361,
        0.4199, 0.4129, 0.4232, 0.4313, 0.4139, 0.4217, 0.4180, 0.4500, 0.4105,
        0.4057, 0.4134, 0.4408, 0.4092, 0.4439, 0.4208, 0.4152, 0.4179, 0.4233,
        0.4181, 0.4225, 0.4199, 0.4157, 0.4192, 0.4021, 0.4136, 0.4254, 0.4223,
        0.4134, 0.4081, 0.4197, 0.4450, 0.4248, 0.4240, 0.4377, 0.4107, 0.4290,
        0.4414])
mlp.net.2.batch_norm.bias tensor([-0.0185,  0.0067, -0.0170, -0.0006,  0.0221, -0.0098,  0.0008, -0.0060,
         0.0159, -0.0270,  0.0126, -0.0037,  0.0118, -0.0202, -0.0192, -0.0022,
        -0.0003, -0.0052,  0.0030,  0.0206,  0.0045,  0.0152,  0.0008, -0.0063,
        -0.0159, -0.0002, -0.0036, -0.0057, -0.0027, -0.0218, -0.0093, -0.0005,
         0.0137,  0.0019,  0.0024,  0.0215, -0.0088,  0.0043, -0.0012, -0.0020,
         0.0036,  0.0031,  0.0038, -0.0095, -0.0028,  0.0129, -0.0070, -0.0099,
         0.0141, -0.0214,  0.0020,  0.0072, -0.0031,  0.0014, -0.0015, -0.0018,
        -0.0030,  0.0126,  0.0106,  0.0102, -0.0018,  0.0086, -0.0105, -0.0133])
mlp.net.2.batch_norm.running_mean tensor([0.0760, 0.0994, 0.1061, 0.1073, 0.1407, 0.1209, 0.1522, 0.1430, 0.1154,
        0.1288, 0.1159, 0.1090, 0.1170, 0.1029, 0.1692, 0.0816, 0.1155, 0.1767,
        0.1471, 0.0978, 0.1619, 0.1345, 0.1331, 0.1287, 0.1172, 0.1542, 0.1529,
        0.1156, 0.1373, 0.1643, 0.1290, 0.0930, 0.1063, 0.1400, 0.1074, 0.1110,
        0.1379, 0.1350, 0.1287, 0.1174, 0.1483, 0.1558, 0.1086, 0.0910, 0.1304,
        0.1509, 0.1383, 0.1196, 0.1297, 0.1234, 0.1083, 0.1098, 0.1750, 0.0888,
        0.1069, 0.0937, 0.1271, 0.1596, 0.1591, 0.0807, 0.1743, 0.1054, 0.1457,
        0.1296])
mlp.net.2.batch_norm.running_var tensor([0.0242, 0.0238, 0.0224, 0.0341, 0.0402, 0.0379, 0.0351, 0.0480, 0.0304,
        0.0357, 0.0446, 0.0330, 0.0303, 0.0231, 0.0713, 0.0241, 0.0405, 0.0634,
        0.0500, 0.0349, 0.0629, 0.0325, 0.0389, 0.0301, 0.0360, 0.0536, 0.0441,
        0.0264, 0.0329, 0.0615, 0.0521, 0.0195, 0.0264, 0.0465, 0.0293, 0.0220,
        0.0501, 0.0345, 0.0482, 0.0392, 0.0360, 0.0678, 0.0371, 0.0178, 0.0445,
        0.0321, 0.0658, 0.0288, 0.0386, 0.0402, 0.0300, 0.0220, 0.0713, 0.0184,
        0.0304, 0.0232, 0.0346, 0.0548, 0.0514, 0.0296, 0.0528, 0.0299, 0.0332,
        0.0401])
mlp.net.2.batch_norm.num_batches_tracked tensor(147)
mlp.net.3.linear.weight tensor([[ 0.1277, -0.0673, -0.0154,  ...,  0.0684, -0.0107, -0.1732],
        [-0.0587,  0.0113, -0.0220,  ..., -0.0682, -0.0911, -0.0358],
        [-0.1320, -0.0601, -0.0158,  ..., -0.1618,  0.1023, -0.0008],
        ...,
        [ 0.0553,  0.1667, -0.0553,  ..., -0.0310, -0.1191, -0.1034],
        [-0.0887, -0.0354,  0.0315,  ..., -0.0058, -0.1172, -0.0092],
        [-0.0873,  0.0013, -0.0813,  ..., -0.0003, -0.0605, -0.1277]])
mlp.net.3.linear.bias tensor([-0.0280, -0.0426,  0.0197, -0.0294,  0.0289,  0.0462, -0.0208, -0.0183,
        -0.0304,  0.0240,  0.0221,  0.0131,  0.0423,  0.0368,  0.0357, -0.0221,
        -0.0179, -0.0232, -0.0430, -0.0565, -0.0099,  0.0245,  0.0375,  0.0429,
         0.0114,  0.0296,  0.0005, -0.0388, -0.0028, -0.0277, -0.0484, -0.0018,
        -0.0324, -0.0062,  0.0501,  0.0355, -0.0334, -0.0132, -0.0319,  0.0208,
        -0.0198, -0.0032, -0.0098,  0.0129,  0.0508,  0.0542, -0.0356, -0.0189,
        -0.0055,  0.0010, -0.0180,  0.0060,  0.0519,  0.0476,  0.0333, -0.0010,
         0.0088,  0.0019,  0.0338,  0.0510, -0.0025, -0.0277,  0.0745, -0.0186])
mlp.net.3.batch_norm.weight tensor([0.4508, 0.4372, 0.4634, 0.4329, 0.4297, 0.4418, 0.4213, 0.4337, 0.4070,
        0.4115, 0.4129, 0.4566, 0.4274, 0.4443, 0.4492, 0.4331, 0.4210, 0.4385,
        0.4256, 0.4159, 0.4092, 0.4185, 0.4355, 0.4324, 0.4347, 0.4519, 0.4432,
        0.4220, 0.4353, 0.4289, 0.4182, 0.4365, 0.4389, 0.4375, 0.4189, 0.4549,
        0.4189, 0.4322, 0.4211, 0.4185, 0.4273, 0.4376, 0.4304, 0.4254, 0.4388,
        0.4384, 0.4487, 0.4353, 0.4358, 0.4440, 0.4766, 0.4607, 0.4400, 0.4465,
        0.4088, 0.4499, 0.4460, 0.4605, 0.4130, 0.4432, 0.4248, 0.4385, 0.4549,
        0.4298])
mlp.net.3.batch_norm.bias tensor([ 0.0071, -0.0022, -0.0103, -0.0019, -0.0065,  0.0025,  0.0013,  0.0025,
         0.0056, -0.0058, -0.0036,  0.0016, -0.0039,  0.0046,  0.0039,  0.0006,
        -0.0047,  0.0085,  0.0020, -0.0016, -0.0033,  0.0032,  0.0045,  0.0016,
        -0.0070,  0.0064,  0.0061, -0.0009,  0.0070,  0.0005, -0.0004,  0.0027,
        -0.0060, -0.0050, -0.0040,  0.0013, -0.0046,  0.0027,  0.0022, -0.0013,
         0.0022,  0.0031,  0.0002,  0.0091,  0.0038,  0.0040,  0.0069,  0.0024,
         0.0017, -0.0019, -0.0013,  0.0011, -0.0020,  0.0031,  0.0126,  0.0048,
        -0.0105, -0.0040,  0.0112,  0.0009,  0.0028,  0.0155,  0.0069,  0.0059])
mlp.net.3.batch_norm.running_mean tensor([0.1289, 0.1111, 0.1631, 0.1201, 0.1442, 0.1517, 0.1186, 0.1000, 0.0811,
        0.1279, 0.1177, 0.1606, 0.1574, 0.1601, 0.1493, 0.1245, 0.1257, 0.1481,
        0.1004, 0.0771, 0.0981, 0.1187, 0.1546, 0.1633, 0.1495, 0.1753, 0.1332,
        0.0891, 0.1128, 0.1003, 0.0762, 0.1139, 0.1309, 0.1821, 0.1468, 0.1665,
        0.1187, 0.1182, 0.1019, 0.1427, 0.1535, 0.1660, 0.1069, 0.1368, 0.1416,
        0.1621, 0.1444, 0.1440, 0.1423, 0.1739, 0.1647, 0.1486, 0.1718, 0.1852,
        0.1301, 0.1188, 0.1459, 0.1970, 0.1055, 0.1709, 0.1181, 0.1217, 0.2530,
        0.1555])
mlp.net.3.batch_norm.running_var tensor([0.0372, 0.0391, 0.0462, 0.0508, 0.0437, 0.0434, 0.0419, 0.0269, 0.0303,
        0.0320, 0.0401, 0.0485, 0.0404, 0.0382, 0.0484, 0.0500, 0.0306, 0.0607,
        0.0374, 0.0197, 0.0330, 0.0350, 0.0489, 0.0520, 0.0509, 0.0403, 0.0447,
        0.0279, 0.0323, 0.0273, 0.0197, 0.0276, 0.0379, 0.0807, 0.0388, 0.0445,
        0.0496, 0.0492, 0.0310, 0.0455, 0.0525, 0.0605, 0.0316, 0.0539, 0.0316,
        0.0408, 0.0508, 0.0516, 0.0400, 0.0630, 0.0634, 0.0455, 0.0567, 0.0560,
        0.0388, 0.0364, 0.0507, 0.0896, 0.0231, 0.0449, 0.0360, 0.0382, 0.1003,
        0.0539])
mlp.net.3.batch_norm.num_batches_tracked tensor(147)
mlp.net.4.weight tensor([[-0.0694,  0.0636,  0.0292,  0.0304, -0.0273,  0.0696,  0.0507,  0.0142,
          0.0321, -0.0337, -0.0227,  0.0450, -0.0162,  0.0485,  0.0605,  0.0124,
         -0.0265, -0.0429, -0.0288,  0.0321,  0.0379, -0.0310,  0.0483,  0.0134,
         -0.0484,  0.0714,  0.0438, -0.0494,  0.0472, -0.0338,  0.0032, -0.0220,
         -0.0481, -0.0476, -0.0005,  0.0325, -0.0335,  0.0277,  0.0122, -0.0424,
         -0.0266,  0.0627, -0.0281, -0.0237,  0.0445, -0.0117,  0.0526, -0.0334,
         -0.0457, -0.0526,  0.0380, -0.0404, -0.0607, -0.0313, -0.0002, -0.0185,
          0.0449,  0.0597, -0.0214, -0.0311, -0.0315, -0.0357, -0.0648, -0.0095]])
