Weights: 
embeddings.embeddings.0.weight tensor([[0.0568, 0.0365],
        [0.0570, 0.1288],
        [0.0986, 0.1999],
        [0.5229, 0.1280]])
embeddings.embeddings.1.weight tensor([[-0.2645, -0.2735],
        [ 0.2823,  0.5442],
        [-0.0749,  0.2155],
        [ 0.2039,  0.3566],
        [-0.3184,  0.4655]])
embeddings.embeddings.2.weight tensor([[ 0.4175, -0.1593,  0.2909],
        [ 0.0277, -0.1666, -0.0451],
        [ 0.3177, -0.2614, -0.2544],
        [ 0.3546,  0.0964,  0.2048],
        [ 0.4032,  0.2059,  0.1264],
        [ 0.3490,  0.1810, -0.3955]])
embeddings.embeddings.3.weight tensor([[-0.0716, -0.4787],
        [-0.0089, -0.2599],
        [ 0.4014,  0.2097],
        [ 0.6709,  0.5545]])
embeddings.embeddings.4.weight tensor([[-0.0791, -0.1197],
        [-0.3504,  0.4534],
        [ 0.0348, -0.4386],
        [-0.3261,  0.4703]])
mlp.net.0.linear.weight tensor([[-0.2335, -0.1690, -0.0572,  ..., -0.0688,  0.1665,  0.2034],
        [ 0.0380, -0.2043, -0.2788,  ...,  0.1733, -0.1911, -0.2833],
        [ 0.4228,  0.1995, -0.1619,  ...,  0.4642,  0.2031, -0.3473],
        ...,
        [-0.4204, -0.3619, -0.0296,  ...,  0.2389,  0.0008,  0.3486],
        [ 0.2500,  0.1371, -0.5896,  ..., -0.5714, -0.5476, -0.0663],
        [-0.1696, -0.3360, -0.0602,  ..., -0.2850, -0.1685, -0.0426]])
mlp.net.0.linear.bias tensor([ 0.1394, -0.1788,  0.1931, -0.1731, -0.1462,  0.1243,  0.1688,  0.1542,
        -0.1361,  0.0661,  0.1133,  0.0542, -0.0648, -0.2174, -0.0773, -0.1659,
        -0.0122,  0.0091, -0.0398, -0.0731, -0.0478,  0.0496,  0.1900, -0.0165,
        -0.1912,  0.1798, -0.1609,  0.0847, -0.1036, -0.1915,  0.1557,  0.0062,
        -0.1541,  0.0172, -0.0869, -0.0112,  0.0015,  0.0768,  0.1241, -0.0890,
         0.1545, -0.1904,  0.1900,  0.1098, -0.0606,  0.1208,  0.1834,  0.0009,
        -0.1177,  0.0368, -0.1142, -0.1101,  0.1835, -0.1356, -0.0816, -0.1077,
        -0.0396,  0.0847,  0.0229,  0.0282, -0.1554,  0.1901, -0.0984, -0.1975])
mlp.net.0.batch_norm.weight tensor([0.8346, 0.8688, 0.8716, 0.8471, 0.8336, 0.8393, 0.8470, 0.8924, 0.8122,
        0.8497, 0.8430, 0.8197, 0.8492, 0.8928, 0.8452, 0.8290, 0.8169, 0.8360,
        0.8235, 0.8141, 0.8238, 0.9161, 0.8242, 0.8275, 0.8128, 0.8838, 0.8515,
        0.8750, 0.8067, 0.8337, 0.8435, 0.8480, 0.8449, 0.8722, 0.8226, 0.8359,
        0.8600, 0.8201, 0.8237, 0.8545, 0.8562, 0.8206, 0.8652, 0.8772, 0.7925,
        0.8209, 0.8538, 0.8699, 0.8214, 0.8454, 0.8822, 0.8471, 0.8869, 0.8569,
        0.8185, 0.8499, 0.8484, 0.9329, 0.7957, 0.8286, 0.9060, 0.8392, 0.8262,
        0.8213])
mlp.net.0.batch_norm.bias tensor([-0.0423, -0.0050, -0.0366,  0.0425,  0.0240, -0.0200, -0.0055, -0.0266,
         0.0123, -0.0296, -0.0064,  0.0120,  0.0403,  0.0085,  0.0253,  0.0099,
        -0.0058, -0.0249, -0.0323,  0.0057, -0.0043, -0.0050, -0.0099, -0.0120,
        -0.0203,  0.0017,  0.0043,  0.0201,  0.0449, -0.0106,  0.0241, -0.0021,
         0.0130, -0.0007,  0.0604,  0.0016, -0.0105,  0.0221,  0.0113, -0.0012,
         0.0273, -0.0115, -0.0041,  0.0434,  0.0184,  0.0012, -0.0029, -0.0130,
        -0.0208, -0.0005,  0.0192,  0.0123,  0.0151, -0.0252, -0.0043,  0.0237,
         0.0079,  0.0320, -0.0150,  0.0272, -0.0455, -0.0062,  0.0224,  0.0154])
mlp.net.0.batch_norm.running_mean tensor([8.0598e-02, 2.0912e-02, 4.8060e-01, 0.0000e+00, 6.3199e-03, 2.5629e-03,
        2.8713e-01, 3.4716e-02, 3.0002e-01, 7.8273e-02, 8.8816e-01, 9.0541e-01,
        1.1161e-01, 6.7285e-01, 5.2410e-02, 2.3010e-03, 2.8802e-01, 5.9613e-03,
        7.2715e-04, 8.4072e-02, 1.7457e-01, 5.0245e-01, 3.1377e-01, 7.0369e-01,
        2.1815e-03, 9.5969e-01, 9.5224e-04, 2.9828e-02, 3.8507e-01, 6.1073e-02,
        3.8181e-01, 1.4859e-01, 6.1677e-04, 1.1724e+00, 1.4883e-19, 3.6896e-01,
        6.8117e-01, 1.2639e-03, 8.8525e-01, 5.0636e-02, 4.0689e-04, 4.6285e-02,
        3.0960e-01, 3.1810e-01, 2.7748e-01, 3.6692e-01, 1.1740e-01, 6.4904e-01,
        3.4472e-06, 2.0314e-01, 2.0231e-02, 0.0000e+00, 3.0062e-01, 3.0469e-03,
        2.4028e-01, 5.8040e-22, 7.8619e-01, 1.9093e-01, 2.4681e-01, 1.1933e-01,
        2.6732e-01, 9.0861e-05, 1.6691e-01, 3.3656e-03])
mlp.net.0.batch_norm.running_var tensor([2.7089e-02, 4.0231e-03, 1.3032e-01, 5.6052e-45, 1.0282e-03, 3.9400e-04,
        5.5286e-02, 6.3249e-03, 8.3806e-02, 1.8051e-02, 4.2009e-02, 5.1633e-02,
        4.4186e-02, 2.5298e-01, 1.1389e-02, 4.9931e-04, 6.1926e-02, 1.2972e-03,
        1.8181e-04, 2.8424e-02, 7.1415e-02, 6.8017e-02, 1.4547e-01, 1.4752e-01,
        5.8489e-04, 1.0723e-01, 1.2802e-04, 9.0058e-03, 7.2989e-02, 1.1375e-02,
        7.1996e-02, 3.1014e-02, 5.2273e-05, 2.6743e-01, 6.4691e-21, 1.0913e-01,
        9.6873e-02, 1.9050e-04, 5.9584e-02, 1.1219e-02, 7.7340e-05, 9.6121e-03,
        6.5603e-02, 1.1594e-01, 6.9823e-02, 1.1390e-01, 1.9288e-02, 2.0556e-01,
        7.2671e-08, 4.0605e-02, 6.2744e-03, 5.6052e-45, 1.1206e-01, 4.2896e-04,
        7.9121e-02, 3.1564e-26, 1.5620e-01, 6.2344e-02, 5.1359e-02, 2.2510e-02,
        1.3471e-01, 5.0312e-06, 1.0077e-01, 6.5395e-04])
mlp.net.0.batch_norm.num_batches_tracked tensor(969)
mlp.net.1.linear.weight tensor([[-0.0920, -0.1164, -0.1468,  ..., -0.2010,  0.0282, -0.2508],
        [-0.0978, -0.0051, -0.1309,  ...,  0.0858,  0.0512,  0.0480],
        [ 0.1636, -0.0506, -0.1390,  ..., -0.3226,  0.3141,  0.2260],
        ...,
        [ 0.0566,  0.0326,  0.0478,  ..., -0.1276,  0.0466,  0.1631],
        [-0.3500, -0.1893,  0.3307,  ..., -0.1206,  0.2910,  0.2202],
        [ 0.1446, -0.1960,  0.0345,  ...,  0.0222, -0.0219, -0.0774]])
mlp.net.1.linear.bias tensor([-0.0812, -0.0262,  0.0545, -0.0893,  0.0156,  0.0442,  0.1188, -0.0615,
        -0.0370, -0.0728,  0.0284, -0.0667,  0.0524, -0.0071,  0.0086,  0.0387,
         0.1041,  0.0382,  0.1811, -0.0319, -0.0488, -0.0231, -0.0685, -0.1089,
         0.0605, -0.1106,  0.0956, -0.0148, -0.0907, -0.0693,  0.0929, -0.0596,
         0.0736,  0.0505,  0.0041,  0.0451, -0.1142,  0.0354, -0.0693,  0.1155,
         0.0650, -0.0376,  0.0624, -0.0238,  0.0100, -0.0573,  0.0491, -0.0316,
        -0.0680,  0.1325, -0.0294, -0.0129,  0.0482, -0.0856, -0.0166, -0.0550,
         0.0791,  0.0954, -0.0770,  0.0726,  0.0159,  0.0282,  0.1014, -0.0852])
mlp.net.1.batch_norm.weight tensor([0.8634, 0.8653, 0.8444, 0.8508, 0.8984, 0.8264, 0.8455, 0.8191, 0.8326,
        0.8217, 0.8686, 0.8118, 0.8744, 0.9190, 0.8934, 0.8022, 0.8386, 0.8530,
        0.8937, 0.8847, 0.8268, 0.8124, 0.8422, 0.8340, 0.7797, 0.8180, 0.8316,
        0.8590, 0.8425, 0.8445, 0.8031, 0.7883, 0.7902, 0.8016, 0.9568, 0.8402,
        0.8532, 0.8499, 0.8062, 0.8290, 0.9003, 0.8916, 0.7982, 0.8124, 0.8342,
        0.8426, 0.7825, 0.8456, 0.8277, 0.9093, 0.8107, 0.8649, 0.8251, 0.9008,
        0.8090, 0.8847, 0.8662, 0.8898, 0.8302, 0.8387, 0.8033, 0.8601, 0.9027,
        0.8527])
mlp.net.1.batch_norm.bias tensor([ 0.0174,  0.0286, -0.0130,  0.0175, -0.0098, -0.0229,  0.0346, -0.0163,
         0.0201,  0.0003, -0.0061,  0.0167,  0.0009, -0.0041,  0.0058,  0.0052,
         0.0190,  0.0139, -0.0095, -0.0493, -0.0352, -0.0233, -0.0317, -0.0391,
        -0.0023,  0.0235, -0.0085, -0.0024, -0.0263,  0.0277,  0.0228, -0.0034,
         0.0027, -0.0245,  0.0027,  0.0501,  0.0087, -0.0085,  0.0044, -0.0174,
         0.0231, -0.0201, -0.0501, -0.0028, -0.0066, -0.0004,  0.0618,  0.0121,
        -0.0079, -0.0251,  0.0086,  0.0455,  0.0073,  0.0028, -0.0237, -0.0342,
         0.0125, -0.0093, -0.0352,  0.0303,  0.0261, -0.0219,  0.0098, -0.0208])
mlp.net.1.batch_norm.running_mean tensor([0.4665, 0.4016, 0.4510, 0.4385, 0.7101, 0.5937, 0.5124, 0.6189, 0.4505,
        0.5970, 0.5159, 0.6664, 0.5710, 0.4857, 0.4924, 0.5108, 0.5410, 0.4805,
        0.7290, 0.5216, 0.5508, 0.4445, 0.3646, 0.4072, 0.4095, 0.4175, 0.5763,
        0.4712, 0.4412, 0.4868, 0.5249, 0.3523, 0.4837, 0.4228, 0.6532, 0.4003,
        0.3966, 0.3760, 0.4698, 0.5585, 0.5902, 0.4587, 0.4364, 0.3950, 0.5259,
        0.4101, 0.4340, 0.4384, 0.4138, 0.5157, 0.4573, 0.4403, 0.4594, 0.4151,
        0.4664, 0.5791, 0.6219, 0.6521, 0.3411, 0.5307, 0.5330, 0.4727, 0.6149,
        0.4164])
mlp.net.1.batch_norm.running_var tensor([0.5695, 0.4328, 0.6027, 0.4915, 1.0375, 0.7192, 0.5757, 1.0777, 0.5319,
        0.9815, 0.6010, 0.7763, 0.6646, 0.5617, 0.5449, 0.5370, 0.5655, 0.5229,
        0.7008, 0.8565, 0.7109, 0.4799, 0.3582, 0.4370, 0.5741, 0.6574, 0.6532,
        0.4842, 0.4792, 0.5660, 0.7295, 0.4345, 0.5837, 0.3680, 1.1190, 0.3646,
        0.5650, 0.4525, 0.5228, 0.4709, 0.9279, 0.5691, 0.5714, 0.4775, 0.9256,
        0.4731, 0.6982, 0.3733, 0.5749, 0.6005, 0.5223, 0.4716, 0.5215, 0.6065,
        0.4106, 0.6783, 0.7331, 1.0349, 0.3863, 0.5730, 0.6496, 0.4754, 0.5892,
        0.3507])
mlp.net.1.batch_norm.num_batches_tracked tensor(969)
mlp.net.2.linear.weight tensor([[-0.1671, -0.0085, -0.0383,  ...,  0.0463, -0.0457,  0.1637],
        [ 0.0513, -0.0194,  0.1001,  ..., -0.4716, -0.1606, -0.0656],
        [ 0.2649, -0.1268,  0.0326,  ..., -0.1197, -0.2241,  0.0248],
        ...,
        [-0.0661, -0.0321,  0.0628,  ...,  0.0848, -0.2478,  0.0380],
        [-0.0724, -0.4020, -0.0452,  ..., -0.3257, -0.1679,  0.1619],
        [-0.0934, -0.0062,  0.1840,  ...,  0.1808,  0.1786,  0.2949]])
mlp.net.2.linear.bias tensor([-0.0084, -0.0703,  0.0577, -0.0110,  0.0340, -0.0803, -0.0031, -0.0462,
         0.0392,  0.0050,  0.0166,  0.0161, -0.0514, -0.1020,  0.0932,  0.0195,
         0.1153,  0.1585, -0.0755,  0.1184, -0.0923,  0.0391, -0.0565, -0.0550,
         0.0489,  0.0083, -0.0609, -0.0919,  0.0433, -0.0435,  0.0585,  0.0852,
         0.0132,  0.0103,  0.0055, -0.0719, -0.0485, -0.0289, -0.0806, -0.0836,
         0.1382, -0.0192, -0.0558,  0.0629, -0.0173,  0.1338, -0.0052,  0.0745,
         0.1732,  0.0543,  0.1227,  0.0016,  0.0018, -0.0009, -0.0408,  0.0277,
         0.0273,  0.1408,  0.0151, -0.0025, -0.0720,  0.0749, -0.1305,  0.0282])
mlp.net.2.batch_norm.weight tensor([0.8262, 0.8665, 0.8286, 0.8351, 0.8282, 0.8253, 0.8307, 0.8424, 0.8924,
        0.8535, 0.8472, 0.8625, 0.8470, 0.8493, 0.8809, 0.8523, 0.8512, 0.8898,
        0.8172, 0.7868, 0.8089, 0.8278, 0.8468, 0.8547, 0.8688, 0.9116, 0.8643,
        0.8701, 0.8249, 0.8541, 0.8742, 0.8370, 0.8131, 0.8066, 0.8224, 0.8028,
        0.8075, 0.8636, 0.8364, 0.8803, 0.8205, 0.8316, 0.8214, 0.8432, 0.8582,
        0.8338, 0.8655, 0.8239, 0.8804, 0.8738, 0.8393, 0.8214, 0.8058, 0.8654,
        0.8494, 0.8812, 0.8331, 0.8797, 0.8625, 0.8920, 0.8373, 0.8635, 0.8686,
        0.8375])
mlp.net.2.batch_norm.bias tensor([-0.0080,  0.0315, -0.0104,  0.0056,  0.0118, -0.0100,  0.0275, -0.0313,
         0.0029,  0.0062, -0.0456, -0.0247,  0.0119,  0.0213,  0.0130,  0.0095,
         0.0068,  0.0011, -0.0127, -0.0357,  0.0271,  0.0458, -0.0228, -0.0075,
         0.0067, -0.0366, -0.0205,  0.0250,  0.0157,  0.0035, -0.0195,  0.0165,
        -0.0170,  0.0050,  0.0044,  0.0069, -0.0237,  0.0199, -0.0110, -0.0120,
        -0.0170, -0.0132,  0.0266, -0.0074,  0.0172,  0.0025,  0.0258,  0.0030,
        -0.0040, -0.0214,  0.0274,  0.0210,  0.0157, -0.0198, -0.0061, -0.0026,
         0.0260,  0.0155,  0.0261,  0.0161,  0.0454, -0.0110,  0.0141, -0.0233])
mlp.net.2.batch_norm.running_mean tensor([0.4672, 0.6494, 0.6315, 0.5026, 0.5208, 0.5763, 0.6038, 0.5297, 0.7639,
        0.6233, 0.4796, 0.7354, 0.4764, 0.4809, 0.7337, 0.7367, 0.7078, 0.8947,
        0.4686, 0.4687, 0.4949, 0.4551, 0.4025, 0.5272, 0.6545, 0.5565, 0.5646,
        0.4801, 0.5683, 0.5862, 0.4898, 0.7529, 0.4703, 0.4758, 0.4553, 0.4910,
        0.4561, 0.5140, 0.4801, 0.3992, 0.6242, 0.5147, 0.4812, 0.5302, 0.3857,
        0.7209, 0.6167, 0.5239, 0.5918, 0.7249, 0.6553, 0.4852, 0.5407, 0.6013,
        0.4814, 0.8017, 0.6464, 0.6090, 0.5046, 0.9167, 0.3858, 0.6230, 0.4504,
        0.6715])
mlp.net.2.batch_norm.running_var tensor([0.5528, 1.0299, 1.2019, 0.6154, 0.7014, 1.2224, 0.6920, 0.8049, 1.0183,
        0.7376, 0.4808, 1.7871, 0.9000, 0.6287, 1.4693, 0.8829, 0.9839, 1.1005,
        0.5642, 0.4709, 0.6388, 0.5620, 0.3477, 0.7690, 1.1361, 1.1084, 1.1037,
        0.6839, 1.2580, 0.5937, 0.5407, 0.9620, 0.5474, 0.5354, 0.5942, 0.4693,
        0.5406, 0.6504, 0.8467, 0.5232, 0.5383, 0.6336, 0.6469, 0.7514, 0.5134,
        0.7587, 0.8707, 0.6827, 0.6159, 1.0571, 0.6493, 0.5871, 0.6949, 0.7486,
        0.5967, 1.3787, 1.7756, 1.0101, 0.6530, 1.6837, 0.3883, 0.9367, 0.4600,
        0.8289])
mlp.net.2.batch_norm.num_batches_tracked tensor(969)
mlp.net.3.linear.weight tensor([[ 0.0190, -0.0706,  0.2881,  ...,  0.0479, -0.1543, -0.1487],
        [ 0.0172,  0.0902, -0.0301,  ...,  0.1019,  0.0071, -0.1308],
        [ 0.0118,  0.1101,  0.0313,  ..., -0.3557, -0.1991, -0.0814],
        ...,
        [-0.1547,  0.0528, -0.2111,  ...,  0.0974, -0.1850, -0.1629],
        [-0.2127, -0.0438,  0.0641,  ..., -0.2124,  0.0434,  0.0481],
        [ 0.3024, -0.0394, -0.0037,  ..., -0.1826,  0.0502, -0.0054]])
mlp.net.3.linear.bias tensor([-0.0740, -0.0106, -0.0718,  0.0496, -0.0269,  0.0258,  0.0074,  0.1099,
         0.0904, -0.0287,  0.0366, -0.1065, -0.0158, -0.0182,  0.1014, -0.0756,
         0.1425, -0.0005, -0.1168,  0.0686,  0.0961,  0.1045,  0.0724,  0.1006,
         0.0311,  0.0473, -0.0393,  0.0709,  0.0995, -0.0284,  0.0989,  0.1198,
         0.0190, -0.0371,  0.0298, -0.0234, -0.0725,  0.0210,  0.0479,  0.0180,
         0.0643, -0.0009, -0.0399, -0.0174,  0.0007,  0.1621, -0.0135,  0.0011,
        -0.0987,  0.0380, -0.1039,  0.1053, -0.0586,  0.0198, -0.0638, -0.0223,
         0.1377,  0.1467,  0.0719, -0.0347, -0.0273,  0.1201,  0.0800,  0.1026])
mlp.net.3.batch_norm.weight tensor([0.8125, 0.7884, 0.8004, 0.8506, 0.8636, 0.8389, 0.7930, 0.7882, 0.8108,
        0.8406, 0.8054, 0.7927, 0.8375, 0.8156, 0.7890, 0.7855, 0.8240, 0.8454,
        0.7956, 0.8176, 0.7817, 0.8069, 0.7756, 0.8014, 0.8082, 0.7897, 0.8274,
        0.8172, 0.8123, 0.8163, 0.8441, 0.8184, 0.8436, 0.8024, 0.8029, 0.8207,
        0.8124, 0.8438, 0.8343, 0.7985, 0.7923, 0.8118, 0.8331, 0.7994, 0.8359,
        0.8081, 0.7958, 0.8354, 0.8214, 0.8106, 0.8167, 0.8336, 0.8121, 0.8417,
        0.8185, 0.8334, 0.8300, 0.7978, 0.8030, 0.7879, 0.7999, 0.7976, 0.8416,
        0.8286])
mlp.net.3.batch_norm.bias tensor([-0.0188, -0.0047,  0.0143, -0.0069,  0.0261, -0.0160,  0.0159, -0.0052,
        -0.0181,  0.0157, -0.0101, -0.0201, -0.0169, -0.0200,  0.0009,  0.0095,
         0.0018, -0.0161, -0.0196, -0.0106,  0.0256, -0.0072, -0.0146, -0.0060,
         0.0030,  0.0031,  0.0055,  0.0171, -0.0215,  0.0177,  0.0513,  0.0032,
         0.0001,  0.0191,  0.0024,  0.0239, -0.0011, -0.0226, -0.0018,  0.0106,
         0.0018,  0.0054,  0.0158, -0.0205, -0.0080,  0.0085,  0.0247, -0.0106,
        -0.0038,  0.0107,  0.0008,  0.0240, -0.0030, -0.0073,  0.0090,  0.0048,
        -0.0007,  0.0127,  0.0224, -0.0154, -0.0160,  0.0101, -0.0080,  0.0190])
mlp.net.3.batch_norm.running_mean tensor([0.5687, 0.4704, 0.4988, 0.6394, 0.5094, 0.5504, 0.4374, 0.6153, 0.7690,
        0.5403, 0.6505, 0.4104, 0.5073, 0.6068, 0.5412, 0.3939, 0.7148, 0.6356,
        0.5872, 0.4268, 0.5746, 0.5319, 0.6454, 0.5712, 0.5835, 0.6324, 0.4985,
        0.4666, 0.7163, 0.6339, 0.4965, 0.9275, 0.8167, 0.5561, 0.4452, 0.5327,
        0.4865, 0.4592, 0.5079, 0.4560, 0.4844, 0.7276, 0.4671, 0.4186, 0.6725,
        0.7928, 0.4794, 0.5445, 0.4745, 0.4156, 0.4108, 0.5439, 0.5190, 0.5776,
        0.6071, 0.6552, 0.8033, 0.7659, 0.6934, 0.4432, 0.4091, 0.6318, 0.7118,
        0.5502])
mlp.net.3.batch_norm.running_var tensor([0.9847, 0.5087, 0.6282, 1.3096, 0.8189, 0.8123, 0.7478, 0.8725, 1.9405,
        0.6215, 0.9772, 0.4517, 1.0704, 0.9057, 0.5738, 0.4885, 0.8521, 1.2949,
        1.3396, 0.4523, 0.6205, 0.7101, 0.9074, 0.7891, 0.6366, 0.8217, 0.7089,
        0.5082, 0.7874, 0.9133, 0.6215, 1.5235, 1.0993, 0.7166, 0.4626, 0.8044,
        0.4910, 0.7732, 0.7031, 0.4913, 0.5126, 1.2078, 0.4600, 0.6562, 1.1024,
        0.8856, 0.4638, 0.7999, 0.5359, 0.3102, 0.6434, 0.4375, 0.8059, 0.6624,
        1.2005, 0.7873, 0.9185, 1.6417, 0.7168, 0.4554, 0.4201, 0.6726, 0.7636,
        0.5866])
mlp.net.3.batch_norm.num_batches_tracked tensor(969)
mlp.net.4.weight tensor([[-0.0317, -0.0285,  0.0037, -0.0180, -0.0206, -0.0352,  0.0113,  0.0033,
         -0.0330,  0.0291, -0.0548,  0.0114, -0.0159,  0.0069,  0.0078, -0.0328,
          0.0386, -0.0216,  0.0097, -0.0051,  0.0129, -0.0338, -0.0261, -0.0214,
          0.0393,  0.0333, -0.0082, -0.0043,  0.0472,  0.0387, -0.0117,  0.0477,
          0.0266, -0.0319,  0.0083, -0.0120,  0.0251, -0.0157, -0.0148,  0.0026,
         -0.0264,  0.0452,  0.0125, -0.0199,  0.0218,  0.0392,  0.0102, -0.0192,
         -0.0046,  0.0110, -0.0337,  0.0173, -0.0548,  0.0203, -0.0183,  0.0015,
          0.0474, -0.0463,  0.0559,  0.0220,  0.0004,  0.0223,  0.0428, -0.0149]])
