Weights: 
embeddings.embeddings.0.weight tensor([[-0.1008,  0.1995],
        [-0.3972,  0.3290],
        [-0.1456, -0.3796],
        [ 0.3758,  0.4154]])
embeddings.embeddings.1.weight tensor([[-0.2952, -0.1532],
        [ 0.3127,  0.3514],
        [-0.2771,  0.2326],
        [-0.0129,  0.0751],
        [ 0.0832,  0.3517]])
embeddings.embeddings.2.weight tensor([[ 0.0422, -0.0486, -0.2471],
        [-0.3477,  0.1468, -0.0729],
        [ 0.1123,  0.1000,  0.1952],
        [-0.0046, -0.2526,  0.2230],
        [ 0.1786, -0.2324, -0.2935],
        [ 0.4622,  0.3803,  0.4256]])
embeddings.embeddings.3.weight tensor([[ 0.1154,  0.4603],
        [ 0.4444,  0.3175],
        [-0.1806,  0.2225],
        [-0.7255,  0.2779]])
embeddings.embeddings.4.weight tensor([[-0.3074, -0.2934],
        [-0.2955,  0.3761],
        [ 0.0325, -0.1020],
        [ 0.1785,  0.4586]])
mlp.net.0.linear.weight tensor([[-0.0561,  0.5740,  0.0747,  ..., -0.1621, -0.3006, -0.0988],
        [ 0.0992, -0.1181, -0.1831,  ...,  0.4871,  0.0085, -0.0046],
        [ 0.2094,  0.0682,  0.1635,  ..., -0.0143,  0.2260, -0.0574],
        ...,
        [-0.1628, -0.0547,  0.2138,  ..., -0.0548, -0.0549, -0.2714],
        [-0.1123, -0.0570,  0.0297,  ...,  0.2533,  0.1646,  0.3189],
        [-0.2413, -0.2326, -0.0190,  ...,  0.1337, -0.0821,  0.3596]])
mlp.net.0.linear.bias tensor([ 0.0861,  0.2120,  0.2539, -0.0174,  0.0331,  0.1106,  0.0435, -0.1130,
        -0.0383, -0.0032, -0.0911, -0.0081,  0.0851, -0.2000,  0.1386, -0.0845,
        -0.0012, -0.0490, -0.0332, -0.0768,  0.1860,  0.0696,  0.0502, -0.0256,
         0.0314,  0.0270,  0.1330, -0.1884, -0.1771,  0.0348, -0.0138, -0.1210,
         0.1150, -0.0593,  0.0379,  0.0445, -0.1743,  0.1036,  0.0568,  0.2164,
         0.0360, -0.0042, -0.1753,  0.0868, -0.0350, -0.0863, -0.0350, -0.1132,
        -0.1388,  0.0459, -0.1917,  0.0920, -0.0983,  0.0948,  0.2561, -0.0343,
        -0.1140,  0.1169,  0.0239, -0.0372,  0.1246, -0.2580,  0.0707, -0.0392])
mlp.net.0.batch_norm.weight tensor([0.7453, 0.6787, 0.7972, 0.7594, 0.7774, 0.8011, 0.6500, 0.7287, 0.6844,
        0.7307, 0.7601, 0.6883, 0.7714, 0.7219, 0.7548, 0.8522, 0.7453, 0.7135,
        0.6727, 0.8012, 0.7451, 0.7723, 0.7831, 0.6498, 0.6929, 0.8096, 0.7116,
        0.7479, 0.7035, 0.8003, 0.8612, 0.7762, 0.6653, 0.7250, 0.8585, 0.7398,
        0.7375, 0.7011, 0.7661, 0.7266, 0.7096, 0.7316, 0.7581, 0.7958, 0.6932,
        0.7729, 0.8837, 0.7215, 0.8753, 0.7219, 0.6727, 0.6867, 0.8914, 0.8648,
        0.8554, 0.6884, 0.7074, 0.7590, 0.7547, 0.5623, 0.6988, 0.7704, 0.7448,
        0.7027])
mlp.net.0.batch_norm.bias tensor([ 0.0612,  0.0111,  0.0037, -0.0023,  0.0999, -0.0884, -0.0073,  0.0468,
        -0.0869, -0.0151,  0.0265,  0.0562,  0.0886, -0.0029, -0.0033,  0.0194,
        -0.0038, -0.0299, -0.0975, -0.0369, -0.0289, -0.1148, -0.0301, -0.0388,
         0.0318,  0.0506, -0.0314, -0.0146,  0.1053,  0.0302,  0.0516,  0.0134,
        -0.0420, -0.0851, -0.0287, -0.0237, -0.0097,  0.0470, -0.0481,  0.0280,
        -0.0103,  0.0157,  0.0785,  0.0423,  0.0209, -0.0291,  0.0592, -0.0731,
         0.0278, -0.0211, -0.0172,  0.0276, -0.0323, -0.0374, -0.0052, -0.0433,
         0.0521,  0.0262, -0.0102, -0.0156,  0.0370, -0.0205, -0.0672, -0.1080])
mlp.net.0.batch_norm.running_mean tensor([3.8461e-02, 1.8208e-01, 8.5580e-01, 8.3392e-03, 1.1228e-01, 6.8309e-02,
        1.2450e-02, 1.1959e-02, 4.2514e-02, 9.6081e-02, 1.3435e-01, 4.9287e-01,
        2.5007e-04, 9.9844e-11, 4.9345e-03, 5.4643e-01, 3.0944e-02, 3.6731e-01,
        4.4247e-02, 2.6934e-02, 6.5140e-01, 1.3565e-01, 1.3591e-01, 3.9089e-01,
        1.3604e-01, 1.8413e-02, 4.1280e-01, 4.1535e-02, 8.1680e-02, 1.1584e-01,
        1.8581e-02, 2.0276e-01, 2.6369e-01, 1.0752e-01, 2.1787e-01, 2.5222e-01,
        1.9959e-05, 2.1589e-01, 9.9717e-03, 9.7205e-01, 1.8110e-01, 5.8181e-01,
        1.4274e-02, 4.5000e-02, 9.7871e-02, 7.5868e-01, 1.0743e+00, 9.8121e-02,
        1.3268e-01, 1.5540e-01, 1.8920e-02, 6.6174e-02, 3.7368e-02, 1.2271e-01,
        4.5366e-01, 1.9374e-02, 3.0037e-01, 4.3027e-01, 2.6039e-03, 3.4934e-01,
        1.0965e-01, 4.3139e-04, 3.0484e-01, 1.5133e-01])
mlp.net.0.batch_norm.running_var tensor([1.0666e-02, 5.0931e-02, 1.2882e-01, 1.4068e-03, 5.6597e-02, 2.9891e-02,
        2.7455e-03, 2.4834e-03, 1.3587e-02, 3.2041e-02, 5.3938e-02, 5.8858e-02,
        3.2852e-05, 1.5003e-08, 7.3696e-04, 1.2682e-01, 9.8706e-03, 9.8287e-02,
        1.4110e-02, 8.7865e-03, 6.7017e-02, 6.7455e-02, 4.0990e-02, 3.4528e-02,
        4.9708e-02, 5.5295e-03, 1.3902e-01, 1.0197e-02, 3.1862e-02, 2.4970e-02,
        4.2972e-03, 5.5374e-02, 4.1381e-02, 3.2482e-02, 4.8326e-02, 5.5774e-02,
        2.9185e-06, 5.0416e-02, 1.6599e-03, 9.8052e-02, 4.2385e-02, 1.0965e-01,
        2.7846e-03, 1.1770e-02, 2.0461e-02, 1.4309e-01, 2.0074e-01, 2.4617e-02,
        1.9120e-02, 4.4682e-02, 3.2932e-03, 1.8223e-02, 1.1675e-02, 3.7454e-02,
        7.3860e-02, 4.0396e-03, 5.8774e-02, 2.9818e-02, 6.4854e-04, 8.9970e-02,
        2.6198e-02, 1.0159e-04, 4.5697e-02, 4.5454e-02])
mlp.net.0.batch_norm.num_batches_tracked tensor(171)
mlp.net.1.linear.weight tensor([[ 0.2254, -0.1757, -0.0233,  ..., -0.0291, -0.0871, -0.1404],
        [-0.1344, -0.1174, -0.0374,  ..., -0.0305,  0.1101,  0.1215],
        [-0.0437, -0.1664,  0.0407,  ..., -0.1902, -0.0398, -0.0184],
        ...,
        [-0.1114,  0.1190,  0.0638,  ...,  0.1575,  0.0819,  0.2077],
        [ 0.0427, -0.2230, -0.0581,  ..., -0.0535, -0.1235,  0.0730],
        [-0.2503,  0.2466,  0.0580,  ..., -0.1969, -0.0474, -0.0334]])
mlp.net.1.linear.bias tensor([-0.0093, -0.0858, -0.0310, -0.0377, -0.1221,  0.0065,  0.0710, -0.0173,
        -0.1171,  0.0864, -0.0285, -0.1060, -0.0065,  0.1902, -0.0004, -0.0226,
         0.0685,  0.0238, -0.0541, -0.0239, -0.0541, -0.1015,  0.0226,  0.0386,
         0.0239,  0.1383,  0.0604,  0.0098, -0.0281,  0.1098, -0.1166,  0.0679,
         0.0162,  0.0168, -0.1536,  0.0598, -0.0128,  0.1898,  0.1120, -0.0517,
         0.0898,  0.0111,  0.0695,  0.0240,  0.0980,  0.0613, -0.0270,  0.0534,
        -0.0010, -0.0721,  0.0834, -0.1436,  0.0159,  0.0504,  0.0057, -0.1293,
         0.1772, -0.0925, -0.0650, -0.2021,  0.1200,  0.0294,  0.0781, -0.0958])
mlp.net.1.batch_norm.weight tensor([0.5202, 0.6314, 0.6712, 0.6950, 0.6235, 0.6033, 0.6791, 0.7107, 0.5264,
        0.6099, 0.6048, 0.5932, 0.6077, 0.6112, 0.6149, 0.6288, 0.6716, 0.6285,
        0.6147, 0.6061, 0.6512, 0.6309, 0.6479, 0.6383, 0.5961, 0.6181, 0.5932,
        0.5594, 0.5542, 0.6318, 0.5906, 0.6035, 0.6297, 0.5347, 0.6260, 0.4988,
        0.6315, 0.6579, 0.5483, 0.6243, 0.5317, 0.6441, 0.6147, 0.6228, 0.6162,
        0.6208, 0.6065, 0.6455, 0.5858, 0.6839, 0.5845, 0.6396, 0.6799, 0.5539,
        0.6141, 0.6740, 0.5526, 0.6171, 0.6482, 0.6463, 0.6463, 0.6361, 0.6472,
        0.6355])
mlp.net.1.batch_norm.bias tensor([ 2.3723e-02, -1.7242e-03,  4.6635e-02, -1.9598e-02,  1.7642e-01,
        -1.6147e-01,  7.8015e-02,  9.5827e-02,  1.2382e-01, -1.6470e-03,
        -1.4742e-01,  4.1883e-02, -3.2922e-02,  6.6933e-02,  2.5416e-02,
         6.5212e-02, -2.1583e-02,  7.7264e-03,  3.9366e-02,  5.9232e-02,
         3.6230e-02, -2.3435e-02, -5.9882e-02, -4.8953e-02, -2.9053e-02,
        -7.2497e-02, -1.0994e-01,  9.1615e-02,  7.0612e-02,  5.9350e-02,
         3.0964e-02, -2.3363e-02, -7.8087e-02,  1.2356e-01,  5.3376e-02,
        -1.1883e-01,  3.3439e-02, -4.8203e-02, -2.4189e-02,  2.8869e-02,
         1.8454e-02, -6.6396e-02, -1.4582e-02, -1.0176e-01,  5.4334e-02,
         3.3431e-02, -2.1623e-02, -3.3790e-02, -7.0385e-02,  8.1844e-02,
        -1.9447e-02, -4.9354e-02,  4.3093e-02,  8.8204e-02, -1.1672e-01,
         5.9919e-02, -3.4010e-02,  2.6773e-02,  4.6345e-02, -7.8510e-03,
        -6.7097e-03, -4.9137e-02, -7.0753e-02,  1.4143e-04])
mlp.net.1.batch_norm.running_mean tensor([0.4208, 0.5435, 0.5329, 0.4916, 0.5374, 0.5896, 0.6655, 0.6876, 0.3939,
        0.5063, 0.5979, 0.3454, 0.5279, 0.7054, 0.4744, 0.4470, 0.5086, 0.4407,
        0.5239, 0.3960, 0.5549, 0.3808, 0.4932, 0.4022, 0.5743, 0.6279, 0.5244,
        0.5072, 0.4669, 0.6426, 0.4604, 0.5666, 0.4600, 0.5315, 0.4811, 0.7527,
        0.4938, 0.5888, 0.5401, 0.4131, 0.5634, 0.5486, 0.5917, 0.5488, 0.5788,
        0.4298, 0.5722, 0.6296, 0.4563, 0.3816, 0.5096, 0.4183, 0.6366, 0.6584,
        0.5521, 0.6146, 0.9584, 0.4211, 0.5380, 0.3997, 0.4047, 0.4080, 0.6866,
        0.3531])
mlp.net.1.batch_norm.running_var tensor([0.5445, 0.8639, 0.6539, 0.5950, 0.8084, 0.7146, 1.0534, 1.3567, 0.4884,
        0.6252, 0.7101, 0.3658, 0.7311, 0.7580, 0.5464, 0.6455, 0.6549, 0.6270,
        0.6019, 0.4192, 0.8196, 0.5653, 0.8332, 0.5031, 0.6381, 0.6256, 0.6653,
        0.6409, 0.6775, 1.2423, 0.8105, 0.7517, 0.4488, 0.7338, 0.5985, 0.9521,
        0.5998, 0.5376, 0.5101, 0.4398, 0.6250, 0.8234, 0.7260, 0.7607, 1.0698,
        0.3677, 0.6906, 0.6373, 0.4947, 0.4569, 0.7511, 0.4145, 0.9011, 0.6214,
        0.6681, 0.7384, 1.2744, 0.5088, 0.6393, 0.4862, 0.4289, 0.4457, 0.8322,
        0.4218])
mlp.net.1.batch_norm.num_batches_tracked tensor(171)
mlp.net.2.weight tensor([[-0.0007, -0.0036, -0.0412,  0.0159, -0.0071, -0.0006, -0.0080, -0.0406,
          0.0060,  0.0018,  0.0192,  0.0345,  0.0200, -0.0297, -0.0163,  0.0346,
         -0.0407, -0.0082,  0.0291,  0.0138, -0.0295,  0.0050, -0.0112, -0.0142,
          0.0323,  0.0015,  0.0323, -0.0059, -0.0091, -0.0477, -0.0233, -0.0115,
          0.0002,  0.0183, -0.0095,  0.0155,  0.0085,  0.0289,  0.0051, -0.0187,
         -0.0048, -0.0439, -0.0234, -0.0135, -0.0206,  0.0113,  0.0121,  0.0375,
         -0.0172, -0.0299,  0.0211,  0.0579, -0.0344,  0.0241,  0.0118,  0.0147,
          0.0173, -0.0121, -0.0152, -0.0025, -0.0053, -0.0045,  0.0273, -0.0113]])
