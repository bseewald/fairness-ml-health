Weights: 
net.embeddings.embeddings.0.weight tensor([[ 0.1231, -0.5115],
        [ 0.3751, -0.1788],
        [-0.1647,  0.5898],
        [ 0.1344,  0.1734]])
net.embeddings.embeddings.1.weight tensor([[-0.2548,  0.3436],
        [ 0.1578,  0.1091],
        [-0.1932,  0.5575],
        [ 0.3455, -0.3285],
        [-0.2678, -0.0149]])
net.embeddings.embeddings.2.weight tensor([[-0.0042, -0.2417,  0.4844],
        [-0.3548, -0.0446,  0.4555],
        [ 0.1732, -0.0070,  0.3668],
        [ 0.4101, -0.1170,  0.2026],
        [ 0.3529, -0.3037, -0.4225],
        [ 0.4152, -0.1758, -0.2603]])
net.embeddings.embeddings.3.weight tensor([[-0.0874, -0.5016],
        [-0.0987, -0.5175],
        [-0.6412, -0.5180],
        [-0.3112,  0.4263]])
net.embeddings.embeddings.4.weight tensor([[ 0.0475, -0.4880],
        [ 0.3454, -0.2932],
        [-0.2280, -0.2643],
        [-0.0191, -0.0807]])
net.mlp.net.0.linear.weight tensor([[ 0.0775,  0.2504, -0.3386,  ...,  0.1891, -0.3465, -0.0233],
        [ 0.0513,  0.1627,  0.3672,  ..., -0.7627,  0.0193,  0.2240],
        [ 0.2573,  0.1986,  0.0027,  ...,  0.2298, -0.0216,  0.1115],
        ...,
        [-0.8009, -0.3542, -0.3080,  ..., -0.4754, -0.1684, -0.2285],
        [-0.1458,  0.1328,  0.5043,  ..., -0.1601, -0.5837,  0.0107],
        [ 0.7259, -0.0474, -0.2990,  ..., -0.6568, -0.0605, -0.1570]])
net.mlp.net.0.linear.bias tensor([-0.1271,  0.1977, -0.0198, -0.1079, -0.0614, -0.0792, -0.1754, -0.0242,
         0.1767,  0.1372,  0.2121, -0.0107, -0.1930, -0.0407, -0.0747,  0.1084,
        -0.0218, -0.0245,  0.1862, -0.0950,  0.1811,  0.0416,  0.1695,  0.0519,
         0.1455,  0.0229, -0.0459,  0.1176, -0.2262, -0.0629, -0.1141,  0.1384,
         0.2631, -0.1174,  0.2309,  0.0013,  0.1225,  0.0096,  0.1215, -0.3163,
         0.2009, -0.1773,  0.0363,  0.1834, -0.2139,  0.0396,  0.1343,  0.0647,
        -0.1838, -0.1640,  0.0273,  0.1479,  0.0944, -0.1852,  0.0844,  0.1906,
         0.1378, -0.0589,  0.0974,  0.1067, -0.1513, -0.0969,  0.0829,  0.0603,
         0.1713, -0.0472,  0.0763,  0.0728,  0.2048,  0.0586,  0.1078,  0.1912,
         0.1166,  0.0838,  0.1117,  0.2095,  0.1796,  0.0272, -0.2274, -0.1925,
        -0.1124,  0.0889, -0.2187,  0.0544, -0.1744, -0.2384, -0.1397,  0.2515,
         0.0479, -0.0189, -0.2237, -0.1085,  0.0856, -0.1062,  0.0214, -0.1421,
        -0.1012, -0.0653, -0.0992,  0.2239,  0.1247,  0.1186,  0.0409, -0.2323,
        -0.1548,  0.1100, -0.1050, -0.0490, -0.1508, -0.1988,  0.1439, -0.1355,
         0.1306,  0.2153, -0.1975, -0.0475, -0.0187,  0.1579,  0.1573,  0.2266,
        -0.1887, -0.2600,  0.0541,  0.0829,  0.0078, -0.1698,  0.0405, -0.0015])
net.mlp.net.0.batch_norm.weight tensor([0.9919, 1.0053, 1.0322, 1.0561, 0.9760, 1.0174, 1.0091, 0.9794, 1.0507,
        1.0472, 1.0647, 1.0119, 1.0242, 0.9335, 1.0502, 0.9431, 0.9377, 0.9784,
        0.9844, 1.0573, 0.9323, 1.0590, 0.9637, 0.9979, 1.0420, 0.9618, 0.9876,
        1.0316, 1.0404, 1.0803, 0.9347, 1.0260, 1.0049, 1.0513, 1.0402, 1.0384,
        1.0094, 0.9334, 1.0510, 0.9496, 0.9843, 1.0189, 1.0391, 0.9124, 1.0528,
        0.9326, 1.0385, 1.0056, 0.9817, 0.9641, 0.9834, 0.9707, 0.9466, 1.0099,
        0.9776, 0.9962, 0.9857, 0.9712, 1.0523, 1.0786, 1.0641, 1.0070, 1.0751,
        1.0002, 1.0308, 0.9767, 1.0241, 1.0162, 1.0432, 0.9844, 0.9694, 0.9544,
        1.0368, 0.9734, 1.0314, 1.0232, 0.9758, 1.0421, 0.9900, 0.9612, 0.9766,
        0.9822, 0.9896, 0.9801, 0.9709, 1.0591, 1.0165, 0.9714, 0.9805, 0.9899,
        1.0149, 0.9770, 0.9887, 0.9768, 1.0531, 0.9406, 1.0301, 1.0469, 0.9663,
        0.9680, 1.0012, 0.9797, 1.0760, 1.0334, 0.9626, 1.0276, 0.9862, 1.0704,
        0.9472, 0.9522, 0.9676, 1.0278, 0.9615, 1.0201, 1.0090, 0.8970, 0.9408,
        1.0176, 0.9782, 0.9647, 1.0149, 1.0646, 1.0386, 0.9777, 1.0766, 1.0249,
        0.9319, 0.9659])
net.mlp.net.0.batch_norm.bias tensor([-0.0214, -0.0305,  0.0662, -0.0917,  0.0023,  0.0660, -0.0096, -0.0786,
         0.0389,  0.0445,  0.0726,  0.0357, -0.1028,  0.0585,  0.0541,  0.0358,
        -0.0739,  0.0216,  0.0291,  0.0324,  0.0390,  0.0488, -0.0073, -0.0053,
         0.0366,  0.0794,  0.0627, -0.0432, -0.0565, -0.0553, -0.0217,  0.0399,
         0.0110, -0.0373, -0.0276, -0.0028,  0.0548, -0.0070,  0.0254,  0.0613,
        -0.0034,  0.0144,  0.0175,  0.0611, -0.0171, -0.0127, -0.0487, -0.0260,
        -0.0370,  0.0298,  0.0335, -0.0351,  0.0698, -0.0319, -0.0290,  0.0215,
        -0.0020,  0.0638, -0.0187,  0.0198,  0.0083,  0.0006, -0.0532, -0.0434,
         0.0816,  0.0128, -0.0182,  0.0154, -0.0062,  0.0294,  0.0604,  0.0130,
        -0.0722,  0.0213, -0.0218,  0.0102,  0.0750,  0.0352,  0.0351, -0.0396,
        -0.0557,  0.0337,  0.0178, -0.0063,  0.0379,  0.0327,  0.0108,  0.0660,
         0.0626, -0.0346, -0.0191,  0.0285,  0.1005, -0.0320, -0.0769, -0.0077,
         0.0134,  0.0586, -0.0148, -0.0113,  0.0079,  0.0615, -0.0217,  0.0612,
         0.0770,  0.0506,  0.0348,  0.0032, -0.0551,  0.0671, -0.0017,  0.0411,
         0.0496, -0.0043,  0.0487,  0.0389,  0.0015,  0.0035, -0.0140, -0.0081,
         0.0256, -0.0149, -0.0066,  0.0296, -0.0399, -0.0064, -0.0124, -0.0279])
net.mlp.net.0.batch_norm.running_mean tensor([2.9535e-01, 6.2668e-01, 4.5856e-02, 1.0345e-01, 1.4300e-01, 1.2013e-01,
        4.5570e-02, 1.1588e+00, 3.2458e-02, 1.7723e-01, 1.7830e-01, 4.8906e-03,
        2.0250e-01, 7.6758e-02, 5.0027e-01, 1.7470e-01, 1.7294e-02, 3.6895e-01,
        1.0868e-01, 2.6552e-02, 3.0366e-01, 3.9365e-04, 9.7804e-01, 6.4410e-01,
        1.2136e-01, 7.7075e-02, 2.9885e-01, 3.9395e-01, 2.1377e-01, 2.0914e-02,
        9.7308e-01, 2.6776e-01, 2.3316e-02, 5.3831e-02, 1.3913e-02, 8.5476e-01,
        4.0184e-01, 8.4113e-02, 5.9017e-02, 8.2232e-01, 1.9176e-01, 2.4294e-01,
        1.1479e+00, 1.3850e-01, 8.3305e-02, 5.3510e-01, 2.9568e-01, 3.2369e-01,
        2.8561e-01, 4.8323e-01, 2.2482e-02, 1.0649e+00, 8.1744e-02, 1.4556e-01,
        1.3878e-01, 9.3883e-02, 9.4606e-01, 6.3060e-04, 2.7726e-01, 3.7889e-01,
        4.2205e-02, 2.5631e-01, 1.6015e-02, 4.5346e-01, 8.3050e-01, 4.8816e-01,
        1.0572e-02, 4.1827e-01, 1.9276e-01, 1.0189e-01, 8.1726e-01, 5.5628e-01,
        2.4950e-01, 8.0866e-02, 2.2190e-01, 7.1235e-01, 5.8357e-01, 1.1082e-01,
        1.9369e-01, 4.3955e-01, 1.2546e-01, 2.2625e-01, 4.5807e-03, 2.1890e-01,
        6.3319e-01, 2.1149e-03, 1.2392e+00, 5.3586e-01, 1.6376e-01, 7.6257e-02,
        1.1068e-02, 3.7731e-01, 7.4776e-01, 6.3616e-02, 3.1546e-01, 1.1246e+00,
        2.8139e-01, 9.0841e-01, 3.6293e-01, 5.9573e-01, 3.5793e-01, 1.1098e+00,
        9.7779e-03, 3.6854e-01, 3.6032e-02, 1.4697e-01, 1.0845e-01, 5.5811e-03,
        1.0698e+00, 1.4238e-01, 1.7124e-01, 1.1008e-01, 2.1176e-01, 1.7784e-01,
        8.8921e-02, 2.0184e-01, 4.8560e-02, 6.8380e-03, 1.8655e-01, 6.2036e-01,
        1.0544e+00, 6.7414e-02, 3.7152e-01, 6.7046e-01, 6.1686e-01, 2.1950e-01,
        9.0611e-02, 8.0013e-01])
net.mlp.net.0.batch_norm.running_var tensor([0.1371, 0.6331, 0.0638, 0.1081, 0.1732, 0.1247, 0.0677, 0.5907, 0.0662,
        0.1316, 0.1067, 0.0539, 0.1721, 0.0769, 0.1963, 0.4873, 0.0754, 0.1842,
        0.1004, 0.0622, 0.3829, 0.0525, 0.2649, 0.3145, 0.0784, 0.0946, 0.1873,
        0.1872, 0.3640, 0.0575, 0.4207, 0.1474, 0.0621, 0.1357, 0.0563, 0.2849,
        0.6513, 0.0850, 0.1508, 0.2287, 0.1504, 0.1773, 0.3233, 0.2452, 0.1773,
        0.3615, 0.1508, 0.1723, 0.2194, 0.3155, 0.0589, 0.4147, 0.1030, 0.2811,
        0.3051, 0.1234, 0.1857, 0.0525, 0.1473, 0.1202, 0.0711, 0.1286, 0.0569,
        0.1390, 0.3509, 1.0297, 0.0561, 0.2583, 0.1280, 0.0914, 0.2639, 0.1835,
        0.1412, 0.1077, 0.4534, 0.3861, 0.2384, 0.1635, 0.3195, 0.3012, 0.1116,
        0.1218, 0.0553, 0.1286, 0.2803, 0.0534, 0.4548, 0.2859, 0.1454, 0.0813,
        0.0549, 0.5683, 0.3096, 0.1787, 0.2965, 0.3067, 0.1634, 0.2451, 0.1712,
        0.3302, 0.2073, 0.4502, 0.0551, 0.2093, 0.1227, 0.0890, 0.2011, 0.0538,
        0.3582, 0.1198, 0.1090, 0.1025, 0.1550, 0.3012, 0.3091, 0.1067, 0.0738,
        0.0540, 0.1129, 0.1477, 0.3345, 0.1836, 0.2172, 0.3344, 0.2805, 0.2797,
        0.0780, 0.5299])
net.mlp.net.0.batch_norm.num_batches_tracked tensor(28)
net.mlp.net.1.linear.weight tensor([[-0.0273,  0.1347,  0.0334,  ..., -0.0191, -0.1341, -0.0099],
        [-0.0463,  0.1395, -0.0553,  ..., -0.0024,  0.0053, -0.0088],
        [ 0.2098,  0.0464, -0.0445,  ..., -0.0524, -0.2394,  0.1885],
        ...,
        [-0.0377,  0.1413,  0.0274,  ..., -0.0605, -0.0907,  0.1914],
        [-0.0396, -0.1651, -0.0406,  ...,  0.1149, -0.0877, -0.1420],
        [ 0.0008, -0.0346,  0.1346,  ...,  0.1455, -0.1433,  0.1026]])
net.mlp.net.1.linear.bias tensor([-1.3582e-02,  1.0788e-02,  1.6007e-03, -1.4363e-02,  4.8922e-02,
         1.0689e-01,  1.1833e-01, -2.2726e-02,  2.0977e-02, -1.2864e-02,
        -3.0188e-02, -1.0963e-01, -6.9406e-02, -5.8260e-02,  1.0697e-01,
        -8.5438e-02,  1.8476e-05,  2.7600e-03,  1.1474e-02, -8.2500e-02,
         8.1835e-02,  3.5596e-03,  5.6606e-02,  6.1075e-02, -4.0146e-02,
         3.6451e-02, -7.3780e-02, -2.0319e-02, -4.9133e-02, -4.6977e-02,
         1.0476e-01,  1.2855e-02, -8.0087e-02, -8.4541e-02, -1.0478e-01,
        -1.0816e-01, -5.3727e-02, -4.3448e-02,  3.2895e-02, -3.8730e-02,
        -2.5399e-02, -9.8474e-02,  1.1919e-03,  9.6164e-02, -3.7142e-02,
        -7.7453e-03, -3.4831e-02,  8.0359e-02,  5.2346e-02,  1.4099e-04,
         1.5181e-02, -1.2910e-02,  7.7319e-03, -1.0522e-01,  9.3046e-02,
        -3.1553e-03, -8.2328e-03,  4.0524e-02, -1.3963e-02,  7.9394e-02,
        -1.8667e-02,  2.8628e-02, -8.6971e-02, -6.7099e-02, -8.9438e-02,
         5.5302e-02, -7.6360e-02,  2.2036e-02, -1.8594e-02,  4.9027e-02,
         4.2310e-02,  1.0271e-02, -1.5001e-02, -4.1056e-02,  7.2576e-02,
         3.3984e-02, -1.7544e-02, -9.5895e-03, -1.0741e-01,  9.2532e-03,
        -4.9066e-02,  1.7096e-02, -5.2755e-02,  4.9567e-02, -1.1118e-01,
        -5.8612e-02,  4.0033e-03,  1.6764e-02, -5.5879e-03, -7.8025e-02,
        -2.7448e-02,  9.1335e-02,  6.1278e-02, -9.5044e-02,  2.6683e-02,
        -7.2704e-02, -1.5475e-02,  6.0804e-02, -1.3568e-01, -6.3999e-02,
        -7.0477e-02, -6.2089e-02,  6.6855e-03, -6.1642e-02,  1.3182e-03,
         5.0896e-03, -1.3024e-01, -1.3769e-01, -5.9725e-02, -6.0385e-02,
        -3.1469e-02,  8.8517e-02, -7.9521e-02,  3.7156e-02,  1.1772e-02,
        -9.6569e-03, -6.7582e-03,  7.6241e-02,  7.5685e-02,  8.1447e-02,
        -1.1122e-01,  1.0145e-01,  6.3332e-02,  9.1888e-02, -1.0825e-01,
         3.5281e-02,  1.8999e-02, -8.7735e-02])
net.mlp.net.1.batch_norm.weight tensor([0.9623, 0.9817, 1.0473, 0.9589, 1.0074, 0.9410, 1.0491, 1.0049, 1.0335,
        0.9780, 0.9733, 0.9982, 0.9824, 1.0119, 0.9903, 1.0369, 0.9657, 1.0411,
        1.0309, 0.9335, 0.9872, 0.9708, 1.0299, 1.0220, 1.0382, 0.9786, 1.0376,
        1.0844, 1.0071, 0.9742, 1.0117, 1.0327, 1.0115, 0.9901, 0.9600, 1.0425,
        1.0739, 0.9602, 1.0312, 0.9372, 0.9922, 1.0239, 1.0858, 0.9582, 0.9661,
        1.0373, 0.9554, 1.0436, 1.0146, 0.9625, 1.0436, 0.9520, 1.0489, 1.0304,
        1.0104, 0.9825, 1.0729, 0.9819, 0.9719, 0.9401, 1.0159, 1.0159, 1.0733,
        0.9857, 1.0045, 1.0465, 1.0706, 1.0085, 0.9620, 0.9617, 1.0232, 1.0695,
        0.9865, 1.0262, 1.0093, 1.0299, 1.0101, 0.9838, 1.0320, 1.0321, 0.9874,
        0.9412, 0.9752, 0.9523, 1.0021, 0.9944, 1.0196, 1.0178, 0.9769, 0.9311,
        1.0380, 0.9397, 0.9915, 1.0568, 0.9767, 0.9700, 1.0125, 1.0915, 0.9315,
        0.9914, 0.9966, 0.9907, 0.9456, 0.9832, 0.9854, 1.0633, 0.9636, 0.9393,
        1.0260, 1.0105, 0.9691, 1.0560, 1.0353, 1.0107, 0.9684, 0.9967, 0.9867,
        1.0896, 1.0801, 1.0000, 0.9443, 0.9792, 1.0124, 1.0590, 0.9677, 1.0191,
        0.9689, 1.0193])
net.mlp.net.1.batch_norm.bias tensor([ 0.0383, -0.0026, -0.0559,  0.0229, -0.0433,  0.0316, -0.0122, -0.0483,
         0.0105,  0.0786,  0.0199, -0.0707,  0.0527,  0.0018,  0.0129,  0.0203,
         0.0450, -0.0199, -0.0071,  0.0362,  0.0584, -0.0237, -0.0054,  0.0295,
        -0.0425, -0.0590,  0.0364, -0.0151, -0.0278, -0.0096, -0.0528,  0.0183,
        -0.0253,  0.0443,  0.0772, -0.0164,  0.0159, -0.0446, -0.0262, -0.0491,
        -0.0312, -0.0391, -0.0087, -0.0562,  0.0127,  0.0543,  0.0053, -0.0080,
        -0.0050, -0.0375,  0.0467, -0.0436, -0.0493, -0.0538,  0.0147,  0.0147,
         0.0017,  0.0129,  0.0972,  0.0092,  0.0797,  0.0686, -0.0614, -0.0136,
        -0.0650, -0.0284,  0.0244,  0.0038,  0.0666,  0.0414, -0.0122,  0.0759,
         0.0592,  0.0379,  0.0509,  0.0243, -0.0335,  0.0127,  0.0452,  0.0016,
        -0.0119,  0.0272,  0.0198, -0.0066, -0.0025,  0.0143, -0.0079, -0.0216,
         0.0159, -0.0233,  0.0388,  0.0138,  0.0595,  0.0150,  0.0030, -0.0351,
        -0.0136,  0.0429, -0.0607, -0.0305,  0.0259,  0.0376, -0.0782,  0.0299,
         0.0631, -0.0214,  0.0409, -0.0704, -0.0905,  0.0493,  0.0427,  0.0055,
         0.0488,  0.0074,  0.0526,  0.0196,  0.0202,  0.0413, -0.0598,  0.0370,
         0.0175,  0.0147,  0.0166, -0.0298,  0.0235, -0.0911, -0.0023, -0.0545])
net.mlp.net.1.batch_norm.running_mean tensor([0.5730, 0.5697, 0.7513, 0.7216, 0.6376, 0.7170, 0.7367, 0.3915, 0.8779,
        0.5342, 0.7554, 0.4903, 0.4532, 0.5820, 0.5691, 0.5753, 0.5440, 0.6036,
        0.5534, 0.6088, 0.6459, 0.5209, 0.7186, 0.7698, 0.7331, 0.5585, 0.5300,
        0.5545, 0.4609, 0.8619, 0.6032, 0.7505, 0.6929, 0.5396, 0.4115, 0.6023,
        0.6160, 0.8403, 0.5180, 0.6403, 0.4489, 0.6296, 0.7260, 0.7537, 0.5013,
        0.6084, 0.6823, 0.6545, 0.7983, 0.7496, 0.5398, 0.4873, 0.6171, 0.5978,
        0.6584, 0.4767, 0.8683, 0.5385, 0.4405, 0.6907, 0.5656, 0.5993, 0.5885,
        0.5103, 0.7102, 0.8193, 0.7408, 0.7678, 0.8172, 0.6881, 0.5526, 0.5015,
        0.5954, 0.6008, 0.7233, 0.8218, 0.6641, 0.5863, 0.3488, 0.6205, 0.5866,
        0.7665, 0.9299, 0.5489, 0.4809, 0.4427, 0.6077, 0.5694, 0.6292, 0.5301,
        0.7443, 0.6049, 0.6338, 0.5139, 0.6050, 0.7425, 0.6967, 0.6075, 0.5535,
        0.7014, 0.7050, 0.6201, 0.5968, 0.4108, 0.4107, 0.6409, 0.7457, 0.3350,
        0.5542, 0.5495, 0.5938, 0.8522, 0.5080, 0.7895, 0.5373, 0.5592, 0.7109,
        0.8215, 0.8782, 0.5268, 0.8897, 0.6590, 0.5970, 0.6321, 0.6013, 0.5929,
        0.6001, 0.4533])
net.mlp.net.1.batch_norm.running_var tensor([ 1.0861,  1.0269,  2.5280,  0.8708,  1.9234,  0.9448,  0.9020,  0.5535,
         1.7398,  0.8776,  1.2001,  1.0842,  0.5620,  0.6745,  0.6318,  0.8117,
         0.9127,  0.8454,  0.9458,  0.9518,  0.8115,  0.7646,  1.2281,  2.7979,
         1.2758,  3.3859,  0.8018,  0.7304,  0.6046,  6.0935,  0.7642,  4.1400,
         2.3196,  2.5089,  0.6327,  3.6098,  1.0941,  3.5390,  0.9000,  4.2545,
         0.8785,  1.1763,  1.1392,  1.8120,  0.7827,  0.7093,  1.2439,  1.1494,
         4.5303,  1.1565,  0.7824,  0.6361,  2.0535,  2.9422,  1.1009,  0.8712,
         1.2265,  0.8504,  0.5877,  0.9735,  0.8710,  0.5624,  0.8242,  0.6644,
         5.0148,  1.0878,  0.9973,  1.0616,  1.4970,  1.1034,  0.6708,  0.6753,
         1.2011,  3.4601,  0.8430,  1.5170,  2.2631,  0.8119,  0.5455,  0.9506,
         0.7784,  1.8000, 11.3100,  0.8443,  0.7053,  0.8811,  1.0370,  0.8358,
         1.1149,  1.6673,  0.9475,  0.7677,  2.7043,  2.0005,  0.8421,  1.3299,
         0.9549,  0.9254,  1.0814,  3.1854,  1.3316,  0.9481,  0.7847,  0.8129,
         0.5284,  1.1796,  2.8795,  0.4698,  0.8970,  0.6430,  4.3440,  1.3195,
         0.7727,  5.2379,  0.6403,  2.6760,  1.1346,  1.3279,  1.9419,  0.7672,
         8.2951,  0.5215,  0.8209,  0.9068,  0.9657,  1.1638,  0.8576,  0.6132])
net.mlp.net.1.batch_norm.num_batches_tracked tensor(28)
net.mlp.net.2.linear.weight tensor([[ 0.0719,  0.0106,  0.0107,  ..., -0.0820,  0.0973,  0.1669],
        [ 0.1414,  0.0479,  0.2378,  ...,  0.0694,  0.1873,  0.1402],
        [-0.0867,  0.1024,  0.0533,  ...,  0.1654,  0.0199, -0.0841],
        ...,
        [-0.3116, -0.2168,  0.0218,  ...,  0.2053,  0.2252, -0.1156],
        [-0.0436,  0.0135,  0.2446,  ...,  0.3001, -0.0333,  0.1033],
        [-0.0333, -0.0346, -0.0641,  ..., -0.0026, -0.1957,  0.0441]])
net.mlp.net.2.linear.bias tensor([ 0.0837, -0.0713,  0.1365, -0.1293, -0.0765, -0.0202,  0.0747, -0.0360,
        -0.0852, -0.0407, -0.0309, -0.0174,  0.0226, -0.0507,  0.0131, -0.0050,
         0.0361, -0.0652, -0.0649,  0.0051,  0.0566,  0.0728,  0.0190, -0.0807,
        -0.1432,  0.0234, -0.0068, -0.0219, -0.0546,  0.1360, -0.0105, -0.1331,
        -0.0083,  0.0277, -0.0255,  0.1117, -0.0118,  0.0280, -0.1477,  0.0679,
         0.0078, -0.0541,  0.0152,  0.0894,  0.0106, -0.0563,  0.0440,  0.0654,
        -0.1006, -0.1249, -0.1055,  0.0102,  0.0956, -0.0727, -0.0304, -0.0934,
        -0.0796,  0.0281, -0.0434,  0.0390, -0.0797, -0.1210, -0.0619, -0.0834,
        -0.0526,  0.0280,  0.0638,  0.0330,  0.0407,  0.0184, -0.1155, -0.0463,
         0.0640, -0.1138,  0.0811, -0.0718, -0.0223,  0.0159, -0.0396, -0.0322,
        -0.0632,  0.1092,  0.0608, -0.0705, -0.1252,  0.0248,  0.0650,  0.0744,
         0.0547, -0.0275, -0.0816, -0.0743, -0.0426, -0.0114, -0.0008,  0.1240,
         0.0511, -0.1220, -0.0562, -0.0125, -0.0047, -0.0287, -0.0748,  0.0163,
        -0.0055,  0.0475, -0.0863, -0.0914,  0.0595,  0.0656, -0.0808,  0.0734,
        -0.1108, -0.0397,  0.0859, -0.0735, -0.0857, -0.0140, -0.0522, -0.0791,
        -0.0552, -0.0314, -0.1085, -0.0233,  0.0376,  0.0129, -0.0088, -0.0144])
net.mlp.net.2.batch_norm.weight tensor([0.9426, 1.0934, 1.0077, 0.9987, 1.0404, 0.9631, 0.9993, 0.9439, 0.9640,
        0.9701, 0.9475, 1.0607, 1.0667, 0.9546, 0.9689, 0.9855, 1.0757, 1.0648,
        0.9877, 0.9790, 1.0013, 1.0247, 0.9976, 0.9941, 1.0371, 0.9837, 1.0588,
        0.9989, 1.0494, 1.0602, 0.9731, 0.9848, 0.9924, 1.0449, 0.9658, 0.9698,
        1.0289, 0.9776, 0.9496, 0.9562, 1.0316, 1.0185, 0.9517, 0.9974, 0.9971,
        0.9411, 1.0080, 1.0039, 1.0602, 0.9321, 1.0582, 1.0748, 1.0265, 1.0654,
        1.0053, 0.9344, 1.0153, 1.0168, 0.9337, 1.0380, 1.0790, 1.0361, 1.0342,
        1.0098, 1.0800, 0.9661, 0.9736, 0.9414, 1.0245, 1.0590, 1.0046, 1.0346,
        1.0620, 1.0288, 0.9896, 0.9738, 1.0654, 1.0682, 0.9464, 1.0378, 0.9754,
        0.9635, 1.0198, 1.1015, 1.0875, 1.0208, 1.0475, 0.9481, 0.9820, 1.0723,
        0.9740, 1.0367, 1.0068, 0.9865, 1.0822, 1.0691, 0.9691, 1.0022, 0.9909,
        1.0519, 1.0542, 0.9979, 0.9915, 1.0007, 1.0171, 0.9797, 1.0335, 0.9732,
        1.0568, 1.0092, 1.0349, 1.0408, 0.9668, 0.9975, 1.0472, 0.9604, 0.9940,
        1.0791, 0.9874, 1.0459, 0.9711, 1.0193, 0.9918, 1.0725, 0.9637, 1.0009,
        1.0561, 0.9968])
net.mlp.net.2.batch_norm.bias tensor([ 0.0490, -0.0413,  0.0209,  0.0122, -0.0604, -0.0179, -0.0255, -0.0246,
        -0.0765,  0.0366, -0.0699,  0.0271, -0.0165,  0.0068, -0.0683,  0.0044,
        -0.0271,  0.0420,  0.0750,  0.0090, -0.0073, -0.0169, -0.0426,  0.0147,
        -0.0048, -0.0053, -0.0292, -0.0850,  0.0452,  0.0310,  0.0972, -0.0337,
        -0.0022,  0.0514,  0.0071,  0.0467, -0.0741, -0.0833,  0.0156, -0.0093,
         0.0103, -0.0395,  0.0271,  0.0324,  0.0354,  0.0517, -0.0371, -0.0227,
         0.0120, -0.0197,  0.0598,  0.0546,  0.0141, -0.0458, -0.0073,  0.0330,
        -0.0032,  0.0347, -0.0388,  0.0225, -0.0085, -0.0471,  0.0346,  0.0436,
         0.0029,  0.0174,  0.0325,  0.0773, -0.0075, -0.0238, -0.0119,  0.0200,
         0.0159, -0.0190,  0.0444,  0.0154,  0.0109, -0.0168,  0.0732, -0.0335,
        -0.0227, -0.0089,  0.0079, -0.0066, -0.0132,  0.0413, -0.0565, -0.0094,
        -0.0588,  0.0395, -0.0734, -0.0125, -0.0770, -0.0109, -0.0158, -0.0230,
         0.0167, -0.0365,  0.0090, -0.0097, -0.0445, -0.0229,  0.0112,  0.0113,
        -0.0464,  0.0745,  0.0435, -0.0223,  0.0028,  0.0355,  0.0096,  0.0258,
        -0.0208, -0.0290,  0.0146, -0.0095,  0.0405, -0.0258, -0.0561,  0.0025,
         0.0165, -0.0153, -0.0185, -0.0234,  0.0610, -0.0557,  0.0010, -0.0208])
net.mlp.net.2.batch_norm.running_mean tensor([0.5690, 0.5042, 0.6395, 0.4862, 0.7128, 0.5930, 0.5751, 0.9090, 0.5897,
        0.6796, 0.6871, 0.7984, 0.7829, 0.6889, 0.9171, 0.6723, 0.7446, 0.6647,
        0.9234, 0.8370, 0.5851, 0.7482, 0.5124, 0.7929, 0.6186, 0.8078, 0.5617,
        0.6671, 0.5740, 0.6948, 0.5444, 0.5010, 0.4653, 0.5821, 0.5617, 0.8544,
        0.5894, 0.7255, 0.4851, 0.7552, 0.7304, 0.6081, 0.7699, 0.5722, 0.4763,
        0.6000, 0.5812, 0.6438, 0.5250, 0.6821, 0.5305, 0.7392, 0.7362, 0.6181,
        0.4463, 0.4907, 0.3126, 0.6978, 0.5751, 0.6254, 0.6656, 0.5299, 0.6121,
        0.4003, 0.6097, 0.7001, 0.5285, 0.7460, 0.5875, 0.5501, 0.5015, 0.7198,
        0.8962, 0.6151, 0.9941, 0.4949, 0.7224, 0.5903, 0.7454, 0.4184, 0.6262,
        0.9698, 0.7299, 0.6390, 0.4007, 0.5882, 0.8882, 0.8714, 0.6733, 0.4831,
        0.6839, 0.6148, 0.6186, 0.5945, 0.7002, 0.6682, 0.7066, 0.8245, 0.6922,
        0.6752, 0.6620, 0.8822, 0.7606, 0.8358, 0.5613, 0.6778, 0.6013, 0.5264,
        0.6695, 0.6415, 0.5843, 0.5407, 0.7683, 0.7446, 0.7805, 0.7719, 0.6354,
        0.7075, 0.7663, 0.5067, 0.5974, 0.5799, 0.5089, 0.5797, 1.0534, 0.6776,
        0.5612, 0.6837])
net.mlp.net.2.batch_norm.running_var tensor([0.7776, 0.9230, 2.6099, 0.9810, 1.1584, 1.4041, 0.8788, 8.0523, 4.7653,
        2.7541, 2.8636, 1.7148, 1.9939, 1.2343, 1.4182, 1.0664, 1.4015, 1.6181,
        1.9129, 2.0286, 1.4357, 1.1620, 0.6718, 1.6359, 1.2554, 2.8339, 0.8056,
        1.4855, 0.9435, 1.3236, 0.6657, 1.9146, 0.5744, 1.0376, 1.3855, 1.2377,
        1.5401, 1.2940, 4.3159, 1.9367, 1.3525, 4.0682, 3.6203, 1.5730, 0.6817,
        0.7482, 1.3161, 1.2980, 1.2343, 2.7517, 0.6407, 1.3643, 2.0715, 1.5147,
        0.6778, 0.7802, 0.3889, 1.2750, 1.2680, 1.0689, 1.0690, 1.1311, 0.7646,
        0.4003, 0.7910, 3.0717, 0.9872, 1.0854, 0.7643, 1.2069, 1.0725, 1.1806,
        1.7177, 0.8264, 1.7845, 0.8785, 2.9616, 1.4115, 1.2633, 0.6905, 2.9444,
        1.9455, 1.1601, 1.1050, 0.5677, 0.9099, 1.7178, 1.5817, 1.5655, 1.1383,
        1.0648, 1.4160, 1.1159, 1.0347, 1.3859, 0.9468, 4.7679, 1.9241, 1.1319,
        1.0931, 2.5152, 1.8753, 5.5718, 1.5047, 1.1005, 1.2212, 0.7743, 3.9201,
        0.9636, 1.2996, 0.9313, 2.0623, 5.4853, 1.4437, 1.3690, 1.5414, 2.6389,
        1.1970, 1.1930, 0.6232, 0.9847, 1.0218, 0.9658, 1.2121, 2.1061, 1.3851,
        1.8793, 2.1336])
net.mlp.net.2.batch_norm.num_batches_tracked tensor(28)
net.mlp.net.3.linear.weight tensor([[ 0.0174, -0.0996, -0.0537,  ...,  0.0502, -0.0449,  0.3410],
        [-0.1313, -0.1805, -0.0363,  ..., -0.0032, -0.0214, -0.2084],
        [-0.0891, -0.2262, -0.0962,  ...,  0.0190, -0.0481,  0.2168],
        ...,
        [ 0.0833,  0.0442,  0.0956,  ...,  0.1170,  0.2324,  0.2014],
        [-0.1349,  0.0697, -0.1279,  ..., -0.2103,  0.1415,  0.0295],
        [-0.0775,  0.0999,  0.2291,  ..., -0.0398,  0.1214,  0.1147]])
net.mlp.net.3.linear.bias tensor([ 0.0333, -0.0227,  0.0956, -0.0740, -0.0662,  0.0421,  0.0005,  0.1079,
        -0.1036, -0.0759,  0.0059, -0.0815,  0.0162,  0.0398, -0.0739, -0.0435,
        -0.1608, -0.0226, -0.0489, -0.0866, -0.0889,  0.0752, -0.0748,  0.0019,
         0.0176,  0.0466, -0.0097,  0.0127,  0.0341, -0.0755,  0.0990, -0.0052,
         0.0033, -0.0573, -0.0170,  0.0031,  0.1143,  0.0369, -0.0025, -0.0726,
         0.0278, -0.0055,  0.0683, -0.0759, -0.0286, -0.1143, -0.0970, -0.0129,
        -0.0750, -0.0353, -0.0005, -0.1011, -0.0037,  0.0283,  0.0612,  0.0243,
        -0.0852,  0.0271, -0.0892, -0.1202, -0.0061,  0.0889, -0.0488,  0.0853,
        -0.0400,  0.0073,  0.1064, -0.0939, -0.0375, -0.0239, -0.1634,  0.0681,
        -0.1034, -0.0037,  0.0161, -0.1177, -0.0098, -0.0348,  0.0738, -0.0168,
         0.0762, -0.0051,  0.0418, -0.0178,  0.0018,  0.0274, -0.0362, -0.0103,
        -0.0755, -0.0660,  0.0673, -0.0019,  0.0004, -0.0348,  0.0462,  0.0447,
         0.0744,  0.0727,  0.0040, -0.1163, -0.0945, -0.0151, -0.0206,  0.0443,
        -0.0224, -0.0203, -0.0528, -0.1291, -0.0721,  0.0685,  0.0092,  0.0509,
        -0.0513,  0.0282, -0.0218, -0.0289, -0.1042, -0.0665, -0.0047,  0.0433,
         0.0243, -0.0809, -0.1175, -0.0626,  0.0665,  0.0306, -0.0257, -0.0602])
net.mlp.net.3.batch_norm.weight tensor([0.9358, 0.8981, 0.9641, 0.9855, 0.9720, 0.9969, 0.9505, 0.9318, 0.9568,
        0.9798, 0.9237, 0.9356, 0.9224, 0.9509, 0.9360, 0.9716, 0.9135, 0.9550,
        0.9565, 0.9445, 0.9863, 0.9197, 0.9234, 0.9560, 0.9305, 0.9676, 0.9681,
        0.9307, 0.9550, 0.9403, 0.9359, 0.9447, 0.9800, 0.9661, 0.9875, 0.9471,
        0.8966, 0.9341, 0.9774, 0.9423, 0.9404, 0.9611, 0.9516, 0.9359, 0.9453,
        0.9545, 0.9346, 0.9328, 0.9622, 0.9494, 0.9715, 0.9717, 0.9735, 0.9708,
        0.9508, 0.9388, 0.9400, 0.9365, 0.9487, 0.9519, 0.9384, 0.9421, 0.9413,
        0.9606, 0.9600, 0.9731, 0.9411, 0.9235, 0.9443, 0.9617, 0.9613, 0.9515,
        0.9228, 0.9702, 0.9930, 0.9711, 0.9584, 0.9661, 0.9371, 0.9852, 0.9452,
        0.9640, 0.9577, 0.9117, 0.9721, 0.9699, 0.9657, 0.9673, 0.9594, 0.9649,
        0.9683, 0.9471, 0.9479, 0.9435, 1.0028, 0.9927, 0.9480, 0.9727, 0.9534,
        0.9685, 0.9856, 0.9494, 0.9697, 0.9219, 0.9666, 0.9407, 0.9532, 0.9496,
        0.9647, 0.9674, 0.9579, 0.9622, 0.9657, 0.9720, 0.9448, 0.9579, 0.9593,
        0.9236, 0.9453, 0.9693, 0.9845, 0.9432, 0.9017, 0.9412, 0.9160, 0.9312,
        0.9636, 0.9762])
net.mlp.net.3.batch_norm.bias tensor([ 0.0209,  0.0635,  0.0127, -0.0084, -0.0086,  0.0084, -0.0084,  0.0129,
         0.0189,  0.0099,  0.0126, -0.0219,  0.0542,  0.0006,  0.0320,  0.0063,
         0.0016,  0.0072, -0.0098,  0.0509, -0.0087,  0.0033, -0.0742, -0.0009,
        -0.0064,  0.0093,  0.0095,  0.0510,  0.0182,  0.0196,  0.0162,  0.0015,
         0.0086,  0.0018,  0.0063, -0.0231, -0.0670, -0.0709,  0.0061,  0.0169,
        -0.0680,  0.0106,  0.0149, -0.0060, -0.0345,  0.0426, -0.0338,  0.0017,
        -0.0132,  0.0068,  0.0124,  0.0140,  0.0160,  0.0040, -0.0323,  0.0040,
         0.0075, -0.0229,  0.0498,  0.0147, -0.0125,  0.0120,  0.0036,  0.0155,
        -0.0025, -0.0100,  0.0465,  0.0685,  0.0131, -0.0217,  0.0616, -0.0090,
        -0.0032,  0.0005,  0.0032, -0.0133, -0.0114,  0.0232, -0.0097,  0.0018,
         0.0133,  0.0077, -0.0183, -0.0659,  0.0056, -0.0147,  0.0028, -0.0144,
        -0.0102, -0.0017, -0.0036, -0.0088,  0.0253, -0.0135, -0.0065,  0.0081,
        -0.0023, -0.0134,  0.0092, -0.0125, -0.0098,  0.0136, -0.0040, -0.0127,
         0.0084, -0.0148, -0.0113,  0.0081,  0.0136,  0.0152,  0.0009,  0.0107,
        -0.0109,  0.0117,  0.0205, -0.0049, -0.0253,  0.0412,  0.0061, -0.0148,
         0.0005,  0.0128, -0.0098, -0.0052,  0.0479, -0.0161, -0.0090, -0.0033])
net.mlp.net.3.batch_norm.running_mean tensor([0.5422, 0.6684, 0.7018, 0.5692, 0.5823, 0.8112, 0.5325, 0.5455, 0.6698,
        0.5623, 0.5993, 0.6131, 0.5877, 0.8317, 0.4851, 0.7341, 0.4806, 0.5642,
        0.6933, 0.5646, 0.8864, 0.7599, 0.4914, 0.5997, 0.7320, 0.6758, 0.6977,
        0.4420, 0.5346, 0.5276, 0.8829, 0.5314, 0.5033, 0.4734, 0.8574, 0.4975,
        0.6402, 0.5358, 0.7262, 0.5341, 0.5911, 1.0881, 0.5690, 0.6770, 0.5768,
        0.5534, 0.5386, 0.5796, 0.8621, 0.6198, 0.6206, 0.5471, 0.6195, 1.0132,
        0.6060, 0.5921, 0.6529, 0.6145, 0.5453, 0.3471, 0.6711, 0.6225, 0.6595,
        0.7475, 0.7094, 0.7109, 1.0909, 0.6887, 0.6481, 0.5015, 0.3640, 0.7063,
        0.5650, 0.6997, 0.6216, 0.6072, 0.5116, 0.4120, 0.6042, 0.6412, 0.6867,
        0.7362, 0.7371, 0.5651, 0.8087, 0.5343, 0.6134, 0.4884, 0.7575, 0.5013,
        0.9625, 0.6966, 0.4641, 0.5618, 0.5811, 0.8251, 0.6992, 0.8462, 0.5326,
        0.4397, 0.8156, 0.6502, 0.7781, 0.5241, 0.6364, 0.5643, 0.6093, 0.6047,
        0.6082, 0.7662, 0.5653, 0.5417, 0.6586, 0.6531, 0.6622, 0.6989, 0.7194,
        0.5529, 0.6832, 0.5119, 0.6528, 0.5144, 0.6766, 0.6335, 0.4953, 0.8580,
        0.5212, 0.5663])
net.mlp.net.3.batch_norm.running_var tensor([1.2821, 1.5434, 1.1645, 1.3500, 1.4474, 1.6304, 0.5630, 0.6971, 2.0857,
        1.0357, 0.9682, 1.0973, 1.0201, 4.1814, 0.7921, 1.4524, 0.6730, 0.7454,
        1.5748, 1.1008, 2.6095, 2.1982, 1.4992, 1.1305, 3.9989, 1.5431, 1.3803,
        0.6038, 2.1265, 0.8693, 1.9621, 0.7265, 0.7942, 1.3950, 1.7826, 0.6246,
        1.0485, 1.6119, 1.1132, 1.2415, 2.6085, 2.2487, 1.0685, 1.9348, 3.2296,
        3.6275, 1.3429, 0.5699, 1.9452, 1.0524, 1.8873, 1.0810, 0.9795, 2.7979,
        0.6867, 1.4572, 0.9986, 0.9343, 1.8092, 0.6016, 1.9536, 0.7546, 1.5327,
        1.1320, 4.4459, 1.3453, 2.8860, 5.2113, 1.2718, 0.7476, 0.7818, 1.2523,
        0.6637, 1.2557, 0.9915, 4.0510, 0.7379, 0.5529, 0.7554, 2.7037, 1.9047,
        1.5621, 1.1864, 0.8417, 2.0292, 0.5623, 1.6085, 0.7620, 1.5078, 0.8151,
        1.9671, 1.3835, 0.5576, 0.9820, 0.8393, 1.3345, 3.1411, 1.5965, 0.7902,
        0.6880, 1.7692, 5.0261, 1.5765, 0.8767, 4.7624, 1.3266, 3.6499, 2.0368,
        1.1956, 3.6646, 1.4269, 1.4196, 1.6458, 1.3456, 1.8238, 1.4310, 1.2653,
        2.7631, 1.1541, 0.6556, 1.0761, 1.7326, 1.8602, 2.2631, 0.5285, 2.2492,
        0.6555, 0.8046])
net.mlp.net.3.batch_norm.num_batches_tracked tensor(28)
net.mlp.net.4.weight tensor([[ 8.6190e-03, -4.0252e-04, -3.0013e-02, -2.1099e-02,  2.2330e-03,
         -6.8058e-02,  2.3167e-03,  8.3424e-04, -4.4024e-02, -6.8125e-02,
          5.2213e-03, -4.3840e-03, -1.1787e-02, -1.4299e-02,  3.7827e-03,
          2.2275e-03,  4.1329e-03, -2.8923e-02,  4.5223e-02, -3.5684e-03,
          4.1686e-02,  1.3912e-02,  9.9399e-03, -1.7423e-04, -1.0386e-03,
         -1.4618e-02, -1.1584e-02, -2.2684e-02, -4.0039e-02, -2.9850e-03,
          7.2123e-03, -2.0412e-03, -5.3209e-02, -1.5607e-03, -5.1027e-02,
         -3.5803e-03,  1.0559e-02,  2.2962e-02,  1.2206e-02, -1.4586e-02,
          9.0678e-03, -4.0538e-02, -1.2322e-02,  9.1607e-03, -1.8640e-02,
          2.8493e-02, -4.8837e-03,  1.2125e-02,  3.8453e-02,  9.5954e-03,
         -4.4382e-02, -4.0661e-02,  1.2303e-03,  2.8959e-02,  1.4437e-02,
         -4.5027e-03,  3.8935e-03,  1.2869e-02,  1.4599e-02, -3.0351e-02,
          2.0244e-02, -3.7080e-03, -1.3575e-02, -3.0341e-02,  1.4980e-02,
          2.6999e-02, -4.3786e-04, -2.5322e-02,  1.8205e-02,  1.1149e-02,
         -1.8474e-02,  2.7879e-02, -1.3281e-02,  5.8836e-03, -3.4829e-02,
          5.5420e-02,  2.9389e-02, -9.6649e-03,  2.9858e-03, -2.1194e-02,
         -2.7086e-02, -4.5510e-02,  3.5883e-02,  1.9799e-02, -4.1215e-02,
          1.7856e-02,  9.7344e-03,  5.2164e-02,  3.1785e-02, -3.5666e-04,
          7.5970e-03,  1.9084e-02, -1.0848e-03,  9.7644e-03,  4.5946e-02,
         -7.0823e-02,  1.1358e-02,  1.4552e-02, -3.1491e-02,  4.2635e-02,
          6.4024e-02, -1.1724e-02,  4.6116e-02, -7.9698e-03, -4.6394e-02,
          6.6027e-03,  2.4231e-02, -7.3222e-03, -5.1535e-02, -3.9848e-02,
         -7.0092e-05, -2.5366e-02,  3.7924e-02, -6.3258e-02, -5.8717e-03,
         -2.5350e-02,  9.6160e-03,  1.3429e-02, -1.0718e-02,  2.6402e-03,
         -5.7037e-03, -3.8603e-02, -3.7000e-03,  7.8282e-03, -2.1549e-03,
          2.1197e-02,  3.2073e-02,  3.3110e-02]])
