Weights: 
net.embeddings.embeddings.0.weight tensor([[ 0.2815,  0.0480],
        [ 0.2019, -0.2144],
        [-0.2730,  0.3819],
        [-0.0577,  0.2003]])
net.embeddings.embeddings.1.weight tensor([[ 0.0836, -0.0312],
        [-0.3348, -0.1714],
        [-0.2593,  0.1755],
        [ 0.1477, -0.2021],
        [ 0.1532,  0.1682]])
net.embeddings.embeddings.2.weight tensor([[ 0.1412, -0.0561,  0.0921],
        [ 0.0728,  0.0158,  0.1551],
        [ 0.1203, -0.0667, -0.0220],
        [-0.1339,  0.1485, -0.2205],
        [ 0.1601,  0.0408, -0.1310],
        [-0.1579,  0.0452, -0.1813]])
net.embeddings.embeddings.3.weight tensor([[ 0.0469,  0.0466],
        [-0.1277,  0.0806],
        [ 0.1486,  0.3254],
        [ 0.4227,  0.3705]])
net.embeddings.embeddings.4.weight tensor([[-0.3310,  0.1231],
        [ 0.0592, -0.2562],
        [-0.4493,  0.0287],
        [-0.1496,  0.1134]])
net.mlp.net.0.linear.weight tensor([[-0.0888, -0.1599,  0.2635,  ...,  0.0056,  0.1097,  0.0044],
        [-0.2628,  0.1914,  0.0336,  ..., -0.2254,  0.1871, -0.4094],
        [ 0.3947, -0.0933,  0.1942,  ...,  0.0346,  0.0916,  0.0300],
        ...,
        [-0.1503, -0.1761, -0.0764,  ..., -0.1370, -0.1550, -0.0685],
        [ 0.1609,  0.2588, -0.0562,  ..., -0.0858,  0.2568, -0.1263],
        [-0.1924,  0.0233,  0.1258,  ...,  0.0775,  0.3667,  0.4856]])
net.mlp.net.0.linear.bias tensor([ 0.0703, -0.1003, -0.0800,  0.0422, -0.0356,  0.1368, -0.1023, -0.0188,
         0.0600, -0.0992,  0.0162,  0.1473,  0.0441, -0.0934, -0.0707, -0.0467,
        -0.0141, -0.0864, -0.0841, -0.0427, -0.0403,  0.0254,  0.0203,  0.0084,
        -0.0536,  0.0693,  0.0370, -0.1232,  0.0781, -0.0495,  0.1145,  0.0120,
        -0.0872,  0.0141,  0.0088,  0.1431,  0.0189,  0.0194, -0.0366,  0.0195,
         0.0706,  0.0409,  0.0781, -0.1043,  0.0732, -0.0363, -0.0452,  0.0665,
         0.0126,  0.0013, -0.0675, -0.1144,  0.0758, -0.0495,  0.0002, -0.0252,
        -0.0885,  0.1247,  0.0299,  0.0429,  0.1454,  0.1370, -0.1044,  0.1265])
net.mlp.net.0.batch_norm.weight tensor([0.5054, 0.5329, 0.4313, 0.4929, 0.4798, 0.5039, 0.4757, 0.4821, 0.5228,
        0.4692, 0.5904, 0.5012, 0.5224, 0.5116, 0.5316, 0.5185, 0.5362, 0.4821,
        0.5008, 0.5240, 0.4443, 0.4688, 0.6051, 0.5179, 0.5219, 0.4802, 0.6793,
        0.5242, 0.5533, 0.4935, 0.4946, 0.4821, 0.5215, 0.5019, 0.5622, 0.4680,
        0.5182, 0.4828, 0.4475, 0.5341, 0.4196, 0.4463, 0.4561, 0.5044, 0.5584,
        0.5960, 0.5151, 0.4987, 0.4872, 0.4479, 0.5049, 0.5245, 0.5042, 0.5432,
        0.5644, 0.6168, 0.5519, 0.5046, 0.5209, 0.4643, 0.4944, 0.5170, 0.4774,
        0.4765])
net.mlp.net.0.batch_norm.bias tensor([-0.0065,  0.0350, -0.0038,  0.0440,  0.0492,  0.0587,  0.0231,  0.0051,
        -0.0230, -0.1022, -0.0075, -0.0117, -0.0196,  0.0677, -0.0006,  0.0189,
        -0.0791, -0.0046,  0.0280, -0.0327, -0.0565, -0.0378, -0.0040,  0.0079,
         0.0012,  0.0239,  0.0516,  0.0005, -0.0212,  0.0281,  0.0215, -0.0049,
         0.0208,  0.0321, -0.0850, -0.0184, -0.0350, -0.0076,  0.0025, -0.0180,
         0.0111,  0.0202, -0.0248, -0.0352,  0.0602, -0.0464, -0.0221, -0.0610,
         0.0222,  0.0191,  0.0016, -0.0136, -0.0273,  0.0261, -0.0232,  0.0309,
         0.0366, -0.0009, -0.0041,  0.0255, -0.0120, -0.0314,  0.0198, -0.0142])
net.mlp.net.0.batch_norm.running_mean tensor([1.1874e-02, 1.5906e-01, 8.0232e-02, 3.6215e-01, 3.1782e-01, 3.4995e-02,
        3.9682e-05, 9.9648e-02, 5.2901e-02, 1.4407e-02, 5.3333e-01, 6.9175e-02,
        2.5064e-01, 2.8553e-04, 2.6297e-02, 7.0303e-03, 1.6481e-02, 3.5645e-02,
        7.0118e-02, 7.1523e-03, 1.9324e-01, 1.1054e-01, 1.0624e-02, 3.5190e-01,
        5.0187e-02, 3.2285e-01, 5.5016e-01, 1.3592e-03, 3.7359e-01, 1.5516e-02,
        4.9267e-02, 3.4172e-01, 1.0200e-02, 4.3370e-01, 3.3025e-01, 2.6002e-02,
        1.3482e-01, 9.1736e-02, 6.4855e-03, 6.8617e-02, 2.3220e-01, 3.3529e-03,
        2.1073e-01, 1.6857e-04, 3.3350e-01, 2.7605e-01, 1.1801e-02, 3.9315e-01,
        6.4757e-01, 2.7517e-01, 3.7971e-06, 1.9660e-01, 2.8894e-01, 2.3071e-01,
        2.8568e-01, 1.6293e-01, 1.4876e-01, 1.0576e-01, 5.2880e-02, 1.1334e-01,
        3.7854e-01, 1.6352e-01, 1.5346e-03, 1.3059e-01])
net.mlp.net.0.batch_norm.running_var tensor([0.0025, 0.1639, 0.0199, 0.0581, 0.0420, 0.0202, 0.0010, 0.0238, 0.0105,
        0.0034, 0.0672, 0.0095, 0.0410, 0.0010, 0.0216, 0.0025, 0.0117, 0.0227,
        0.0205, 0.0018, 0.0597, 0.0211, 0.0058, 0.0281, 0.0093, 0.0676, 0.0302,
        0.0012, 0.0491, 0.0048, 0.0105, 0.2727, 0.0029, 0.0328, 0.0875, 0.0066,
        0.0275, 0.0101, 0.0017, 0.0130, 0.0267, 0.0016, 0.0390, 0.0010, 0.0305,
        0.0533, 0.0097, 0.1114, 0.0763, 0.0659, 0.0010, 0.0451, 0.0831, 0.0574,
        0.0433, 0.0315, 0.0229, 0.0224, 0.0114, 0.0168, 0.0520, 0.0298, 0.0012,
        0.0266])
net.mlp.net.0.batch_norm.num_batches_tracked tensor(66)
net.mlp.net.1.linear.weight tensor([[ 0.0117,  0.1183, -0.0371,  ..., -0.1728,  0.0343, -0.1511],
        [-0.1340, -0.0559,  0.0987,  ...,  0.0010, -0.0928,  0.2102],
        [-0.1282, -0.0880,  0.0961,  ...,  0.0119,  0.0010,  0.1788],
        ...,
        [ 0.1609, -0.0544, -0.0194,  ..., -0.0440, -0.0586, -0.1162],
        [-0.0297,  0.0049, -0.0076,  ..., -0.1477,  0.0973, -0.1037],
        [ 0.0358,  0.0132, -0.0490,  ..., -0.1493,  0.1872, -0.1996]])
net.mlp.net.1.linear.bias tensor([-0.0684, -0.0157,  0.0327,  0.0994,  0.1004,  0.0284, -0.0070,  0.0161,
         0.0306, -0.0896,  0.0394, -0.0661,  0.0085,  0.0656,  0.0886,  0.0822,
         0.0884, -0.0120,  0.1293,  0.0413,  0.0374,  0.0255, -0.0010, -0.0451,
         0.0103, -0.0119,  0.0041, -0.0159, -0.1309,  0.0296,  0.0099,  0.0142,
         0.0847, -0.0184,  0.0883,  0.1688,  0.0467, -0.0360, -0.0382,  0.0443,
         0.0175,  0.0778,  0.0258,  0.0216,  0.0403,  0.0105, -0.0689,  0.0660,
        -0.0118,  0.0035, -0.0168, -0.0691,  0.0658, -0.0156,  0.0818,  0.0064,
        -0.0049,  0.0403,  0.0642,  0.0196,  0.0748, -0.1107, -0.0240, -0.0121])
net.mlp.net.1.batch_norm.weight tensor([0.5089, 0.4727, 0.4695, 0.5287, 0.5226, 0.4741, 0.4768, 0.5258, 0.5330,
        0.4506, 0.5232, 0.5379, 0.5419, 0.4775, 0.6043, 0.5984, 0.4942, 0.5330,
        0.6007, 0.6003, 0.4843, 0.5556, 0.4509, 0.5334, 0.4441, 0.4394, 0.5253,
        0.4885, 0.4675, 0.5457, 0.6095, 0.4554, 0.4439, 0.4866, 0.5796, 0.5459,
        0.5727, 0.5060, 0.5270, 0.5260, 0.4884, 0.5147, 0.4786, 0.4987, 0.5434,
        0.5157, 0.4972, 0.4711, 0.4815, 0.5674, 0.4808, 0.4899, 0.5430, 0.5166,
        0.5671, 0.5326, 0.4836, 0.4721, 0.5540, 0.5347, 0.5981, 0.4162, 0.5313,
        0.4231])
net.mlp.net.1.batch_norm.bias tensor([-0.0156, -0.0013, -0.0550, -0.0032, -0.0047,  0.0025, -0.0363,  0.0321,
         0.0373,  0.0225, -0.0247, -0.0415, -0.0069, -0.0180,  0.0511, -0.0462,
         0.0893, -0.0205,  0.0029, -0.0299, -0.0112, -0.0250, -0.0024,  0.0185,
         0.0134,  0.0581,  0.0497, -0.0008, -0.0152, -0.0726, -0.0128,  0.0509,
         0.0304, -0.0327,  0.0111, -0.0414,  0.0189, -0.0285, -0.0082, -0.0354,
        -0.0167,  0.0317,  0.0366, -0.0079, -0.0125,  0.0142,  0.0437, -0.0067,
        -0.0261, -0.0705, -0.0024,  0.0044,  0.0109, -0.0125,  0.0061, -0.0600,
         0.0357,  0.0029, -0.0401,  0.0037,  0.0294, -0.0516,  0.0107,  0.0375])
net.mlp.net.1.batch_norm.running_mean tensor([0.1910, 0.1972, 0.2370, 0.2460, 0.2067, 0.3075, 0.1997, 0.2535, 0.2313,
        0.1441, 0.2560, 0.1855, 0.2418, 0.2171, 0.3117, 0.2418, 0.3122, 0.2145,
        0.3846, 0.3761, 0.2419, 0.2325, 0.2550, 0.1519, 0.2495, 0.1937, 0.1950,
        0.2695, 0.1279, 0.1659, 0.2564, 0.1504, 0.1888, 0.2260, 0.3009, 0.3321,
        0.2719, 0.1933, 0.1866, 0.2913, 0.2671, 0.1760, 0.2216, 0.2853, 0.3189,
        0.2452, 0.1722, 0.2534, 0.1775, 0.2164, 0.2246, 0.1468, 0.3415, 0.3042,
        0.2860, 0.1791, 0.2155, 0.2344, 0.3190, 0.2385, 0.3749, 0.1234, 0.2592,
        0.1853])
net.mlp.net.1.batch_norm.running_var tensor([0.1400, 0.1273, 0.1001, 0.1164, 0.0759, 0.2049, 0.0879, 0.1149, 0.1244,
        0.0861, 0.1343, 0.1381, 0.2815, 0.0938, 0.1515, 0.2224, 0.1458, 0.1472,
        0.1837, 0.2375, 0.1618, 0.2357, 0.1625, 0.1235, 0.1313, 0.1066, 0.0892,
        0.1999, 0.0606, 0.1121, 0.1312, 0.1327, 0.0975, 0.1343, 0.2380, 0.1731,
        0.1156, 0.0823, 0.0871, 0.1639, 0.1365, 0.0986, 0.1038, 0.1655, 0.1987,
        0.1639, 0.0706, 0.1161, 0.1178, 0.1269, 0.1216, 0.2245, 0.1726, 0.2215,
        0.1781, 0.1104, 0.0933, 0.1373, 0.1504, 0.1403, 0.2548, 0.0534, 0.1478,
        0.0932])
net.mlp.net.1.batch_norm.num_batches_tracked tensor(66)
net.mlp.net.2.linear.weight tensor([[ 0.1469,  0.0617,  0.0384,  ...,  0.0244,  0.1130, -0.0636],
        [ 0.0390, -0.0422, -0.0515,  ...,  0.0652,  0.1253,  0.0509],
        [-0.0711,  0.0914, -0.1047,  ...,  0.0021, -0.0885, -0.0069],
        ...,
        [ 0.0767,  0.0710, -0.0243,  ...,  0.0253,  0.1249,  0.0259],
        [ 0.0175,  0.1147, -0.1403,  ..., -0.0187, -0.0928, -0.0584],
        [-0.1107, -0.1906,  0.0920,  ..., -0.0226, -0.0165,  0.0520]])
net.mlp.net.2.linear.bias tensor([ 0.0487, -0.0173, -0.0283,  0.0674,  0.0145, -0.0135, -0.0818,  0.0349,
         0.0758, -0.0005, -0.0550,  0.0116,  0.0865,  0.0418, -0.0492, -0.0347,
         0.0599,  0.0362,  0.1042,  0.0407,  0.0487, -0.0195, -0.0026,  0.0356,
         0.0090, -0.0195, -0.0022,  0.0447, -0.0136, -0.0161,  0.0484,  0.0634,
        -0.0197, -0.0088,  0.0321, -0.0721, -0.0250,  0.0017,  0.1001,  0.0374,
         0.0412,  0.0318, -0.0204, -0.0754,  0.0245, -0.0393,  0.1101,  0.0103,
         0.1157,  0.0206, -0.0332,  0.0578,  0.0832, -0.0509,  0.0088,  0.0075,
        -0.0241,  0.0649, -0.0357, -0.0106,  0.0140, -0.0056, -0.0427,  0.0504])
net.mlp.net.2.batch_norm.weight tensor([0.4840, 0.4932, 0.5412, 0.5277, 0.5199, 0.5154, 0.4840, 0.5614, 0.4790,
        0.5687, 0.4614, 0.4940, 0.5621, 0.4321, 0.5862, 0.5061, 0.5090, 0.5683,
        0.5045, 0.5073, 0.6695, 0.4709, 0.5020, 0.5536, 0.4541, 0.4793, 0.5016,
        0.4660, 0.5242, 0.5388, 0.5265, 0.5244, 0.5602, 0.4756, 0.5667, 0.5273,
        0.5248, 0.4686, 0.4936, 0.4266, 0.5395, 0.4665, 0.5513, 0.5766, 0.4430,
        0.4849, 0.5319, 0.4989, 0.4998, 0.5030, 0.5085, 0.5096, 0.4696, 0.5732,
        0.4714, 0.6049, 0.5467, 0.4658, 0.4529, 0.5262, 0.5200, 0.4290, 0.4960,
        0.5300])
net.mlp.net.2.batch_norm.bias tensor([ 0.0331,  0.0049, -0.0418,  0.0467, -0.0088, -0.0136, -0.0313,  0.0349,
        -0.0071,  0.0227,  0.0315, -0.1012, -0.0711, -0.0088,  0.0312,  0.0331,
        -0.0217,  0.0380,  0.0189,  0.0063, -0.0137,  0.1200,  0.0242,  0.0511,
         0.0181, -0.0454, -0.0057, -0.0169,  0.0340, -0.0245, -0.0395, -0.0933,
         0.0055, -0.0060,  0.0368, -0.0343,  0.0250,  0.0052, -0.0024,  0.0222,
         0.0248, -0.0109,  0.0096,  0.0145, -0.0247, -0.0361, -0.0638, -0.0177,
        -0.0265, -0.0119, -0.0111, -0.0423,  0.0063,  0.0191, -0.0154,  0.0095,
        -0.0604,  0.0675,  0.0154,  0.0023, -0.0226,  0.0273, -0.0112,  0.0527])
net.mlp.net.2.batch_norm.running_mean tensor([0.2369, 0.2298, 0.2143, 0.4312, 0.1913, 0.1551, 0.2286, 0.3464, 0.2905,
        0.3735, 0.1775, 0.1843, 0.4225, 0.2182, 0.3777, 0.2116, 0.2569, 0.4128,
        0.3365, 0.2626, 0.4488, 0.2721, 0.2251, 0.3667, 0.1911, 0.1990, 0.2777,
        0.1870, 0.3925, 0.3229, 0.3736, 0.2841, 0.2211, 0.2047, 0.2754, 0.1618,
        0.2558, 0.1860, 0.3046, 0.3369, 0.3093, 0.1982, 0.2932, 0.4374, 0.2554,
        0.2674, 0.3407, 0.2472, 0.3843, 0.2483, 0.2407, 0.2587, 0.2044, 0.1809,
        0.2714, 0.5115, 0.2305, 0.2627, 0.2374, 0.1965, 0.3042, 0.2334, 0.1988,
        0.2817])
net.mlp.net.2.batch_norm.running_var tensor([0.1864, 0.1601, 0.1088, 0.3793, 0.0957, 0.0889, 0.3341, 0.2322, 0.1098,
        0.3355, 0.1369, 0.1293, 0.3861, 0.1626, 0.3238, 0.1090, 0.0988, 0.4109,
        0.2615, 0.1257, 0.3657, 0.1296, 0.1341, 0.2520, 0.1188, 0.1073, 0.2260,
        0.1120, 0.3588, 0.1785, 0.2839, 0.1861, 0.1278, 0.1593, 0.2213, 0.0907,
        0.1664, 0.0917, 0.1136, 0.1931, 0.2730, 0.0807, 0.2260, 0.5211, 0.1651,
        0.2089, 0.1507, 0.1673, 0.2728, 0.1333, 0.1305, 0.1236, 0.1208, 0.1165,
        0.2172, 0.5692, 0.0994, 0.2488, 0.2047, 0.1394, 0.2088, 0.1210, 0.1353,
        0.2056])
net.mlp.net.2.batch_norm.num_batches_tracked tensor(66)
net.mlp.net.3.linear.weight tensor([[-0.2360,  0.0210, -0.0164,  ...,  0.1248, -0.0137,  0.2112],
        [ 0.0528,  0.1487,  0.0346,  ..., -0.0737, -0.1274,  0.0033],
        [ 0.0196, -0.0318, -0.0183,  ...,  0.0151,  0.0726,  0.1282],
        ...,
        [-0.0191, -0.0644, -0.0145,  ..., -0.0659,  0.1158,  0.0086],
        [ 0.0803,  0.0020, -0.0167,  ...,  0.0213, -0.0300,  0.1605],
        [ 0.0249,  0.0054,  0.0460,  ..., -0.0639,  0.0556,  0.1365]])
net.mlp.net.3.linear.bias tensor([-0.0138, -0.0325,  0.1192,  0.0293,  0.1041,  0.0957,  0.1042,  0.0934,
         0.0009, -0.0262,  0.0333, -0.0604,  0.1181,  0.0191, -0.0282,  0.0438,
         0.0648,  0.0666, -0.0414, -0.0490,  0.0479, -0.0431, -0.0201,  0.0770,
        -0.0355,  0.1279,  0.0188, -0.0295,  0.0121,  0.1026, -0.0724,  0.0874,
         0.0710, -0.0045, -0.0872,  0.0166, -0.0253,  0.0578,  0.0517,  0.0745,
        -0.0314, -0.0264,  0.0472,  0.1038,  0.0693,  0.0284,  0.0237,  0.1415,
        -0.0322,  0.0339,  0.0825,  0.0741, -0.0248,  0.0508, -0.0553,  0.0132,
         0.0143,  0.0099,  0.0445,  0.0730,  0.0357,  0.0747,  0.0502, -0.0310])
net.mlp.net.3.batch_norm.weight tensor([0.4819, 0.4846, 0.4764, 0.4857, 0.4829, 0.4838, 0.5342, 0.5098, 0.4615,
        0.4508, 0.4495, 0.4961, 0.5615, 0.4730, 0.4893, 0.4631, 0.5036, 0.5061,
        0.4998, 0.4548, 0.5195, 0.4394, 0.5170, 0.4688, 0.5262, 0.4666, 0.5050,
        0.4650, 0.4686, 0.4938, 0.4574, 0.5741, 0.4733, 0.5189, 0.4750, 0.4950,
        0.4890, 0.5197, 0.5441, 0.4864, 0.4808, 0.4846, 0.4951, 0.5227, 0.4687,
        0.4497, 0.4910, 0.5652, 0.4603, 0.4997, 0.4837, 0.5129, 0.5612, 0.4751,
        0.4780, 0.4639, 0.4708, 0.5092, 0.4981, 0.4672, 0.5000, 0.5110, 0.5230,
        0.4409])
net.mlp.net.3.batch_norm.bias tensor([ 4.8429e-02, -2.1039e-02,  2.3935e-02,  5.2263e-02,  2.7031e-02,
        -1.5895e-02, -7.4734e-02, -1.7277e-02,  9.2036e-03, -1.5749e-02,
        -5.7365e-03, -4.1082e-02, -3.4763e-02, -8.2844e-05, -2.5823e-02,
        -1.4260e-02, -3.2413e-03, -3.7197e-02,  4.0412e-02, -6.1915e-03,
        -3.7637e-02, -3.8036e-02,  1.2369e-02, -4.7936e-02, -6.5556e-02,
        -5.1470e-03, -4.4930e-02,  5.1114e-02,  4.5878e-02, -1.8384e-02,
        -2.9456e-02, -2.4413e-02, -2.7902e-02,  1.0077e-02,  8.3058e-03,
         3.0179e-02,  1.3243e-02,  3.7715e-02, -1.1515e-02, -3.9834e-02,
        -2.2971e-02,  4.6084e-02,  1.2368e-02,  6.9930e-02,  2.1574e-03,
        -2.6355e-02, -1.8432e-02,  5.7097e-02, -2.1909e-02, -2.6480e-02,
         3.5788e-02, -2.9865e-02, -2.0393e-02, -8.9153e-03, -1.9732e-02,
        -1.2795e-02, -1.3139e-02, -1.4054e-02,  9.0518e-03,  7.5883e-03,
         4.9610e-03, -3.4927e-02,  2.7226e-02,  3.5257e-03])
net.mlp.net.3.batch_norm.running_mean tensor([0.2921, 0.2457, 0.3523, 0.2608, 0.3030, 0.3778, 0.4222, 0.4164, 0.2765,
        0.1534, 0.3388, 0.1642, 0.4839, 0.2478, 0.2858, 0.1995, 0.3363, 0.3294,
        0.2612, 0.2058, 0.2613, 0.1880, 0.2183, 0.2139, 0.2669, 0.3573, 0.3699,
        0.3131, 0.2226, 0.4321, 0.1577, 0.3257, 0.3727, 0.2838, 0.1798, 0.2722,
        0.2040, 0.4910, 0.3280, 0.2575, 0.2750, 0.2132, 0.3252, 0.3018, 0.2373,
        0.2475, 0.3194, 0.4749, 0.1505, 0.4192, 0.3351, 0.3794, 0.2771, 0.3050,
        0.2830, 0.2122, 0.2456, 0.3299, 0.2495, 0.2436, 0.2284, 0.4125, 0.4388,
        0.1628])
net.mlp.net.3.batch_norm.running_var tensor([0.1299, 0.2418, 0.2928, 0.1988, 0.2628, 0.2370, 0.4510, 0.2854, 0.1740,
        0.0681, 0.2634, 0.0537, 0.3468, 0.2480, 0.2509, 0.1190, 0.2627, 0.2139,
        0.2529, 0.1172, 0.1776, 0.1732, 0.1258, 0.0768, 0.2018, 0.2203, 0.3322,
        0.1861, 0.1734, 0.3738, 0.1306, 0.1721, 0.3453, 0.2833, 0.1066, 0.2864,
        0.1351, 0.4966, 0.2701, 0.2234, 0.1398, 0.1803, 0.3501, 0.1591, 0.0892,
        0.1436, 0.1688, 0.2894, 0.0768, 0.5173, 0.1927, 0.2497, 0.2366, 0.2464,
        0.2439, 0.1551, 0.2774, 0.2903, 0.2004, 0.1444, 0.0775, 0.3081, 0.3498,
        0.0770])
net.mlp.net.3.batch_norm.num_batches_tracked tensor(66)
net.mlp.net.4.weight tensor([[ 0.0388,  0.0379,  0.0384, -0.0465,  0.0112, -0.0211,  0.0631, -0.0494,
         -0.0206,  0.0132, -0.0278, -0.0285,  0.0604,  0.0225,  0.0271, -0.0190,
          0.0363, -0.0442,  0.0545,  0.0110,  0.0748,  0.0032, -0.0214,  0.0114,
         -0.0425,  0.0303, -0.0522, -0.0194, -0.0303,  0.0584,  0.0055,  0.0899,
          0.0305,  0.0614,  0.0238,  0.0278, -0.0079, -0.0552, -0.0471, -0.0347,
          0.0375,  0.0324, -0.0235, -0.0371, -0.0002, -0.0009, -0.0121, -0.0814,
         -0.0073,  0.0483, -0.0260, -0.0590, -0.0756, -0.0379,  0.0347,  0.0192,
          0.0086, -0.0402, -0.0330,  0.0261,  0.0393, -0.0612, -0.0409,  0.0135]])
