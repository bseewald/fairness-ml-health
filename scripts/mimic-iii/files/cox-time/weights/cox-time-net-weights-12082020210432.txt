Weights: 
net.embeddings.embeddings.0.weight tensor([[ 0.0093, -0.0742],
        [-0.0249, -0.0200],
        [-0.0211,  0.0483],
        [ 0.0992, -0.0107]])
net.embeddings.embeddings.1.weight tensor([[-0.0097,  0.0269],
        [-0.0405, -0.0287],
        [ 0.0057,  0.0379],
        [ 0.0293,  0.0686],
        [ 0.0618,  0.0397]])
net.embeddings.embeddings.2.weight tensor([[-0.0086, -0.0318,  0.0074],
        [ 0.0224, -0.0330, -0.0724],
        [-0.0567, -0.0161, -0.0541],
        [ 0.0128,  0.0319, -0.0660],
        [-0.0003,  0.0334, -0.0321],
        [-0.0124, -0.0116, -0.0054]])
net.embeddings.embeddings.3.weight tensor([[ 0.0447,  0.0065],
        [-0.0766, -0.1335],
        [ 0.0381, -0.0246],
        [ 0.1260,  0.1043]])
net.embeddings.embeddings.4.weight tensor([[-0.0614,  0.0544],
        [ 0.1054, -0.1109],
        [-0.0970, -0.0164],
        [-0.0099,  0.0023]])
net.mlp.net.0.linear.weight tensor([[-0.0377,  0.0106,  0.0091,  ..., -0.0979,  0.0434, -0.0709],
        [ 0.0295,  0.0305,  0.0158,  ...,  0.0366, -0.0234, -0.0153],
        [-0.0319, -0.0463, -0.0564,  ..., -0.0089,  0.0326, -0.0500],
        ...,
        [-0.0358, -0.0753,  0.0252,  ..., -0.0024,  0.0247,  0.0249],
        [ 0.0033,  0.0387, -0.0313,  ...,  0.0192, -0.0389, -0.0045],
        [ 0.0231,  0.0224,  0.0178,  ...,  0.1126, -0.0417,  0.0249]])
net.mlp.net.0.linear.bias tensor([ 3.2385e-03,  2.6158e-02,  1.4173e-02, -3.1005e-02,  2.7083e-04,
        -1.2098e-03, -2.3005e-02,  1.5661e-02,  9.8389e-03, -3.5264e-02,
        -4.3669e-02, -1.5003e-02,  1.7519e-03, -3.5525e-03, -9.5808e-03,
        -4.4107e-02, -1.2674e-02,  3.6216e-02, -1.2070e-02, -1.4409e-02,
        -2.3840e-02,  4.1968e-03, -1.6841e-03, -2.4042e-02, -6.1305e-04,
         4.2992e-03, -9.6206e-03,  2.8962e-03,  2.6503e-02,  1.3473e-02,
        -1.2941e-02, -1.8291e-02,  1.6362e-02, -1.2871e-03, -1.1208e-03,
         2.1320e-02,  7.8043e-05,  4.9174e-04,  1.3982e-02,  1.0465e-02,
         1.5964e-02, -1.8558e-02,  1.0942e-02,  3.4574e-02,  2.9630e-03,
        -5.4132e-03,  2.2410e-02,  1.8545e-03,  2.6300e-04,  2.8481e-02,
         1.8278e-02,  1.1412e-02,  9.5177e-03, -1.0722e-02, -4.9806e-03,
        -4.0587e-03,  5.2433e-03,  2.6636e-02, -6.0581e-03, -6.6853e-03,
         1.4287e-02,  1.4892e-02, -4.2057e-02, -1.9298e-02])
net.mlp.net.0.batch_norm.weight tensor([0.1279, 0.1004, 0.1068, 0.1189, 0.1339, 0.1180, 0.1118, 0.1394, 0.1112,
        0.1092, 0.1092, 0.1117, 0.1103, 0.1359, 0.1674, 0.1203, 0.1231, 0.1164,
        0.0998, 0.1026, 0.1398, 0.1272, 0.1138, 0.1219, 0.1053, 0.0833, 0.0984,
        0.1061, 0.1096, 0.0937, 0.1111, 0.0858, 0.1076, 0.1071, 0.1089, 0.1137,
        0.1166, 0.1079, 0.1577, 0.1196, 0.0934, 0.1213, 0.1223, 0.1061, 0.1211,
        0.1086, 0.1118, 0.1083, 0.1299, 0.1176, 0.1400, 0.1483, 0.0961, 0.0976,
        0.1093, 0.1300, 0.1215, 0.0974, 0.1094, 0.1084, 0.1199, 0.1075, 0.1237,
        0.1158])
net.mlp.net.0.batch_norm.bias tensor([ 1.6546e-03, -9.3764e-03,  1.6694e-02, -1.3500e-03,  4.9473e-03,
         5.2979e-03,  1.1227e-02, -5.6244e-03,  1.4844e-02,  1.4211e-03,
        -2.0071e-03,  1.5373e-02, -6.3321e-03, -1.3583e-02,  2.8403e-03,
         3.2613e-03, -5.9992e-03, -1.1919e-02,  1.3830e-02,  9.1485e-03,
         6.3657e-03, -3.1868e-04, -1.8333e-02,  5.6843e-03, -8.9850e-03,
         2.4758e-02,  1.0202e-02, -1.0279e-02, -8.1786e-03,  1.0752e-03,
         1.5501e-02,  4.5041e-03,  9.0684e-03,  1.7763e-03,  7.1571e-03,
         2.9212e-03,  1.3960e-02,  1.0705e-02, -1.6491e-02, -1.7809e-03,
        -1.2473e-03, -2.8578e-02, -1.4169e-02,  5.8290e-03, -6.3157e-03,
         8.8543e-03,  1.7379e-02, -2.0245e-03, -5.1860e-03,  1.1773e-02,
        -3.8406e-04,  3.1222e-03,  2.3632e-02,  5.6867e-03, -1.4867e-02,
        -1.6761e-02,  3.3992e-03, -3.8292e-03, -2.2679e-03,  3.5516e-05,
         1.6721e-03,  8.0443e-03, -1.6488e-03, -2.5927e-03])
net.mlp.net.0.batch_norm.running_mean tensor([8.9018e-04, 3.3801e-02, 3.2104e-03, 1.8187e-02, 1.4006e-02, 1.8549e-02,
        1.0115e-07, 2.8468e-02, 3.5131e-02, 4.6745e-06, 2.6078e-04, 1.2947e-02,
        4.9108e-02, 7.3584e-04, 6.7118e-03, 2.6021e-03, 2.6913e-03, 6.8960e-02,
        2.0047e-04, 2.2655e-02, 7.1130e-03, 2.9219e-02, 8.5769e-03, 8.7702e-03,
        2.9102e-02, 4.0367e-02, 1.0382e-01, 5.4592e-02, 2.7376e-04, 4.1568e-02,
        2.0940e-02, 6.7941e-03, 3.0960e-03, 2.2878e-02, 1.3024e-03, 8.4601e-02,
        3.1792e-02, 4.6518e-02, 8.9186e-03, 1.6548e-02, 1.6731e-03, 5.0579e-02,
        4.6896e-02, 1.1860e-01, 5.1749e-02, 1.6307e-02, 4.9284e-02, 5.5703e-03,
        7.7120e-05, 1.3545e-02, 1.4809e-03, 8.3106e-03, 1.2927e-02, 1.5141e-02,
        1.5209e-02, 2.4430e-02, 2.7594e-02, 5.8939e-03, 2.0898e-03, 2.4064e-02,
        1.6702e-02, 2.3949e-02, 3.5530e-03, 3.2820e-02])
net.mlp.net.0.batch_norm.running_var tensor([4.2881e-05, 8.9017e-03, 5.9736e-04, 2.1908e-03, 2.2854e-04, 2.4600e-03,
        5.3128e-10, 3.0581e-04, 1.3838e-03, 6.0082e-08, 6.5684e-06, 2.7499e-04,
        2.1390e-03, 2.4466e-05, 1.8558e-04, 2.5570e-04, 4.1404e-04, 2.9732e-03,
        4.0099e-06, 8.6906e-04, 1.5419e-04, 3.3696e-03, 2.8684e-04, 1.9879e-03,
        6.1632e-04, 1.8061e-03, 1.9368e-03, 1.7280e-03, 7.9973e-06, 1.3411e-03,
        3.9426e-03, 2.5562e-04, 2.0467e-04, 1.2062e-03, 2.3487e-05, 1.8763e-03,
        9.8136e-04, 1.4015e-03, 1.7951e-04, 9.7408e-04, 6.7041e-05, 1.3654e-03,
        1.0594e-02, 2.4444e-03, 1.4389e-03, 3.7865e-03, 1.6531e-03, 1.6501e-04,
        3.1581e-06, 3.1153e-03, 5.4400e-05, 1.3864e-04, 1.4724e-03, 6.4546e-04,
        3.0499e-03, 4.4497e-04, 2.8819e-03, 3.2327e-04, 8.7718e-05, 1.0127e-03,
        4.1216e-04, 2.5504e-03, 2.5879e-04, 1.0690e-03])
net.mlp.net.0.batch_norm.num_batches_tracked tensor(395)
net.mlp.net.1.linear.weight tensor([[ 0.0181, -0.0124, -0.0199,  ..., -0.0057, -0.0017, -0.0069],
        [ 0.0138,  0.0131,  0.0037,  ..., -0.0090, -0.0201, -0.0448],
        [ 0.0317, -0.0198,  0.0114,  ..., -0.0116, -0.0336, -0.0079],
        ...,
        [ 0.0079,  0.0013, -0.0206,  ..., -0.0052, -0.0020,  0.0487],
        [ 0.0191,  0.0069,  0.0245,  ...,  0.0144,  0.0152,  0.0421],
        [ 0.0085,  0.0070,  0.0060,  ..., -0.0014, -0.0127, -0.0124]])
net.mlp.net.1.linear.bias tensor([-0.0149, -0.0058, -0.0052, -0.0063, -0.0086,  0.0255,  0.0032,  0.0095,
         0.0094,  0.0307,  0.0148, -0.0100,  0.0115,  0.0104, -0.0261,  0.0226,
         0.0419,  0.0138,  0.0166, -0.0020,  0.0337,  0.0033,  0.0189,  0.0115,
        -0.0081, -0.0078,  0.0313,  0.0079,  0.0053, -0.0107, -0.0109, -0.0125,
        -0.0071,  0.0033,  0.0089,  0.0249,  0.0105,  0.0184, -0.0084,  0.0033,
        -0.0150, -0.0105, -0.0128,  0.0062,  0.0164,  0.0188, -0.0026,  0.0119,
         0.0051,  0.0170,  0.0036,  0.0154,  0.0149, -0.0050,  0.0051, -0.0062,
         0.0086, -0.0012,  0.0054,  0.0215,  0.0108, -0.0241,  0.0165,  0.0268])
net.mlp.net.1.batch_norm.weight tensor([0.1123, 0.1193, 0.1263, 0.1127, 0.1138, 0.1252, 0.0974, 0.1162, 0.1213,
        0.1471, 0.1200, 0.1176, 0.1346, 0.1340, 0.1168, 0.1150, 0.1249, 0.1219,
        0.1076, 0.1224, 0.1279, 0.1329, 0.0960, 0.0995, 0.1362, 0.1365, 0.1214,
        0.1053, 0.1341, 0.1056, 0.1017, 0.1059, 0.1003, 0.1350, 0.1095, 0.1062,
        0.1320, 0.1308, 0.1138, 0.1141, 0.1124, 0.1105, 0.1103, 0.1113, 0.1023,
        0.1273, 0.0919, 0.1039, 0.1162, 0.0980, 0.1130, 0.1044, 0.1256, 0.1156,
        0.1000, 0.1110, 0.1240, 0.1259, 0.1097, 0.1094, 0.1185, 0.1246, 0.1179,
        0.1212])
net.mlp.net.1.batch_norm.bias tensor([ 0.0059, -0.0024,  0.0072,  0.0156, -0.0086, -0.0122, -0.0078,  0.0055,
         0.0069,  0.0126, -0.0044,  0.0012,  0.0038,  0.0046, -0.0055,  0.0107,
         0.0111,  0.0117, -0.0027,  0.0062,  0.0064, -0.0120,  0.0087,  0.0007,
         0.0076,  0.0074, -0.0008,  0.0197,  0.0029,  0.0107,  0.0056, -0.0011,
        -0.0012,  0.0034, -0.0047, -0.0080, -0.0113, -0.0074,  0.0096,  0.0002,
         0.0116,  0.0023, -0.0132,  0.0112,  0.0035, -0.0133,  0.0234, -0.0090,
        -0.0097,  0.0071,  0.0067, -0.0020,  0.0033,  0.0016, -0.0019, -0.0219,
        -0.0005, -0.0003, -0.0095,  0.0199,  0.0169, -0.0100, -0.0009,  0.0014])
net.mlp.net.1.batch_norm.running_mean tensor([0.0068, 0.0119, 0.0169, 0.0089, 0.0090, 0.0301, 0.0134, 0.0205, 0.0237,
        0.0378, 0.0204, 0.0082, 0.0150, 0.0222, 0.0045, 0.0328, 0.0467, 0.0256,
        0.0211, 0.0152, 0.0410, 0.0178, 0.0222, 0.0217, 0.0130, 0.0137, 0.0389,
        0.0174, 0.0144, 0.0092, 0.0059, 0.0053, 0.0096, 0.0212, 0.0145, 0.0284,
        0.0230, 0.0299, 0.0127, 0.0173, 0.0052, 0.0066, 0.0091, 0.0146, 0.0246,
        0.0257, 0.0116, 0.0225, 0.0168, 0.0284, 0.0112, 0.0237, 0.0271, 0.0162,
        0.0168, 0.0088, 0.0220, 0.0125, 0.0207, 0.0278, 0.0233, 0.0057, 0.0245,
        0.0373])
net.mlp.net.1.batch_norm.running_var tensor([0.0003, 0.0005, 0.0008, 0.0005, 0.0005, 0.0006, 0.0005, 0.0011, 0.0014,
        0.0010, 0.0011, 0.0004, 0.0006, 0.0010, 0.0003, 0.0013, 0.0017, 0.0008,
        0.0006, 0.0007, 0.0011, 0.0008, 0.0009, 0.0010, 0.0009, 0.0008, 0.0010,
        0.0009, 0.0004, 0.0006, 0.0002, 0.0002, 0.0005, 0.0012, 0.0004, 0.0010,
        0.0008, 0.0015, 0.0005, 0.0005, 0.0002, 0.0003, 0.0004, 0.0008, 0.0006,
        0.0006, 0.0005, 0.0005, 0.0006, 0.0009, 0.0005, 0.0005, 0.0011, 0.0012,
        0.0004, 0.0002, 0.0006, 0.0003, 0.0006, 0.0011, 0.0012, 0.0004, 0.0008,
        0.0015])
net.mlp.net.1.batch_norm.num_batches_tracked tensor(395)
net.mlp.net.2.linear.weight tensor([[-0.0219, -0.0285, -0.0069,  ..., -0.0187,  0.0003,  0.0172],
        [ 0.0130, -0.0126,  0.0258,  ...,  0.0025, -0.0170,  0.0293],
        [ 0.0029, -0.0200,  0.0170,  ...,  0.0196, -0.0164,  0.0169],
        ...,
        [-0.0002, -0.0040, -0.0195,  ...,  0.0191, -0.0092, -0.0075],
        [-0.0040,  0.0092, -0.0062,  ..., -0.0174,  0.0403, -0.0034],
        [ 0.0212,  0.0002, -0.0125,  ..., -0.0471,  0.0046,  0.0115]])
net.mlp.net.2.linear.bias tensor([ 0.0247,  0.0192,  0.0342,  0.0132, -0.0022,  0.0096,  0.0305,  0.0114,
         0.0185,  0.0214,  0.0359, -0.0052,  0.0029,  0.0198,  0.0193,  0.0529,
         0.0251, -0.0073,  0.0162, -0.0037,  0.0117, -0.0004,  0.0069, -0.0130,
         0.0266,  0.0051,  0.0051,  0.0150,  0.0092,  0.0100,  0.0061,  0.0327,
         0.0023,  0.0116,  0.0229,  0.0098,  0.0050,  0.0022, -0.0010,  0.0158,
         0.0067, -0.0130,  0.0271,  0.0130, -0.0058,  0.0130,  0.0059,  0.0243,
         0.0040,  0.0126,  0.0285,  0.0039,  0.0232,  0.0195,  0.0101,  0.0062,
        -0.0134,  0.0187,  0.0305,  0.0274,  0.0043,  0.0099,  0.0130,  0.0024])
net.mlp.net.2.batch_norm.weight tensor([0.0967, 0.1146, 0.1089, 0.1201, 0.0809, 0.0930, 0.1068, 0.1188, 0.0970,
        0.1273, 0.1217, 0.1117, 0.1232, 0.1277, 0.1194, 0.1285, 0.1020, 0.0916,
        0.1251, 0.0994, 0.1001, 0.0817, 0.0995, 0.0982, 0.1008, 0.0994, 0.1057,
        0.1265, 0.0992, 0.1238, 0.1437, 0.1046, 0.1140, 0.1078, 0.1078, 0.1138,
        0.1347, 0.0887, 0.1027, 0.0957, 0.1152, 0.0960, 0.1055, 0.1409, 0.0934,
        0.1125, 0.0951, 0.1285, 0.1244, 0.1092, 0.0994, 0.1005, 0.1234, 0.1196,
        0.1308, 0.1294, 0.0929, 0.1167, 0.1281, 0.1149, 0.1100, 0.0786, 0.0917,
        0.1031])
net.mlp.net.2.batch_norm.bias tensor([-0.0144,  0.0185, -0.0119, -0.0053, -0.0092, -0.0040, -0.0071,  0.0188,
         0.0045, -0.0015, -0.0018, -0.0107,  0.0013, -0.0070,  0.0188,  0.0132,
        -0.0340, -0.0099,  0.0086,  0.0040, -0.0027, -0.0019, -0.0014,  0.0225,
        -0.0055,  0.0100, -0.0014,  0.0221,  0.0155,  0.0149,  0.0071,  0.0228,
        -0.0052,  0.0113, -0.0114, -0.0187,  0.0165, -0.0025, -0.0183,  0.0152,
         0.0223, -0.0128, -0.0101, -0.0055, -0.0025,  0.0148, -0.0060,  0.0010,
         0.0149,  0.0047, -0.0250,  0.0006,  0.0276, -0.0160,  0.0097, -0.0096,
         0.0021,  0.0150,  0.0111,  0.0246, -0.0075, -0.0023,  0.0072, -0.0005])
net.mlp.net.2.batch_norm.running_mean tensor([0.0342, 0.0349, 0.0341, 0.0275, 0.0120, 0.0168, 0.0365, 0.0269, 0.0290,
        0.0373, 0.0465, 0.0222, 0.0222, 0.0322, 0.0372, 0.0555, 0.0311, 0.0123,
        0.0319, 0.0126, 0.0312, 0.0130, 0.0281, 0.0068, 0.0353, 0.0190, 0.0207,
        0.0308, 0.0192, 0.0238, 0.0208, 0.0413, 0.0239, 0.0253, 0.0372, 0.0212,
        0.0230, 0.0187, 0.0120, 0.0308, 0.0266, 0.0081, 0.0386, 0.0348, 0.0074,
        0.0296, 0.0196, 0.0337, 0.0230, 0.0243, 0.0341, 0.0201, 0.0334, 0.0300,
        0.0260, 0.0235, 0.0097, 0.0314, 0.0438, 0.0384, 0.0184, 0.0160, 0.0236,
        0.0195])
net.mlp.net.2.batch_norm.running_var tensor([0.0009, 0.0015, 0.0009, 0.0017, 0.0004, 0.0007, 0.0015, 0.0016, 0.0011,
        0.0019, 0.0015, 0.0011, 0.0010, 0.0013, 0.0023, 0.0018, 0.0012, 0.0011,
        0.0019, 0.0006, 0.0027, 0.0004, 0.0014, 0.0003, 0.0017, 0.0010, 0.0012,
        0.0019, 0.0008, 0.0011, 0.0012, 0.0016, 0.0011, 0.0017, 0.0012, 0.0006,
        0.0018, 0.0006, 0.0004, 0.0009, 0.0012, 0.0006, 0.0019, 0.0018, 0.0003,
        0.0023, 0.0008, 0.0015, 0.0018, 0.0010, 0.0008, 0.0011, 0.0018, 0.0012,
        0.0016, 0.0011, 0.0007, 0.0016, 0.0024, 0.0025, 0.0011, 0.0005, 0.0009,
        0.0008])
net.mlp.net.2.batch_norm.num_batches_tracked tensor(395)
net.mlp.net.3.linear.weight tensor([[-0.0105,  0.0229,  0.0086,  ..., -0.0103,  0.0234,  0.0241],
        [-0.0071, -0.0294, -0.0210,  ..., -0.0120, -0.0033, -0.0266],
        [-0.0450,  0.0065, -0.0041,  ..., -0.0078,  0.0205, -0.0213],
        ...,
        [-0.0108, -0.0072,  0.0085,  ..., -0.0054,  0.0190, -0.0017],
        [ 0.0045, -0.0101, -0.0500,  ...,  0.0288,  0.0361, -0.0141],
        [-0.0364,  0.0093,  0.0050,  ...,  0.0010,  0.0071,  0.0089]])
net.mlp.net.3.linear.bias tensor([0.0676, 0.0232, 0.0319, 0.0435, 0.0531, 0.0316, 0.0512, 0.0583, 0.0259,
        0.0497, 0.0218, 0.0331, 0.0284, 0.0320, 0.0258, 0.0413, 0.0382, 0.0121,
        0.0324, 0.0568, 0.0447, 0.0153, 0.0644, 0.0412, 0.0392, 0.0510, 0.0452,
        0.0440, 0.0533, 0.0505, 0.0088, 0.0363, 0.0412, 0.0448, 0.0604, 0.0351,
        0.0394, 0.0293, 0.0620, 0.0490, 0.0135, 0.0572, 0.0167, 0.0616, 0.0334,
        0.0438, 0.0398, 0.0073, 0.0289, 0.0398, 0.0428, 0.0267, 0.0409, 0.0070,
        0.0457, 0.0636, 0.0132, 0.0459, 0.0515, 0.0415, 0.0389, 0.0088, 0.0555,
        0.0665])
net.mlp.net.3.batch_norm.weight tensor([0.1980, 0.1687, 0.2034, 0.1651, 0.1947, 0.1889, 0.2068, 0.2184, 0.1879,
        0.1892, 0.1356, 0.1854, 0.1696, 0.1716, 0.1920, 0.1819, 0.2023, 0.2146,
        0.2000, 0.2028, 0.1862, 0.1514, 0.1954, 0.1788, 0.1992, 0.1844, 0.1805,
        0.1921, 0.1793, 0.2112, 0.1785, 0.1738, 0.1940, 0.2060, 0.1802, 0.1774,
        0.2112, 0.1748, 0.2006, 0.2107, 0.1651, 0.1802, 0.1863, 0.1979, 0.1770,
        0.1864, 0.1968, 0.1551, 0.1922, 0.1741, 0.2049, 0.1714, 0.2118, 0.1652,
        0.1449, 0.2011, 0.1650, 0.2018, 0.1938, 0.1986, 0.1970, 0.1946, 0.2005,
        0.2069])
net.mlp.net.3.batch_norm.bias tensor([-0.0048, -0.0211,  0.0145,  0.0085,  0.0009,  0.0098, -0.0021,  0.0040,
         0.0163,  0.0103,  0.0024, -0.0054,  0.0056,  0.0050, -0.0303,  0.0088,
         0.0220, -0.0070,  0.0124, -0.0121,  0.0309, -0.0219, -0.0011, -0.0003,
        -0.0027, -0.0020,  0.0283,  0.0163, -0.0081,  0.0030,  0.0268,  0.0034,
        -0.0051,  0.0113,  0.0041, -0.0134,  0.0048,  0.0073, -0.0138, -0.0051,
        -0.0039, -0.0115, -0.0086,  0.0046,  0.0062,  0.0072, -0.0071,  0.0156,
         0.0129,  0.0003,  0.0043,  0.0202,  0.0027,  0.0057,  0.0087, -0.0078,
        -0.0129,  0.0142,  0.0080, -0.0011,  0.0066,  0.0162, -0.0059,  0.0041])
net.mlp.net.3.batch_norm.running_mean tensor([0.0738, 0.0351, 0.0471, 0.0474, 0.0605, 0.0495, 0.0630, 0.0657, 0.0398,
        0.0588, 0.0331, 0.0478, 0.0405, 0.0494, 0.0414, 0.0560, 0.0564, 0.0398,
        0.0501, 0.0618, 0.0510, 0.0320, 0.0750, 0.0525, 0.0515, 0.0588, 0.0534,
        0.0550, 0.0585, 0.0618, 0.0308, 0.0462, 0.0544, 0.0595, 0.0688, 0.0437,
        0.0568, 0.0445, 0.0648, 0.0597, 0.0294, 0.0629, 0.0387, 0.0726, 0.0459,
        0.0538, 0.0478, 0.0290, 0.0453, 0.0453, 0.0534, 0.0345, 0.0518, 0.0305,
        0.0466, 0.0664, 0.0334, 0.0599, 0.0679, 0.0548, 0.0510, 0.0318, 0.0663,
        0.0751])
net.mlp.net.3.batch_norm.running_var tensor([0.0027, 0.0020, 0.0033, 0.0018, 0.0029, 0.0035, 0.0036, 0.0038, 0.0024,
        0.0029, 0.0013, 0.0029, 0.0026, 0.0033, 0.0024, 0.0038, 0.0048, 0.0024,
        0.0040, 0.0026, 0.0026, 0.0016, 0.0043, 0.0036, 0.0043, 0.0026, 0.0027,
        0.0042, 0.0020, 0.0033, 0.0023, 0.0020, 0.0037, 0.0047, 0.0039, 0.0021,
        0.0043, 0.0034, 0.0025, 0.0025, 0.0013, 0.0025, 0.0023, 0.0038, 0.0038,
        0.0025, 0.0030, 0.0020, 0.0035, 0.0017, 0.0028, 0.0020, 0.0026, 0.0020,
        0.0013, 0.0020, 0.0018, 0.0040, 0.0053, 0.0037, 0.0028, 0.0028, 0.0031,
        0.0046])
net.mlp.net.3.batch_norm.num_batches_tracked tensor(395)
net.mlp.net.4.weight tensor([[-0.0584,  0.0443, -0.0602,  0.0469, -0.0545, -0.0443,  0.0521, -0.0617,
         -0.0568, -0.0510,  0.0258,  0.0573, -0.0474, -0.0473,  0.0437, -0.0532,
         -0.0514,  0.0648, -0.0440,  0.0686, -0.0418,  0.0297, -0.0542, -0.0560,
         -0.0634, -0.0628, -0.0568, -0.0547,  0.0540, -0.0563, -0.0430,  0.0549,
         -0.0501, -0.0529, -0.0395,  0.0394, -0.0566, -0.0491,  0.0544,  0.0645,
          0.0428,  0.0493,  0.0476, -0.0466, -0.0526, -0.0535,  0.0625, -0.0267,
         -0.0570,  0.0498,  0.0566, -0.0448,  0.0658, -0.0460,  0.0174,  0.0542,
          0.0457, -0.0537, -0.0565, -0.0577, -0.0600, -0.0605,  0.0592, -0.0562]])
