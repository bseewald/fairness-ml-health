Weights: 
net.embeddings.embeddings.0.weight tensor([[ 0.0799, -0.0528],
        [ 0.1847,  0.1851],
        [-0.0988,  0.2993],
        [-0.0960, -0.0333]])
net.embeddings.embeddings.1.weight tensor([[-5.0149e-02,  9.4480e-02],
        [-2.9322e-01, -4.8180e-02],
        [-9.0894e-02,  6.3773e-02],
        [ 4.1194e-05, -3.1115e-02],
        [ 1.8852e-02, -2.6148e-01]])
net.embeddings.embeddings.2.weight tensor([[-0.0375, -0.1926,  0.1778],
        [ 0.0257,  0.1110,  0.0309],
        [ 0.2335, -0.1062,  0.0510],
        [-0.0819,  0.0778,  0.2319],
        [-0.1190,  0.0900,  0.1836],
        [ 0.0983,  0.1679, -0.1053]])
net.embeddings.embeddings.3.weight tensor([[-0.1825, -0.2027],
        [ 0.1552, -0.4841],
        [-0.1671, -0.1662],
        [-0.3046,  0.1717]])
net.embeddings.embeddings.4.weight tensor([[-2.6618e-01,  2.0459e-01],
        [ 2.2713e-01, -6.8268e-02],
        [-2.1868e-01, -1.1116e-02],
        [ 4.0061e-06,  2.6917e-01]])
net.mlp.net.0.linear.weight tensor([[ 0.2029, -0.0451, -0.0891,  ...,  0.1261, -0.0190,  0.0146],
        [-0.0443,  0.2030, -0.1842,  ...,  0.0310,  0.1538, -0.1573],
        [ 0.1074, -0.2408,  0.2569,  ...,  0.1798, -0.1649,  0.0258],
        ...,
        [ 0.1153,  0.0853, -0.1895,  ..., -0.0412,  0.1112,  0.2219],
        [ 0.0505,  0.1099,  0.1431,  ...,  0.3453, -0.0960, -0.1401],
        [ 0.0152,  0.1196, -0.0652,  ..., -0.1265,  0.2058, -0.0830]])
net.mlp.net.0.linear.bias tensor([ 0.0862, -0.0699, -0.0912, -0.0136, -0.1093, -0.0426, -0.0666,  0.1297,
        -0.0044,  0.0683, -0.0063,  0.0395, -0.0194,  0.0062,  0.0145, -0.0680,
        -0.0020, -0.0701,  0.1013, -0.1411,  0.0778,  0.0066, -0.1277,  0.0285,
         0.0380,  0.0506,  0.1055,  0.1542,  0.0321, -0.0281,  0.0908,  0.0894,
        -0.0462, -0.1081,  0.0384, -0.0977, -0.0791,  0.0799,  0.0149, -0.1556,
        -0.0228, -0.0876,  0.0645,  0.0125, -0.0121, -0.0408,  0.0404, -0.1396,
         0.0311,  0.0106, -0.0300,  0.1011, -0.0113, -0.0900, -0.0616,  0.1100,
        -0.0269,  0.1109,  0.0747, -0.0396,  0.0157,  0.1201,  0.0222, -0.0164])
net.mlp.net.0.batch_norm.weight tensor([0.5235, 0.5078, 0.3957, 0.6092, 0.4618, 0.4748, 0.4213, 0.5049, 0.6392,
        0.4811, 0.4848, 0.4118, 0.4764, 0.4693, 0.4742, 0.4590, 0.4355, 0.4381,
        0.4521, 0.5831, 0.5071, 0.4788, 0.4828, 0.5588, 0.4444, 0.3837, 0.4837,
        0.4575, 0.4929, 0.5681, 0.4828, 0.4246, 0.4425, 0.5242, 0.5591, 0.4955,
        0.4104, 0.5347, 0.5480, 0.5170, 0.4344, 0.4908, 0.4989, 0.4784, 0.4193,
        0.4857, 0.5106, 0.4411, 0.5220, 0.4202, 0.4940, 0.4605, 0.5581, 0.4600,
        0.4333, 0.4757, 0.5364, 0.4569, 0.5442, 0.4514, 0.4975, 0.4602, 0.5278,
        0.4844])
net.mlp.net.0.batch_norm.bias tensor([ 0.0261, -0.0044,  0.0022,  0.0071,  0.0255,  0.0794, -0.0402,  0.0259,
         0.0327, -0.0416,  0.0651,  0.0156, -0.0343,  0.0720, -0.0168, -0.0365,
        -0.0107, -0.0518, -0.0557,  0.0117,  0.0566,  0.0254,  0.0478, -0.0566,
        -0.0800, -0.0743,  0.0412, -0.0226,  0.0027, -0.0711, -0.0236,  0.0072,
         0.0301, -0.0413, -0.0149, -0.0332, -0.0155, -0.0189, -0.0214,  0.0806,
         0.0449, -0.0574,  0.0637, -0.0054,  0.0161, -0.0103, -0.0263, -0.0155,
        -0.0160, -0.0439, -0.0229,  0.0675,  0.0195, -0.0841,  0.0443, -0.0096,
        -0.0184, -0.0246, -0.0023, -0.0337, -0.0460,  0.0386, -0.0236, -0.0050])
net.mlp.net.0.batch_norm.running_mean tensor([2.3313e-01, 1.0471e-02, 1.0332e-02, 2.4211e-02, 8.2770e-03, 2.5322e-02,
        1.1712e-01, 5.1072e-01, 4.2427e-02, 2.8085e-01, 7.0989e-04, 3.6606e-01,
        9.6243e-02, 9.8332e-02, 3.7860e-01, 4.0363e-02, 1.5578e-01, 1.0211e-01,
        5.5947e-01, 1.0715e-01, 4.1349e-01, 1.9662e-01, 9.4714e-07, 1.0648e-01,
        1.8435e-01, 1.5704e-02, 3.1225e-01, 4.4531e-01, 1.7621e-01, 6.3832e-02,
        2.3544e-01, 3.5565e-01, 1.3860e-01, 1.4626e-01, 3.8354e-01, 2.1014e-02,
        9.2586e-03, 2.6883e-01, 2.0650e-02, 7.5369e-02, 1.1036e-01, 3.5332e-02,
        3.1031e-01, 2.9627e-01, 3.4202e-02, 4.5729e-02, 6.7688e-02, 1.0405e-03,
        4.2839e-01, 3.6165e-01, 1.7515e-02, 1.0386e-01, 1.9418e-01, 4.1449e-03,
        7.7373e-02, 5.3877e-01, 5.0278e-02, 1.2384e-01, 1.6094e-02, 5.2354e-02,
        1.2936e-01, 1.7418e-01, 4.7285e-01, 7.1351e-02])
net.mlp.net.0.batch_norm.running_var tensor([0.1541, 0.0055, 0.0020, 0.0049, 0.0035, 0.0277, 0.0172, 0.0820, 0.0051,
        0.0299, 0.0006, 0.0560, 0.0172, 0.0792, 0.1141, 0.0086, 0.0267, 0.0203,
        0.0387, 0.0190, 0.0458, 0.0234, 0.0005, 0.0135, 0.0366, 0.0029, 0.0478,
        0.0344, 0.0221, 0.0558, 0.0214, 0.0915, 0.0190, 0.0192, 0.0620, 0.0110,
        0.0054, 0.0505, 0.0193, 0.0237, 0.1269, 0.0071, 0.1515, 0.0290, 0.0088,
        0.0254, 0.0118, 0.0006, 0.0459, 0.0362, 0.0033, 0.0188, 0.0328, 0.0032,
        0.0685, 0.1029, 0.0066, 0.0160, 0.0040, 0.0088, 0.0163, 0.0326, 0.0770,
        0.0325])
net.mlp.net.0.batch_norm.num_batches_tracked tensor(72)
net.mlp.net.1.linear.weight tensor([[-0.0310,  0.0125,  0.1433,  ..., -0.0170, -0.2045, -0.0188],
        [ 0.1023,  0.0872, -0.1802,  ..., -0.0127,  0.0554,  0.0599],
        [ 0.0398, -0.0681,  0.0523,  ..., -0.1160,  0.0575,  0.0284],
        ...,
        [ 0.1423,  0.1290,  0.0944,  ..., -0.0251, -0.0906,  0.1303],
        [-0.0028,  0.0153, -0.1984,  ..., -0.0822,  0.0808,  0.0232],
        [ 0.0917, -0.0075, -0.1271,  ..., -0.1089, -0.1326,  0.2647]])
net.mlp.net.1.linear.bias tensor([ 0.0834,  0.0381,  0.0182,  0.0105,  0.0064, -0.0579,  0.1664, -0.0307,
         0.0748,  0.0310, -0.0161,  0.0554, -0.0294,  0.0295, -0.0864,  0.0592,
         0.0058,  0.0189,  0.0195, -0.0010, -0.0620, -0.0154,  0.0691,  0.0238,
        -0.0056, -0.0204, -0.0068, -0.0567,  0.0197,  0.1465,  0.0650, -0.0964,
         0.0853, -0.0301, -0.0772, -0.0133, -0.0335,  0.0208,  0.0144,  0.0549,
        -0.0089,  0.0496, -0.0713,  0.0083, -0.0007,  0.0403,  0.0523, -0.0121,
         0.0350, -0.0014, -0.0873,  0.0255,  0.0895,  0.0199,  0.0840,  0.0297,
        -0.0874,  0.0558,  0.0110, -0.0909,  0.1064, -0.0468, -0.0322,  0.0807])
net.mlp.net.1.batch_norm.weight tensor([0.4775, 0.4136, 0.5403, 0.5617, 0.4794, 0.4476, 0.4813, 0.4228, 0.4051,
        0.5080, 0.4485, 0.5487, 0.4690, 0.4971, 0.5053, 0.4577, 0.4687, 0.4684,
        0.4343, 0.4490, 0.5142, 0.5335, 0.5977, 0.5398, 0.4182, 0.4794, 0.4517,
        0.4711, 0.6297, 0.4599, 0.4936, 0.5145, 0.4559, 0.4649, 0.5163, 0.5125,
        0.4911, 0.4777, 0.4721, 0.4787, 0.4074, 0.5244, 0.4630, 0.4777, 0.4882,
        0.4319, 0.5417, 0.4885, 0.5113, 0.4878, 0.4871, 0.5200, 0.5199, 0.4530,
        0.4775, 0.5459, 0.4546, 0.4868, 0.4853, 0.5466, 0.5922, 0.4876, 0.4842,
        0.4659])
net.mlp.net.1.batch_norm.bias tensor([ 0.0014, -0.0227, -0.0347, -0.0541, -0.0335,  0.0356, -0.0946, -0.0577,
        -0.0374,  0.0394,  0.0219,  0.0389,  0.0103, -0.0509, -0.0429, -0.0308,
         0.0210,  0.0290, -0.0239,  0.1315, -0.0051,  0.0143,  0.0155,  0.0186,
         0.0388,  0.0730, -0.0032,  0.0264,  0.0328, -0.0078, -0.0213, -0.0222,
         0.0702,  0.0094, -0.0110,  0.0098, -0.0135,  0.0135,  0.0691, -0.0639,
         0.0227, -0.0288,  0.0230, -0.0265, -0.0221,  0.0762, -0.0171, -0.0586,
        -0.0321, -0.0226, -0.0052, -0.0585, -0.0018,  0.0333, -0.0565, -0.0450,
        -0.0259,  0.0144, -0.0382,  0.0052, -0.0550,  0.0043, -0.0241, -0.0002])
net.mlp.net.1.batch_norm.running_mean tensor([0.2842, 0.2474, 0.3620, 0.2412, 0.1783, 0.2086, 0.4149, 0.2311, 0.2661,
        0.2533, 0.2996, 0.3043, 0.2115, 0.3195, 0.2792, 0.2615, 0.2013, 0.2707,
        0.2302, 0.2632, 0.2261, 0.2239, 0.3894, 0.2487, 0.1995, 0.2419, 0.1721,
        0.2031, 0.2580, 0.3037, 0.2449, 0.1643, 0.3072, 0.2172, 0.3056, 0.2991,
        0.2025, 0.2878, 0.1864, 0.2075, 0.2485, 0.2679, 0.1651, 0.1953, 0.2086,
        0.2884, 0.3355, 0.2477, 0.2904, 0.2471, 0.1761, 0.2790, 0.3743, 0.2298,
        0.2962, 0.2489, 0.2001, 0.3672, 0.2377, 0.1790, 0.3276, 0.2336, 0.2631,
        0.2440])
net.mlp.net.1.batch_norm.running_var tensor([0.2075, 0.1768, 0.2391, 0.1486, 0.2212, 0.1808, 0.2645, 0.2245, 0.2389,
        0.2980, 0.2855, 0.1635, 0.1076, 0.3860, 0.2257, 0.0845, 0.1071, 0.1933,
        0.2418, 0.1547, 0.2096, 0.1188, 0.2311, 0.1415, 0.1243, 0.1733, 0.0956,
        0.1481, 0.1705, 0.1321, 0.1013, 0.1587, 0.1873, 0.1538, 0.2043, 0.2298,
        0.3322, 0.1594, 0.1025, 0.2490, 0.1535, 0.1084, 0.1939, 0.1456, 0.1819,
        0.1551, 0.2155, 0.2653, 0.1491, 0.1316, 0.1558, 0.3078, 0.3138, 0.1009,
        0.1590, 0.1108, 0.1545, 0.2880, 0.2117, 0.1155, 0.2337, 0.2471, 0.1544,
        0.1338])
net.mlp.net.1.batch_norm.num_batches_tracked tensor(72)
net.mlp.net.2.linear.weight tensor([[ 4.9457e-02,  1.2761e-01, -5.7635e-02,  ..., -1.0464e-01,
          2.5963e-02,  7.1498e-04],
        [ 5.1945e-02,  2.2058e-02,  1.6808e-02,  ...,  2.1095e-03,
          6.1183e-02, -1.4615e-01],
        [ 6.8511e-02,  2.6517e-02,  1.8719e-01,  ...,  7.6410e-02,
          7.5229e-02,  1.0912e-02],
        ...,
        [ 1.0865e-01, -4.5243e-02,  5.1848e-02,  ...,  1.4005e-01,
         -9.1324e-02,  5.2350e-02],
        [ 2.2061e-07, -1.0139e-01,  1.6910e-01,  ..., -5.4367e-03,
          1.9329e-01, -5.4505e-02],
        [-2.6124e-02, -6.8505e-02,  1.0473e-02,  ...,  6.9723e-05,
          2.6464e-02, -2.1506e-03]])
net.mlp.net.2.linear.bias tensor([-0.0415, -0.0841,  0.0340,  0.0406, -0.0233,  0.0257,  0.0123,  0.0582,
         0.1690, -0.0181,  0.0464, -0.0596, -0.0030,  0.1609,  0.1220,  0.0497,
         0.0356,  0.0836,  0.0519,  0.0591,  0.0904, -0.0694,  0.0163,  0.0100,
         0.1046, -0.0572,  0.0012, -0.0169, -0.0359,  0.0107, -0.0347,  0.0384,
         0.0156, -0.0308, -0.0032,  0.0058,  0.0492,  0.0153,  0.0249,  0.0619,
         0.0301,  0.0082,  0.0258,  0.0488,  0.0103,  0.0118,  0.0191, -0.0750,
         0.0314, -0.0094,  0.0535,  0.0447, -0.0267,  0.0484,  0.0740,  0.0906,
        -0.0228,  0.0201,  0.0471, -0.0564,  0.1151,  0.0517,  0.1682,  0.0210])
net.mlp.net.2.batch_norm.weight tensor([0.4114, 0.4147, 0.5675, 0.3807, 0.4524, 0.5433, 0.5532, 0.5041, 0.5889,
        0.4138, 0.4746, 0.4766, 0.4917, 0.6012, 0.5537, 0.4819, 0.4570, 0.5811,
        0.4973, 0.5071, 0.5119, 0.4806, 0.5116, 0.4697, 0.4351, 0.5307, 0.4951,
        0.5128, 0.4598, 0.4881, 0.4475, 0.4716, 0.4702, 0.4809, 0.4658, 0.4238,
        0.4732, 0.5263, 0.5281, 0.4950, 0.4611, 0.4566, 0.4411, 0.4688, 0.4434,
        0.4089, 0.4265, 0.4405, 0.5289, 0.4345, 0.4990, 0.4968, 0.4375, 0.6357,
        0.4622, 0.4980, 0.4049, 0.4618, 0.5265, 0.4809, 0.5790, 0.3967, 0.6594,
        0.4728])
net.mlp.net.2.batch_norm.bias tensor([ 0.0074, -0.0390, -0.0459,  0.0236, -0.0464,  0.0027, -0.0035,  0.0043,
         0.0787, -0.0163, -0.0587, -0.0680, -0.0003, -0.0076,  0.0087,  0.0046,
        -0.0256,  0.0307, -0.0259, -0.0708, -0.0014, -0.0488, -0.0507, -0.0186,
         0.0387, -0.0444,  0.0389,  0.0226,  0.0365, -0.0384,  0.0791,  0.0686,
         0.0226,  0.0645, -0.0260,  0.0198,  0.0042,  0.0606,  0.0436,  0.0222,
         0.0310, -0.0067, -0.0334,  0.0592, -0.0147, -0.0803,  0.0332,  0.0135,
         0.0312, -0.0024,  0.0391, -0.0350,  0.0128,  0.0131, -0.0447, -0.0167,
        -0.0055,  0.0121,  0.0356, -0.0079,  0.0429,  0.0365,  0.0340, -0.0179])
net.mlp.net.2.batch_norm.running_mean tensor([0.1766, 0.1832, 0.3049, 0.2377, 0.1816, 0.2770, 0.3098, 0.3014, 0.4352,
        0.2757, 0.2665, 0.1882, 0.2788, 0.4222, 0.4474, 0.3103, 0.2637, 0.3821,
        0.4019, 0.2717, 0.3081, 0.1353, 0.2762, 0.2334, 0.2920, 0.2697, 0.3240,
        0.2786, 0.2940, 0.3070, 0.1947, 0.2484, 0.2592, 0.2467, 0.2050, 0.2164,
        0.2645, 0.3585, 0.2901, 0.2772, 0.1598, 0.2294, 0.1808, 0.2592, 0.3355,
        0.2244, 0.2789, 0.1699, 0.2391, 0.2272, 0.2244, 0.3113, 0.2023, 0.3466,
        0.3169, 0.2907, 0.2365, 0.2545, 0.3242, 0.2108, 0.4526, 0.2994, 0.6021,
        0.2807])
net.mlp.net.2.batch_norm.running_var tensor([0.1982, 0.1061, 0.2697, 0.1816, 0.1160, 0.2517, 0.2010, 0.1976, 0.3632,
        0.1942, 0.1491, 0.1678, 0.1733, 0.1868, 0.3051, 0.2030, 0.3913, 0.3073,
        0.2723, 0.1251, 0.1800, 0.1604, 0.2146, 0.1453, 0.1338, 0.1450, 0.2405,
        0.2567, 0.2135, 0.2070, 0.1081, 0.2145, 0.1592, 0.2414, 0.2227, 0.1500,
        0.2706, 0.3204, 0.1976, 0.1358, 0.1261, 0.1518, 0.0716, 0.1320, 0.2664,
        0.0900, 0.2331, 0.1905, 0.2584, 0.3052, 0.1490, 0.2724, 0.2805, 0.2996,
        0.1258, 0.1690, 0.1206, 0.1264, 0.2981, 0.2537, 0.4178, 0.1580, 0.5072,
        0.1747])
net.mlp.net.2.batch_norm.num_batches_tracked tensor(72)
net.mlp.net.3.linear.weight tensor([[ 0.0329,  0.0199, -0.0720,  ...,  0.0730,  0.0280,  0.0182],
        [ 0.0654, -0.0160,  0.1366,  ..., -0.0339, -0.0366,  0.0558],
        [-0.0334,  0.0439, -0.2050,  ..., -0.1463,  0.0020,  0.0550],
        ...,
        [-0.0727, -0.2691,  0.0306,  ..., -0.0324, -0.0342,  0.1546],
        [ 0.0305, -0.0816, -0.0581,  ...,  0.1267, -0.1752,  0.0075],
        [ 0.0222, -0.0671, -0.0149,  ..., -0.0161, -0.0629,  0.0620]])
net.mlp.net.3.linear.bias tensor([-0.0973, -0.0296, -0.0606,  0.0608,  0.0285,  0.0480,  0.1253,  0.0969,
         0.0322,  0.0224, -0.0316, -0.0647,  0.0424, -0.0494,  0.0180,  0.0026,
         0.0378,  0.1000, -0.1142,  0.0029,  0.0439,  0.0645,  0.0887,  0.0324,
         0.0480, -0.0556,  0.0653,  0.0729,  0.0457, -0.0091,  0.0398, -0.0356,
         0.0291,  0.0798,  0.0121,  0.0063,  0.1508, -0.0239,  0.0277,  0.0179,
        -0.0480, -0.0235,  0.0835,  0.0368, -0.0600,  0.0717, -0.0442, -0.0233,
         0.0479,  0.1049,  0.0711, -0.0105, -0.0157, -0.0080,  0.0097,  0.0121,
         0.0509,  0.0377, -0.0486, -0.0422,  0.0555,  0.0439,  0.0832, -0.0060])
net.mlp.net.3.batch_norm.weight tensor([0.4257, 0.4167, 0.4299, 0.4623, 0.4275, 0.4524, 0.5396, 0.4667, 0.4923,
        0.4592, 0.4014, 0.4589, 0.4925, 0.4309, 0.4621, 0.4379, 0.4474, 0.5091,
        0.3816, 0.4310, 0.4368, 0.5034, 0.5212, 0.4897, 0.4896, 0.4253, 0.5485,
        0.4379, 0.4088, 0.4207, 0.4557, 0.4331, 0.5312, 0.4411, 0.4436, 0.4146,
        0.5012, 0.4940, 0.4218, 0.4415, 0.4823, 0.4190, 0.4449, 0.4384, 0.4528,
        0.4009, 0.4892, 0.4531, 0.4817, 0.4861, 0.4606, 0.4251, 0.4290, 0.4619,
        0.4396, 0.4869, 0.4445, 0.4406, 0.4647, 0.4669, 0.4662, 0.4695, 0.4458,
        0.4949])
net.mlp.net.3.batch_norm.bias tensor([-0.0195,  0.0266,  0.0222,  0.0370, -0.0457,  0.0658,  0.0267, -0.0122,
        -0.0393, -0.0340,  0.0133, -0.0381, -0.0352,  0.0207, -0.0400,  0.0066,
        -0.0068,  0.0067, -0.0469,  0.0365, -0.0126, -0.0465,  0.0044,  0.0146,
        -0.0009,  0.0081,  0.0287,  0.0154, -0.0725,  0.0003,  0.0178,  0.0249,
        -0.0249, -0.0013,  0.0146, -0.0423, -0.0481, -0.0296, -0.0085,  0.0015,
        -0.0619,  0.0153, -0.0746, -0.0280,  0.0073,  0.0082,  0.0658, -0.0237,
        -0.0108,  0.0083,  0.0006, -0.0110,  0.0254,  0.0104,  0.0333, -0.0239,
        -0.0113, -0.0565,  0.0097,  0.0009, -0.0696,  0.0185, -0.0240, -0.0336])
net.mlp.net.3.batch_norm.running_mean tensor([0.1849, 0.1657, 0.1897, 0.2612, 0.2490, 0.3592, 0.4337, 0.4178, 0.3590,
        0.3459, 0.2931, 0.2202, 0.2015, 0.2744, 0.2206, 0.2263, 0.2092, 0.4629,
        0.1866, 0.2254, 0.2781, 0.4292, 0.4403, 0.3190, 0.4109, 0.1639, 0.4972,
        0.2858, 0.2420, 0.2108, 0.2573, 0.2466, 0.3859, 0.3559, 0.2039, 0.2372,
        0.3567, 0.3643, 0.2259, 0.2905, 0.3120, 0.2753, 0.2826, 0.3026, 0.1986,
        0.3593, 0.2858, 0.1816, 0.2843, 0.3814, 0.2862, 0.2250, 0.2564, 0.1834,
        0.2967, 0.3334, 0.3153, 0.2663, 0.2749, 0.2931, 0.2740, 0.2164, 0.2726,
        0.3432])
net.mlp.net.3.batch_norm.running_var tensor([0.1680, 0.1266, 0.1094, 0.1960, 0.1093, 0.3481, 0.2990, 0.3320, 0.2875,
        0.2862, 0.2213, 0.1344, 0.1633, 0.3389, 0.2230, 0.1871, 0.1615, 0.3092,
        0.1017, 0.1124, 0.3081, 0.3776, 0.3031, 0.1598, 0.4169, 0.0879, 0.4094,
        0.1473, 0.1715, 0.1920, 0.2737, 0.1370, 0.3531, 0.2617, 0.1399, 0.2087,
        0.2838, 0.2232, 0.1406, 0.2356, 0.3413, 0.2763, 0.1568, 0.1903, 0.1837,
        0.3722, 0.2745, 0.1101, 0.2100, 0.3364, 0.1723, 0.2200, 0.2736, 0.0717,
        0.1905, 0.2594, 0.3132, 0.2411, 0.3714, 0.2759, 0.2168, 0.1171, 0.2298,
        0.4974])
net.mlp.net.3.batch_norm.num_batches_tracked tensor(72)
net.mlp.net.4.weight tensor([[-0.0040,  0.0031, -0.0303,  0.0407,  0.0094,  0.0306,  0.0853,  0.0632,
          0.0456, -0.0286,  0.0128,  0.0288, -0.0357, -0.0374, -0.0097, -0.0151,
          0.0179,  0.0726,  0.0009,  0.0171, -0.0207,  0.0741,  0.0568,  0.0470,
         -0.0727, -0.0329,  0.0829,  0.0181,  0.0115, -0.0140, -0.0201,  0.0034,
         -0.0664,  0.0400,  0.0019, -0.0013, -0.0734,  0.0707, -0.0003, -0.0215,
         -0.0236, -0.0172,  0.0157, -0.0309, -0.0178, -0.0045, -0.0372,  0.0338,
          0.0410, -0.0534,  0.0244, -0.0246, -0.0145, -0.0342,  0.0210, -0.0642,
         -0.0156, -0.0338, -0.0163, -0.0231, -0.0400, -0.0397, -0.0317, -0.0434]])
