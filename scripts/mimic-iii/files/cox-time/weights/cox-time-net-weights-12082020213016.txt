Weights: 
net.embeddings.embeddings.0.weight tensor([[-0.3964,  0.4779],
        [-0.1449, -0.1803],
        [-0.5109, -0.3159],
        [ 0.1430,  0.3155]])
net.embeddings.embeddings.1.weight tensor([[-0.3969, -0.3956],
        [ 0.4021,  0.0149],
        [ 0.0178, -0.4822],
        [ 0.4116, -0.3125],
        [-0.4781,  0.2848]])
net.embeddings.embeddings.2.weight tensor([[ 0.3289, -0.0837, -0.3753],
        [ 0.2252, -0.1290,  0.1556],
        [ 0.1311, -0.2875,  0.3101],
        [ 0.2793, -0.1722,  0.2280],
        [-0.3082, -0.3073, -0.3472],
        [-0.2028,  0.3157,  0.1255]])
net.embeddings.embeddings.3.weight tensor([[ 0.0615, -0.1446],
        [-0.2374, -0.4401],
        [-0.1073, -0.3123],
        [ 0.2026,  0.1676]])
net.embeddings.embeddings.4.weight tensor([[-0.0495, -0.0550],
        [ 0.4141,  0.3949],
        [-0.0087, -0.0385],
        [ 0.4414, -0.1170]])
net.mlp.net.0.linear.weight tensor([[-1.3464e-02, -9.5385e-03,  6.0432e-01,  ..., -1.4260e-01,
         -2.6787e-01, -9.8978e-02],
        [-7.8092e-02,  5.0706e-01,  2.1333e-01,  ..., -7.7239e-02,
          4.3385e-01,  6.6274e-02],
        [ 3.3020e-01, -1.0324e-01,  2.9055e-01,  ..., -1.1921e-01,
          3.4953e-02,  8.7339e-02],
        ...,
        [-9.7467e-02,  2.7456e-01, -2.9028e-01,  ...,  6.7518e-02,
         -2.0459e-02,  1.4602e-01],
        [ 2.5950e-01, -4.6859e-03,  3.7209e-02,  ..., -9.1991e-02,
          1.8521e-01,  3.2257e-04],
        [ 1.4865e-01, -7.7735e-02, -9.7577e-02,  ...,  2.3181e-01,
         -5.4205e-01,  1.7618e-01]])
net.mlp.net.0.linear.bias tensor([ 0.0121, -0.1062, -0.1289,  0.0234, -0.0752, -0.1541,  0.0345, -0.0723,
        -0.0691,  0.0230,  0.0684,  0.0918,  0.1213,  0.1488,  0.0818, -0.0533,
         0.0719,  0.0767, -0.1376,  0.1453,  0.1560, -0.1338,  0.0810, -0.0074,
         0.1585, -0.0422,  0.1374,  0.1795, -0.0836,  0.0838,  0.1302, -0.1619,
         0.0788, -0.0379, -0.0662, -0.1425,  0.1349, -0.1080,  0.1395, -0.0251,
         0.1435, -0.1162,  0.0134,  0.1041, -0.1361, -0.0936,  0.0765,  0.0070,
        -0.0354, -0.0075,  0.1495,  0.0990,  0.0220,  0.0706,  0.0278, -0.1170,
        -0.0276, -0.0139,  0.1401, -0.1662,  0.1468,  0.1655,  0.0834,  0.0047])
net.mlp.net.0.batch_norm.weight tensor([0.7438, 0.7760, 0.7481, 0.7465, 0.7767, 0.7463, 0.7749, 0.7475, 0.7467,
        0.7432, 0.7474, 0.7488, 0.7789, 0.7786, 0.7802, 0.7783, 0.7450, 0.7475,
        0.7753, 0.7531, 0.7716, 0.7768, 0.7659, 0.7713, 0.7456, 0.7742, 0.7498,
        0.7787, 0.7496, 0.7560, 0.7765, 0.7497, 0.7498, 0.7790, 0.7660, 0.7444,
        0.7745, 0.7759, 0.7460, 0.7800, 0.7784, 0.7436, 0.7594, 0.7769, 0.7801,
        0.7522, 0.7711, 0.7567, 0.7590, 0.7460, 0.7736, 0.7463, 0.7503, 0.7455,
        0.7501, 0.7537, 0.7433, 0.7440, 0.7792, 0.7699, 0.7458, 0.7698, 0.7497,
        0.7766])
net.mlp.net.0.batch_norm.bias tensor([ 0.0063, -0.0095,  0.0050,  0.0148,  0.0050, -0.0153, -0.0115, -0.0084,
         0.0167, -0.0159, -0.0159,  0.0106, -0.0179,  0.0172,  0.0036, -0.0143,
        -0.0023, -0.0158, -0.0150,  0.0157,  0.0082,  0.0035, -0.0174, -0.0145,
         0.0123, -0.0114,  0.0105, -0.0152, -0.0115, -0.0024,  0.0137,  0.0118,
         0.0057, -0.0161,  0.0172, -0.0060,  0.0157,  0.0166, -0.0115,  0.0075,
         0.0154,  0.0156,  0.0083, -0.0175, -0.0079, -0.0044, -0.0155,  0.0149,
         0.0042, -0.0122,  0.0179, -0.0169,  0.0099,  0.0168, -0.0179, -0.0093,
         0.0182,  0.0104,  0.0142, -0.0047, -0.0142, -0.0101, -0.0161, -0.0167])
net.mlp.net.0.batch_norm.running_mean tensor([1.4256e-01, 2.0235e-02, 4.7172e-02, 1.2768e-01, 1.9754e-01, 8.4860e-03,
        2.4762e-01, 1.0514e-01, 3.5076e-03, 1.6616e-01, 5.6840e-03, 9.4583e-02,
        4.0918e-03, 1.4181e-01, 2.4392e-02, 1.1281e-02, 5.2131e-02, 1.1252e-01,
        1.5197e-05, 5.7134e-02, 1.2529e-01, 3.3508e-03, 3.1779e-02, 5.4420e-03,
        1.0122e-01, 4.8040e-02, 9.3559e-03, 1.5749e-01, 2.1745e-01, 2.0142e-01,
        2.0643e-02, 1.3186e-04, 9.4232e-02, 1.6061e-01, 1.0002e-01, 7.7536e-03,
        1.1191e-02, 7.0728e-03, 2.1307e-02, 1.8891e-01, 3.9411e-02, 2.0282e-03,
        3.6105e-02, 2.7160e-02, 6.2720e-04, 6.8664e-02, 1.4036e-01, 6.6050e-02,
        5.4669e-02, 6.3079e-02, 5.8898e-02, 4.2044e-02, 4.1792e-02, 1.6714e-02,
        9.1393e-03, 5.3490e-04, 8.1720e-02, 3.7859e-01, 5.9792e-03, 2.1447e-03,
        6.4106e-02, 4.6590e-03, 6.0197e-02, 5.9541e-03])
net.mlp.net.0.batch_norm.running_var tensor([0.7661, 0.7404, 0.8586, 0.7699, 0.7746, 0.7318, 0.7584, 0.7723, 0.7309,
        0.7804, 0.7305, 0.7675, 0.7333, 0.8060, 0.7395, 0.7448, 0.7437, 0.7703,
        0.7290, 0.8431, 0.7686, 0.7302, 0.7369, 0.7304, 0.7479, 0.7884, 0.7313,
        0.7589, 0.7904, 0.7794, 0.7356, 0.7290, 0.7609, 0.7941, 0.7601, 0.7408,
        0.7323, 0.7304, 0.7371, 0.7765, 0.7696, 0.7295, 0.7413, 0.7361, 0.7292,
        0.7563, 0.7912, 0.7687, 0.7903, 0.7470, 0.7696, 0.7474, 0.7535, 0.7461,
        0.7401, 0.7291, 0.7924, 0.8982, 0.7314, 0.7296, 0.8035, 0.7301, 0.7452,
        0.7308])
net.mlp.net.0.batch_norm.num_batches_tracked tensor(3)
net.mlp.net.1.linear.weight tensor([[-0.1904, -0.0515, -0.1289,  ..., -0.0950, -0.0208,  0.0084],
        [ 0.0171,  0.0233,  0.0326,  ...,  0.1573, -0.0124,  0.0718],
        [-0.1573, -0.0424, -0.1986,  ..., -0.1419, -0.0127,  0.0196],
        ...,
        [-0.0399,  0.1666,  0.1318,  ..., -0.1815,  0.0466, -0.0038],
        [ 0.2294, -0.0220,  0.1708,  ..., -0.3226,  0.1140, -0.1067],
        [-0.0336, -0.1817,  0.0735,  ..., -0.0628,  0.1358,  0.1660]])
net.mlp.net.1.linear.bias tensor([ 0.0807, -0.0740, -0.0032,  0.0568,  0.0168,  0.0519,  0.0390, -0.1028,
         0.0056, -0.0289,  0.0793, -0.0739,  0.0429, -0.0885,  0.0631, -0.0641,
         0.0758, -0.0016,  0.0911, -0.0404, -0.0445,  0.0142, -0.0293, -0.0121,
        -0.0480, -0.0167, -0.0478, -0.0512,  0.0506, -0.0284,  0.0599, -0.0460,
        -0.0007,  0.0147, -0.0982,  0.1087,  0.0374,  0.0126,  0.0832,  0.0871,
         0.0656,  0.0044,  0.0761, -0.0763,  0.0562, -0.0050,  0.0227,  0.0326,
         0.0619,  0.0824,  0.0622, -0.0477,  0.0427,  0.0061, -0.0950, -0.0669,
        -0.0740,  0.0860, -0.0559, -0.0783, -0.0600,  0.0875, -0.0385,  0.0101])
net.mlp.net.1.batch_norm.weight tensor([0.7777, 0.7459, 0.7660, 0.7801, 0.7774, 0.7447, 0.7462, 0.7661, 0.7516,
        0.7452, 0.7473, 0.7779, 0.7800, 0.7711, 0.7735, 0.7514, 0.7797, 0.7633,
        0.7453, 0.7455, 0.7575, 0.7546, 0.7656, 0.7796, 0.7470, 0.7487, 0.7466,
        0.7660, 0.7773, 0.7432, 0.7791, 0.7547, 0.7684, 0.7455, 0.7771, 0.7447,
        0.7570, 0.7742, 0.7707, 0.7751, 0.7562, 0.7473, 0.7776, 0.7583, 0.7454,
        0.7557, 0.7438, 0.7779, 0.7439, 0.7796, 0.7596, 0.7749, 0.7646, 0.7768,
        0.7453, 0.7786, 0.7501, 0.7580, 0.7771, 0.7560, 0.7788, 0.7732, 0.7668,
        0.7532])
net.mlp.net.1.batch_norm.bias tensor([-0.0106, -0.0180, -0.0169,  0.0164, -0.0168,  0.0163,  0.0059,  0.0184,
         0.0040,  0.0153,  0.0165, -0.0021, -0.0067, -0.0176, -0.0143,  0.0144,
        -0.0170, -0.0076,  0.0141,  0.0064, -0.0080, -0.0165,  0.0177,  0.0110,
        -0.0109,  0.0182,  0.0155, -0.0157,  0.0178, -0.0072,  0.0136, -0.0175,
        -0.0167, -0.0185, -0.0170, -0.0128, -0.0143, -0.0175, -0.0151,  0.0163,
        -0.0165, -0.0089, -0.0166, -0.0175, -0.0160,  0.0111,  0.0143, -0.0160,
        -0.0165, -0.0126, -0.0111, -0.0072, -0.0024, -0.0169, -0.0161, -0.0120,
         0.0088,  0.0185, -0.0174, -0.0118, -0.0180, -0.0064,  0.0092, -0.0114])
net.mlp.net.1.batch_norm.running_mean tensor([0.1236, 0.0874, 0.0708, 0.1234, 0.1082, 0.0951, 0.1157, 0.0624, 0.0949,
        0.1006, 0.1162, 0.0954, 0.1196, 0.1056, 0.1137, 0.1341, 0.1168, 0.1291,
        0.0993, 0.0877, 0.1292, 0.0923, 0.0962, 0.0806, 0.0664, 0.0843, 0.0943,
        0.0878, 0.0989, 0.1187, 0.1128, 0.0691, 0.0965, 0.0943, 0.0723, 0.1399,
        0.1262, 0.0802, 0.1341, 0.1246, 0.1550, 0.1075, 0.1101, 0.0784, 0.1028,
        0.0855, 0.1060, 0.1151, 0.0879, 0.1279, 0.1046, 0.0855, 0.1151, 0.1472,
        0.0645, 0.1319, 0.1020, 0.1028, 0.0864, 0.0818, 0.0815, 0.1142, 0.1043,
        0.0783])
net.mlp.net.1.batch_norm.running_var tensor([0.8588, 0.8655, 0.7841, 0.8165, 0.8373, 0.9499, 0.8465, 0.7665, 0.8011,
        1.1012, 0.8547, 0.8259, 0.8062, 0.8308, 0.8615, 0.8260, 0.8633, 0.8413,
        0.7923, 0.7876, 0.9382, 0.8048, 0.8190, 0.7757, 0.7812, 0.7943, 0.8210,
        0.8125, 0.8205, 0.8495, 0.8408, 0.7978, 0.8079, 0.8381, 0.8385, 0.9013,
        0.8147, 0.7764, 0.8748, 0.8646, 0.9308, 0.8658, 0.7959, 0.7990, 0.8016,
        0.7852, 0.8118, 0.8191, 0.8244, 0.8961, 0.8440, 0.8075, 0.8143, 1.0302,
        0.7647, 0.9451, 0.8364, 0.8252, 0.8211, 0.7854, 0.7879, 0.8977, 0.8815,
        0.8082])
net.mlp.net.1.batch_norm.num_batches_tracked tensor(3)
net.mlp.net.2.linear.weight tensor([[ 0.0112,  0.0183,  0.1000,  ..., -0.2331,  0.0723,  0.0715],
        [-0.0685,  0.0793, -0.0399,  ..., -0.0821,  0.1232, -0.1465],
        [-0.2381, -0.0573,  0.1925,  ...,  0.0435, -0.3489, -0.2917],
        ...,
        [ 0.0435,  0.0174,  0.0652,  ..., -0.1444, -0.0098,  0.0240],
        [ 0.0618,  0.2474,  0.1497,  ..., -0.0845, -0.0530,  0.0371],
        [ 0.1530,  0.1812,  0.0521,  ...,  0.0729, -0.0937,  0.1885]])
net.mlp.net.2.linear.bias tensor([ 0.0783, -0.0108, -0.0338, -0.0708, -0.0035,  0.0256,  0.0528,  0.0761,
         0.0165,  0.0639, -0.0604, -0.0418,  0.0265, -0.1059,  0.0306,  0.0483,
         0.0538, -0.0395,  0.0606, -0.0256,  0.0829, -0.0519,  0.0559,  0.0902,
        -0.0040,  0.0783,  0.0642, -0.0478, -0.0478,  0.0561,  0.0340, -0.0304,
         0.0961, -0.0657,  0.0186, -0.0209, -0.0555,  0.0276, -0.0523,  0.0707,
         0.0347, -0.0647,  0.0232, -0.0469,  0.0297,  0.0317, -0.0054,  0.0333,
         0.0045,  0.0080, -0.0485,  0.0441, -0.0390, -0.0335,  0.1131, -0.1125,
        -0.0202, -0.0765, -0.0534,  0.0169, -0.0881, -0.0871, -0.0551, -0.0384])
net.mlp.net.2.batch_norm.weight tensor([0.7795, 0.7784, 0.7505, 0.7442, 0.7801, 0.7775, 0.7635, 0.7782, 0.7750,
        0.7742, 0.7768, 0.7780, 0.7796, 0.7749, 0.7436, 0.7477, 0.7453, 0.7739,
        0.7643, 0.7755, 0.7766, 0.7791, 0.7474, 0.7751, 0.7444, 0.7761, 0.7800,
        0.7780, 0.7491, 0.7801, 0.7461, 0.7776, 0.7721, 0.7447, 0.7789, 0.7435,
        0.7750, 0.7453, 0.7784, 0.7497, 0.7731, 0.7469, 0.7796, 0.7749, 0.7436,
        0.7787, 0.7572, 0.7441, 0.7689, 0.7483, 0.7459, 0.7455, 0.7799, 0.7703,
        0.7459, 0.7453, 0.7786, 0.7713, 0.7764, 0.7725, 0.7737, 0.7455, 0.7563,
        0.7779])
net.mlp.net.2.batch_norm.bias tensor([-0.0163,  0.0163,  0.0069, -0.0162,  0.0149,  0.0156, -0.0152,  0.0150,
         0.0171,  0.0180, -0.0142, -0.0171, -0.0156,  0.0135,  0.0118, -0.0039,
         0.0137, -0.0186, -0.0169, -0.0185,  0.0142,  0.0172,  0.0147, -0.0164,
         0.0185, -0.0136, -0.0154,  0.0138, -0.0122, -0.0143, -0.0172,  0.0136,
         0.0129,  0.0186, -0.0024,  0.0153, -0.0048, -0.0053,  0.0116, -0.0171,
         0.0164, -0.0085, -0.0108,  0.0154,  0.0175,  0.0158,  0.0031,  0.0071,
        -0.0143,  0.0182, -0.0182,  0.0134, -0.0170,  0.0146,  0.0121, -0.0166,
        -0.0186, -0.0030, -0.0026, -0.0185, -0.0167, -0.0176, -0.0180, -0.0178])
net.mlp.net.2.batch_norm.running_mean tensor([0.1363, 0.1207, 0.1001, 0.1195, 0.1142, 0.1105, 0.1016, 0.1419, 0.0980,
        0.1360, 0.1453, 0.1050, 0.1351, 0.1053, 0.0869, 0.1578, 0.1523, 0.1013,
        0.1420, 0.1101, 0.1369, 0.0775, 0.1175, 0.1161, 0.1091, 0.1268, 0.1619,
        0.1198, 0.1066, 0.1075, 0.1263, 0.1152, 0.1409, 0.1332, 0.1035, 0.1121,
        0.1065, 0.1134, 0.1228, 0.1321, 0.1226, 0.1068, 0.1251, 0.1015, 0.1118,
        0.0985, 0.1005, 0.1279, 0.1137, 0.0996, 0.0992, 0.1698, 0.1169, 0.1372,
        0.1546, 0.1091, 0.1322, 0.0922, 0.1285, 0.1013, 0.0981, 0.0802, 0.0841,
        0.1282])
net.mlp.net.2.batch_norm.running_var tensor([0.8407, 0.8534, 0.8374, 1.1330, 0.8706, 0.8302, 0.8327, 0.8709, 0.8146,
        0.8735, 1.0651, 0.9028, 0.8685, 0.8514, 0.8151, 0.9633, 0.9322, 0.8082,
        0.8709, 0.9079, 0.8361, 0.8041, 0.8257, 0.8639, 0.8285, 0.9558, 0.9495,
        0.8680, 0.8412, 0.8526, 0.8900, 0.8487, 0.9109, 0.9379, 0.8543, 0.8382,
        0.8207, 0.8390, 0.8925, 0.8779, 0.8321, 0.8492, 1.0335, 0.8185, 0.8334,
        0.8178, 0.8067, 0.8830, 0.8451, 0.8034, 0.8139, 0.9178, 0.8560, 0.8419,
        0.9748, 0.8534, 0.8941, 0.8378, 0.8536, 0.7999, 0.8615, 0.7910, 0.8238,
        0.9042])
net.mlp.net.2.batch_norm.num_batches_tracked tensor(3)
net.mlp.net.3.linear.weight tensor([[-0.0206,  0.3933,  0.0044,  ...,  0.1335,  0.0689,  0.0025],
        [ 0.0737,  0.0786, -0.1729,  ..., -0.0840,  0.0245, -0.0625],
        [-0.0985, -0.1537, -0.1431,  ..., -0.1276, -0.2133,  0.1167],
        ...,
        [-0.0123,  0.1907,  0.1349,  ...,  0.1343, -0.0125, -0.1180],
        [ 0.0662,  0.0318, -0.0085,  ..., -0.1656, -0.1508, -0.1322],
        [ 0.1203, -0.0040, -0.1448,  ..., -0.0642,  0.1774, -0.1189]])
net.mlp.net.3.linear.bias tensor([ 0.0247,  0.0673, -0.0354, -0.0528, -0.0448, -0.0354, -0.0352,  0.0314,
        -0.0604,  0.0217,  0.0378,  0.0191,  0.0649,  0.0422,  0.0061, -0.0403,
        -0.0339, -0.0635,  0.0490, -0.0700,  0.0063,  0.0563, -0.0549,  0.0638,
        -0.0223, -0.0376, -0.0013, -0.0304,  0.0718,  0.0805, -0.0147,  0.0989,
        -0.0539,  0.0367,  0.0001, -0.0203, -0.0054, -0.0414, -0.0970, -0.0381,
         0.0267, -0.1072,  0.0179, -0.0096,  0.0280, -0.0781,  0.0113, -0.0576,
         0.0381, -0.0097, -0.0323,  0.0773, -0.0627, -0.0381, -0.0366, -0.0373,
         0.1011, -0.0921,  0.0197,  0.0396, -0.0811, -0.0118, -0.0293,  0.0765])
net.mlp.net.3.batch_norm.weight tensor([0.7451, 0.7455, 0.7446, 0.7437, 0.7751, 0.7433, 0.7781, 0.7506, 0.7447,
        0.7550, 0.7492, 0.7441, 0.7443, 0.7480, 0.7764, 0.7766, 0.7462, 0.7474,
        0.7477, 0.7469, 0.7661, 0.7756, 0.7456, 0.7716, 0.7441, 0.7462, 0.7684,
        0.7449, 0.7482, 0.7792, 0.7478, 0.7716, 0.7778, 0.7763, 0.7470, 0.7759,
        0.7450, 0.7507, 0.7474, 0.7432, 0.7471, 0.7433, 0.7456, 0.7766, 0.7798,
        0.7462, 0.7771, 0.7473, 0.7787, 0.7472, 0.7643, 0.7784, 0.7488, 0.7441,
        0.7571, 0.7558, 0.7471, 0.7462, 0.7776, 0.7763, 0.7724, 0.7503, 0.7778,
        0.7785])
net.mlp.net.3.batch_norm.bias tensor([-0.0151,  0.0140, -0.0081,  0.0165, -0.0161, -0.0052,  0.0166, -0.0180,
        -0.0180,  0.0047,  0.0139,  0.0136,  0.0161,  0.0154, -0.0165,  0.0154,
         0.0082,  0.0114, -0.0181,  0.0080,  0.0045,  0.0045,  0.0074,  0.0160,
        -0.0174,  0.0175,  0.0159,  0.0138, -0.0157, -0.0123,  0.0121, -0.0157,
         0.0186, -0.0154, -0.0147, -0.0080,  0.0175,  0.0154,  0.0121, -0.0174,
        -0.0164, -0.0102,  0.0175, -0.0076, -0.0127, -0.0133, -0.0044,  0.0048,
         0.0135, -0.0174,  0.0020,  0.0164,  0.0135,  0.0133, -0.0173,  0.0144,
         0.0106,  0.0138, -0.0178, -0.0172, -0.0036, -0.0047,  0.0025, -0.0024])
net.mlp.net.3.batch_norm.running_mean tensor([0.1201, 0.1357, 0.1284, 0.0854, 0.1076, 0.1084, 0.1047, 0.1247, 0.1072,
        0.1381, 0.1148, 0.0969, 0.1217, 0.1212, 0.1053, 0.1273, 0.1485, 0.0913,
        0.1488, 0.1078, 0.1092, 0.1107, 0.0892, 0.1383, 0.0985, 0.1110, 0.0870,
        0.1273, 0.1270, 0.1411, 0.1350, 0.1394, 0.1275, 0.1298, 0.1033, 0.1115,
        0.1356, 0.1221, 0.0973, 0.1210, 0.1346, 0.1106, 0.1189, 0.1305, 0.1421,
        0.0905, 0.1472, 0.1272, 0.1338, 0.1050, 0.1029, 0.1245, 0.1126, 0.1225,
        0.0800, 0.1504, 0.1319, 0.1106, 0.1100, 0.1503, 0.1084, 0.1144, 0.1446,
        0.1577])
net.mlp.net.3.batch_norm.running_var tensor([0.8981, 0.8474, 0.8475, 0.7879, 0.8585, 0.8342, 0.8223, 0.8818, 0.8268,
        0.8751, 0.8741, 0.8272, 0.8415, 0.8978, 0.8222, 0.9136, 0.8912, 0.8230,
        0.8795, 0.8346, 0.8401, 0.8367, 0.8140, 0.9366, 0.8329, 0.8688, 0.8047,
        0.8948, 0.8755, 0.9487, 0.8490, 0.8802, 0.8777, 0.8461, 0.8879, 0.8487,
        0.8626, 0.8645, 0.8243, 0.8595, 0.9120, 0.9028, 0.8857, 0.9776, 0.8642,
        0.8123, 0.9159, 0.8601, 0.8634, 0.8786, 0.8467, 0.8318, 0.8979, 0.8886,
        0.7985, 0.9243, 0.8313, 0.9569, 0.8429, 0.8822, 0.8663, 0.8606, 0.9023,
        0.9492])
net.mlp.net.3.batch_norm.num_batches_tracked tensor(3)
net.mlp.net.4.weight tensor([[ 0.0252,  0.0757, -0.0215, -0.0022,  0.0247,  0.0364,  0.0390, -0.0142,
         -0.0020, -0.0152, -0.0773,  0.0502, -0.0043, -0.0420,  0.0290,  0.0645,
         -0.0674, -0.0647, -0.0122,  0.0648, -0.0640,  0.0346, -0.0064,  0.0892,
          0.0609, -0.0302,  0.0156,  0.0325, -0.0819,  0.0714, -0.0173, -0.0211,
          0.0743, -0.0665, -0.0383,  0.0825, -0.0721, -0.0390, -0.0372,  0.0089,
          0.0024,  0.0609, -0.0413,  0.0424, -0.0902, -0.0168, -0.0415,  0.0656,
          0.0343, -0.0108, -0.0112, -0.0314,  0.0112, -0.0415, -0.0154, -0.0405,
         -0.0212, -0.0427, -0.0213, -0.0226,  0.0190,  0.0619, -0.0727, -0.0977]])
