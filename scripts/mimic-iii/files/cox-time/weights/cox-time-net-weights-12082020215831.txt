Weights: 
net.embeddings.embeddings.0.weight tensor([[ 0.0601, -0.2224],
        [-0.2148,  0.5276],
        [-0.3529, -0.3516],
        [ 0.5425, -0.1360]])
net.embeddings.embeddings.1.weight tensor([[ 0.3475,  0.4066],
        [ 0.1673,  0.5485],
        [ 0.3728, -0.5590],
        [ 0.1676, -0.0162],
        [-0.0828,  0.4962]])
net.embeddings.embeddings.2.weight tensor([[-0.1874, -0.3547, -0.0154],
        [-0.1671, -0.0533,  0.2823],
        [-0.1412,  0.3527,  0.1078],
        [-0.2351, -0.1982,  0.3803],
        [ 0.2824,  0.2166, -0.0818],
        [ 0.3135,  0.1959, -0.3778]])
net.embeddings.embeddings.3.weight tensor([[-0.1969,  0.2721],
        [ 0.2892, -0.4478],
        [-0.0651, -0.4857],
        [-0.5062, -0.5427]])
net.embeddings.embeddings.4.weight tensor([[-0.0600,  0.4993],
        [ 0.4549, -0.0083],
        [-0.5639, -0.4186],
        [ 0.0725,  0.5308]])
net.mlp.net.0.linear.weight tensor([[ 0.4896,  0.1607,  0.4262,  ..., -0.3440,  0.3583,  0.2927],
        [ 0.0354, -0.4791,  0.0925,  ...,  0.0814,  0.2057,  0.4018],
        [ 0.3198,  0.1552,  0.2547,  ...,  0.1559,  0.0543, -0.1359],
        ...,
        [ 0.3516, -0.3717, -0.2871,  ...,  0.4245,  0.0610, -0.3133],
        [-0.3695, -0.2827,  0.3177,  ..., -0.0691,  0.3181,  0.4104],
        [ 0.0840,  0.2560,  0.0510,  ..., -0.4576, -0.3916, -0.0490]])
net.mlp.net.0.linear.bias tensor([ 0.0768,  0.0758,  0.0730,  0.1926,  0.0091, -0.1672, -0.0651,  0.1595,
         0.0377, -0.1136, -0.0232, -0.0023, -0.0488, -0.1548, -0.1645,  0.0317,
        -0.1973,  0.1042, -0.0992,  0.0281,  0.2182,  0.2016, -0.1086, -0.0124,
         0.0991, -0.0976,  0.1677, -0.1205,  0.0437,  0.0539, -0.1177,  0.0088,
         0.1320,  0.1603,  0.0266,  0.1451, -0.0920, -0.0861,  0.1020, -0.0685,
         0.1165, -0.1876,  0.0021,  0.0389,  0.0521,  0.1476, -0.0350, -0.1187,
        -0.1171, -0.1235, -0.1248, -0.1562,  0.0439, -0.1950, -0.0331, -0.0636,
         0.1043,  0.2082,  0.0459, -0.1021,  0.1540,  0.0302,  0.1515, -0.0607])
net.mlp.net.0.batch_norm.weight tensor([0.8532, 0.8597, 0.8479, 0.8853, 0.8831, 0.8662, 0.9104, 0.8530, 0.8686,
        0.8866, 0.8735, 0.8593, 0.8526, 0.8655, 0.8971, 0.8604, 0.8853, 0.8756,
        0.8763, 0.8500, 0.8577, 0.8790, 0.8536, 0.8207, 0.8343, 0.8614, 0.8699,
        0.8287, 0.9062, 0.8175, 0.8539, 0.8631, 0.8478, 0.8785, 0.8485, 0.8468,
        0.8441, 0.8474, 0.8436, 0.8471, 0.8796, 0.8427, 0.8810, 0.8801, 0.8427,
        0.8273, 0.8621, 0.8585, 0.8382, 0.8468, 0.8336, 0.8987, 0.9197, 0.8530,
        0.8987, 0.8634, 0.8865, 0.8803, 0.8758, 0.8695, 0.8461, 0.8780, 0.8610,
        0.8414])
net.mlp.net.0.batch_norm.bias tensor([ 0.0042, -0.0117, -0.0040, -0.0086,  0.0035,  0.0068,  0.0184,  0.0127,
         0.0087, -0.0198, -0.0187,  0.0285, -0.0100, -0.0025, -0.0219, -0.0138,
        -0.0092, -0.0009, -0.0223,  0.0044,  0.0205,  0.0237,  0.0183,  0.0068,
         0.0215, -0.0249,  0.0010,  0.0096,  0.0190, -0.0074, -0.0069,  0.0170,
         0.0017, -0.0039, -0.0139, -0.0029, -0.0061, -0.0170,  0.0046, -0.0036,
        -0.0104, -0.0056, -0.0046,  0.0090,  0.0020,  0.0098, -0.0057,  0.0171,
        -0.0149, -0.0169,  0.0057, -0.0123, -0.0160,  0.0085,  0.0132, -0.0172,
         0.0090, -0.0231,  0.0029,  0.0044, -0.0083, -0.0024, -0.0019, -0.0070])
net.mlp.net.0.batch_norm.running_mean tensor([5.5963e-01, 2.3120e-01, 8.9693e-01, 6.7402e-01, 1.1896e-02, 2.3486e-02,
        7.6147e-02, 5.6105e-01, 2.9501e-01, 2.1509e-02, 4.9894e-02, 2.7417e-01,
        2.1147e-01, 5.5805e-03, 4.9674e-03, 8.9857e-01, 3.0327e-01, 3.5233e-02,
        4.3953e-01, 5.6334e-01, 8.5583e-01, 1.6402e-01, 1.0739e-01, 5.3676e-01,
        9.3097e-01, 7.1812e-01, 1.9105e-01, 3.8771e-01, 6.3996e-02, 9.5780e-01,
        7.0392e-01, 2.0225e-01, 4.7801e-01, 6.1381e-02, 4.4472e-01, 6.3366e-01,
        2.1940e-02, 3.0517e-01, 1.2201e-01, 5.8557e-01, 3.2811e-01, 1.9601e-01,
        3.4590e-01, 4.8095e-02, 4.1191e-02, 7.6751e-01, 7.5461e-01, 1.0287e-04,
        1.4861e-01, 1.6686e-01, 4.7479e-02, 1.4107e-01, 3.4549e-01, 8.1604e-03,
        9.3526e-02, 1.4740e-03, 1.8406e-01, 8.2330e-01, 4.0681e-02, 6.1034e-02,
        4.3082e-02, 9.5929e-02, 4.1115e-01, 1.1491e+00])
net.mlp.net.0.batch_norm.running_var tensor([2.6115e-01, 7.7256e-02, 3.2519e-01, 1.9153e-01, 3.3714e-03, 6.4630e-03,
        2.1230e-02, 1.8045e-01, 8.7985e-02, 1.4408e-02, 2.0702e-02, 8.7888e-02,
        7.6705e-02, 4.2083e-03, 3.1309e-03, 1.7449e-01, 9.8714e-01, 3.8375e-02,
        2.6419e-01, 1.0663e-01, 2.4565e-01, 7.7371e-02, 1.2058e-01, 1.5719e-01,
        2.5669e-01, 7.4505e-02, 5.5377e-02, 5.0725e-01, 2.5571e-02, 3.2876e-01,
        1.8862e-01, 7.3956e-02, 1.3425e-01, 2.7198e-02, 1.8787e-01, 6.3426e-01,
        8.5853e-03, 1.0386e-01, 4.2208e-02, 1.7189e-01, 2.9041e-01, 6.1920e-02,
        1.2667e-01, 4.7413e-02, 2.4307e-02, 1.9366e-01, 2.3717e-01, 1.8167e-05,
        4.3030e-02, 4.9970e-02, 2.3088e-02, 7.1834e-02, 4.3440e-02, 2.6734e-03,
        2.5492e-02, 2.4492e-04, 4.3830e-02, 3.1122e-01, 3.8324e-02, 8.7130e-02,
        1.8632e-02, 2.9732e-02, 1.6262e-01, 3.4519e-01])
net.mlp.net.0.batch_norm.num_batches_tracked tensor(200)
net.mlp.net.1.linear.weight tensor([[ 0.0320,  0.0734, -0.1341,  ..., -0.0619, -0.2373, -0.2207],
        [ 0.0325, -0.0528,  0.0824,  ...,  0.0817,  0.0937, -0.0221],
        [ 0.1486,  0.0161, -0.0690,  ...,  0.4299,  0.1294, -0.1097],
        ...,
        [-0.0166, -0.2194,  0.3580,  ..., -0.3137, -0.1000, -0.0253],
        [-0.1165,  0.0658, -0.0281,  ..., -0.1088,  0.0307, -0.0357],
        [ 0.0185, -0.0272,  0.0539,  ..., -0.0579, -0.1081,  0.0863]])
net.mlp.net.1.linear.bias tensor([ 0.0840,  0.0985, -0.0710, -0.0024,  0.0396,  0.0188, -0.0760, -0.0943,
         0.0211,  0.0125,  0.0334,  0.0277,  0.0630, -0.0896, -0.0150, -0.0320,
        -0.0846,  0.1156, -0.0656,  0.0510, -0.0863, -0.0564, -0.0423,  0.1111,
         0.0667, -0.0730, -0.0046, -0.0985, -0.0771,  0.0726, -0.0125,  0.0556,
         0.0930,  0.1049,  0.0474,  0.0467, -0.0817,  0.0801,  0.0615, -0.0025,
         0.0908,  0.0735,  0.1052,  0.0091,  0.0152, -0.0307,  0.0338, -0.0441,
         0.0398,  0.0937,  0.0267, -0.0751, -0.0932, -0.0589, -0.0817, -0.0704,
         0.1008, -0.1109,  0.0086,  0.0665,  0.0065,  0.0189, -0.1029, -0.0392])
net.mlp.net.1.batch_norm.weight tensor([0.8136, 0.8227, 0.8233, 0.8358, 0.8619, 0.8119, 0.8112, 0.8545, 0.8398,
        0.8195, 0.8737, 0.8291, 0.8420, 0.8669, 0.8498, 0.8299, 0.8721, 0.8631,
        0.8310, 0.8493, 0.8222, 0.8317, 0.8348, 0.8500, 0.8087, 0.8128, 0.8399,
        0.8116, 0.8391, 0.8432, 0.8494, 0.8383, 0.8599, 0.8466, 0.8388, 0.8136,
        0.8204, 0.8125, 0.8593, 0.8608, 0.8539, 0.8899, 0.8437, 0.8100, 0.9025,
        0.8341, 0.8450, 0.8704, 0.8698, 0.8187, 0.8172, 0.8142, 0.8673, 0.8411,
        0.8303, 0.8510, 0.8169, 0.8602, 0.8252, 0.8662, 0.8300, 0.8539, 0.8086,
        0.8499])
net.mlp.net.1.batch_norm.bias tensor([ 0.0114,  0.0172, -0.0078, -0.0007, -0.0038, -0.0028,  0.0117, -0.0124,
        -0.0204,  0.0229, -0.0003,  0.0099, -0.0116,  0.0188,  0.0069,  0.0096,
        -0.0176, -0.0098,  0.0271,  0.0164,  0.0085, -0.0109,  0.0227,  0.0258,
         0.0223,  0.0111, -0.0147,  0.0295,  0.0110, -0.0169, -0.0170,  0.0175,
         0.0104,  0.0105,  0.0105,  0.0148,  0.0111, -0.0033, -0.0050,  0.0013,
        -0.0115,  0.0167,  0.0026,  0.0095, -0.0057,  0.0023, -0.0149,  0.0182,
         0.0018,  0.0116,  0.0108, -0.0085, -0.0041,  0.0117,  0.0151, -0.0168,
        -0.0112, -0.0063,  0.0172,  0.0098,  0.0138,  0.0013, -0.0087, -0.0189])
net.mlp.net.1.batch_norm.running_mean tensor([0.6406, 0.5300, 0.4383, 0.5068, 0.5045, 0.5231, 0.4747, 0.4569, 0.4903,
        0.3888, 0.5233, 0.5302, 0.4107, 0.5265, 0.5255, 0.5564, 0.4256, 0.5534,
        0.5639, 0.4855, 0.4719, 0.4128, 0.4693, 0.5043, 0.5654, 0.4262, 0.6077,
        0.4005, 0.5113, 0.5039, 0.5802, 0.6255, 0.5291, 0.6657, 0.4295, 0.4730,
        0.5247, 0.6442, 0.6294, 0.5352, 0.5840, 0.4394, 0.4475, 0.5106, 0.4312,
        0.4401, 0.5140, 0.4697, 0.5074, 0.4465, 0.6752, 0.5051, 0.5114, 0.4995,
        0.5249, 0.4361, 0.5719, 0.4372, 0.4678, 0.4631, 0.5991, 0.5859, 0.4610,
        0.3883])
net.mlp.net.1.batch_norm.running_var tensor([1.2186, 0.6942, 0.5468, 0.5884, 1.2839, 0.6781, 1.0557, 0.4612, 1.1714,
        0.3662, 0.6572, 0.8472, 0.6422, 0.7256, 0.6061, 0.6526, 0.4278, 0.5368,
        0.7352, 0.4945, 0.7978, 0.9815, 0.6155, 0.6109, 1.3324, 0.6485, 1.1557,
        0.9391, 0.8322, 0.5826, 1.2326, 1.1326, 0.7414, 1.0746, 0.5742, 0.4692,
        0.5831, 0.7003, 0.9810, 0.7834, 1.1763, 0.3984, 0.3884, 0.7373, 0.4120,
        0.4595, 0.4132, 0.5223, 0.7325, 0.4105, 1.2390, 0.7123, 0.7989, 1.9327,
        0.5878, 1.0865, 0.7598, 0.5429, 0.6888, 0.4480, 1.1320, 0.6601, 1.1281,
        0.3562])
net.mlp.net.1.batch_norm.num_batches_tracked tensor(200)
net.mlp.net.2.weight tensor([[-0.0465, -0.0234,  0.0490,  0.0115,  0.0136,  0.0339, -0.0314,  0.0321,
          0.0247, -0.0399,  0.0156, -0.0236, -0.0050, -0.0331,  0.0027, -0.0171,
          0.0310, -0.0110, -0.0172,  0.0112, -0.0352,  0.0188, -0.0017, -0.0530,
         -0.0349, -0.0399,  0.0014, -0.0344,  0.0049,  0.0149,  0.0291, -0.0277,
          0.0179,  0.0050, -0.0347, -0.0191, -0.0211,  0.0307,  0.0051,  0.0074,
          0.0115, -0.0253, -0.0178, -0.0399,  0.0317,  0.0013,  0.0388, -0.0353,
          0.0544, -0.0200, -0.0316,  0.0212,  0.0151,  0.0002, -0.0061,  0.0227,
          0.0211,  0.0056, -0.0141,  0.0157, -0.0111, -0.0178,  0.0380,  0.0157]])
