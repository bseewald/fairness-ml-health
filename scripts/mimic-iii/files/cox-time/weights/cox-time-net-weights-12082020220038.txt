Weights: 
net.embeddings.embeddings.0.weight tensor([[ 0.3527,  0.1770],
        [-0.5275,  0.3536],
        [-0.3285, -0.2529],
        [-0.2725,  0.0997]])
net.embeddings.embeddings.1.weight tensor([[ 0.0144,  0.2042],
        [-0.5618, -0.0934],
        [ 0.0287, -0.4678],
        [-0.1781,  0.0855],
        [ 0.4618, -0.4772]])
net.embeddings.embeddings.2.weight tensor([[ 0.1863, -0.3703,  0.2345],
        [-0.2302,  0.3160, -0.6765],
        [-0.2258,  0.1464,  0.1060],
        [-0.0373,  0.1099, -0.2373],
        [-0.3951,  0.2113, -0.1567],
        [-0.3520, -0.1164, -0.0496]])
net.embeddings.embeddings.3.weight tensor([[ 0.3061,  0.1489],
        [-0.1170, -0.5512],
        [ 0.5003,  0.1921],
        [ 0.4155,  0.9414]])
net.embeddings.embeddings.4.weight tensor([[-0.5941, -0.2580],
        [ 0.5264, -0.0330],
        [ 0.3729, -0.7246],
        [-0.3642, -0.1500]])
net.mlp.net.0.linear.weight tensor([[ 0.1903, -0.0198,  0.1908,  ..., -0.0429, -0.1462,  0.1710],
        [ 0.2344,  0.0709,  0.3460,  ...,  0.0372,  0.0834,  0.0565],
        [-0.4242,  0.2501,  0.2739,  ...,  0.5487,  0.3726, -0.1559],
        ...,
        [ 0.3086,  0.3123, -0.6254,  ...,  0.1268, -0.0546, -0.2856],
        [-0.1002, -0.2189, -0.1085,  ..., -0.4335,  0.4916,  0.3196],
        [ 0.3058, -0.2179, -0.2733,  ..., -0.1516, -0.0410, -0.1968]])
net.mlp.net.0.linear.bias tensor([ 0.0392,  0.0280,  0.2234, -0.2658,  0.0508,  0.0298, -0.0997, -0.1843,
        -0.1312, -0.0758,  0.0435,  0.0284, -0.0056,  0.1229, -0.1602,  0.0385,
         0.1118, -0.0007, -0.0803,  0.2142,  0.2155, -0.1382, -0.0659,  0.0902,
        -0.2206,  0.2299,  0.1374, -0.1226, -0.0184, -0.0125,  0.0667,  0.0678,
         0.1388,  0.0011, -0.1634,  0.1842,  0.1667,  0.0678,  0.0497, -0.2247,
         0.0705,  0.0648, -0.0594, -0.0767, -0.0834, -0.1010,  0.0010, -0.0315,
         0.0254,  0.1149,  0.0465, -0.1658,  0.0684,  0.1480, -0.0970,  0.0589,
        -0.0649, -0.1126, -0.1921, -0.2999, -0.0800, -0.1299, -0.1963,  0.1516])
net.mlp.net.0.batch_norm.weight tensor([0.8785, 0.8600, 0.8940, 0.7769, 0.8709, 0.9323, 0.9105, 0.9277, 0.7279,
        1.1130, 0.9991, 1.0758, 0.7449, 0.8819, 0.9388, 0.9127, 0.9308, 0.8073,
        0.9906, 0.8836, 1.0218, 0.9231, 0.8590, 1.0454, 0.9477, 1.1967, 0.8849,
        0.9124, 0.8502, 0.8731, 0.8728, 0.7561, 1.0285, 0.8824, 0.9103, 0.8846,
        0.9574, 1.0254, 0.9135, 0.7666, 0.9919, 0.7609, 0.9583, 1.0077, 0.9580,
        0.8229, 0.9629, 0.7353, 1.0539, 0.9565, 0.9033, 0.7562, 0.8217, 0.9366,
        0.9884, 0.8998, 0.9441, 0.9565, 0.7344, 0.9498, 0.8284, 1.0291, 0.9399,
        0.8848])
net.mlp.net.0.batch_norm.bias tensor([ 0.0441,  0.0707, -0.0220, -0.0865,  0.0106, -0.1190, -0.0683, -0.0070,
         0.0206, -0.0553, -0.0160, -0.0430,  0.0220,  0.0722, -0.0451, -0.0147,
        -0.0049, -0.0628, -0.0522,  0.0450,  0.0966, -0.0311, -0.1161, -0.1544,
        -0.0825, -0.0905,  0.0878, -0.0014, -0.0077,  0.0288, -0.0443,  0.0899,
        -0.0060, -0.0467,  0.0124,  0.0565, -0.0763,  0.0169, -0.0458,  0.0463,
         0.0865, -0.0022, -0.0444,  0.0550,  0.0915,  0.0245, -0.0139, -0.0465,
        -0.0146,  0.1306, -0.0020, -0.0627,  0.0933,  0.0526, -0.0293, -0.0213,
         0.0027, -0.0027, -0.0815,  0.0297,  0.0863, -0.0144,  0.0864, -0.0831])
net.mlp.net.0.batch_norm.running_mean tensor([5.9861e-01, 4.2282e-01, 1.1106e+00, 5.0912e-01, 1.7378e-01, 1.9815e-01,
        1.3145e-01, 5.2128e-01, 2.3971e-01, 1.0892e-02, 2.3657e-01, 4.5209e-01,
        3.5043e-02, 1.2265e-01, 2.0718e-02, 1.3257e-01, 3.7232e-02, 1.7603e-01,
        4.1761e-01, 2.1270e-01, 2.6736e-01, 8.7552e-02, 1.8726e-02, 1.8327e-01,
        5.6958e-03, 1.1492e-01, 9.2412e-03, 4.6019e-01, 6.0831e-01, 1.5372e-01,
        5.7318e-02, 9.7124e-02, 1.3566e+00, 4.1646e-01, 8.8390e-02, 5.1416e-01,
        2.8708e-01, 5.8911e-01, 1.6667e-01, 2.0656e-01, 1.1095e+00, 2.7270e-01,
        2.3007e-01, 1.4846e-01, 2.6507e-02, 1.3975e+00, 3.9777e-03, 7.2626e-02,
        9.0572e-01, 1.0484e+00, 8.2315e-02, 5.2354e-03, 4.3329e-01, 1.2235e-01,
        2.4919e-03, 4.2090e-01, 1.5850e-01, 3.6717e-03, 1.3385e+00, 5.8214e-04,
        1.2500e-01, 6.5872e-02, 1.6620e-01, 4.8700e-02])
net.mlp.net.0.batch_norm.running_var tensor([2.2188e-01, 1.7179e-01, 2.4793e-01, 9.7150e-02, 2.8265e-01, 1.1169e-01,
        1.6669e-01, 2.9225e-01, 6.9418e-02, 3.9888e-03, 7.0669e-02, 1.5031e-01,
        9.4608e-03, 3.7631e-02, 8.9517e-03, 4.6243e-02, 1.2309e-02, 7.0762e-02,
        6.1005e-01, 2.4520e-01, 1.0232e-01, 1.1449e-01, 4.8905e-03, 5.5283e-02,
        2.3400e-03, 3.7284e-02, 3.5801e-03, 1.1232e-01, 1.3739e-01, 5.4306e-02,
        2.5333e-02, 3.5352e-02, 1.5040e-01, 1.8147e-01, 2.7816e-01, 3.9109e-01,
        1.1166e-01, 1.7784e-01, 7.9935e-02, 8.2452e-02, 1.7520e-01, 2.9324e-01,
        8.4495e-02, 5.6037e-02, 1.0036e-02, 4.5384e-01, 1.0317e-03, 1.0733e-01,
        8.7605e-02, 9.1497e-02, 2.6513e-02, 1.4322e-03, 1.6456e-01, 5.0698e-02,
        6.2162e-04, 2.0004e-01, 4.0419e-02, 1.9684e-03, 2.9437e-01, 1.3302e-04,
        2.2133e-01, 2.9539e-02, 7.8196e-02, 1.8555e-02])
net.mlp.net.0.batch_norm.num_batches_tracked tensor(174)
net.mlp.net.1.linear.weight tensor([[-0.0225,  0.0689, -0.1326,  ...,  0.2689,  0.1196, -0.0420],
        [ 0.1286,  0.1585, -0.0265,  ...,  0.1625,  0.0499, -0.1406],
        [-0.0671, -0.0337,  0.2661,  ..., -0.1551,  0.0164, -0.1232],
        ...,
        [ 0.0065, -0.1596,  0.0229,  ..., -0.1218,  0.0409,  0.0129],
        [ 0.0604, -0.0498, -0.3378,  ..., -0.1866,  0.1953, -0.2293],
        [ 0.0191, -0.1171, -0.1951,  ...,  0.2317,  0.2024, -0.0729]])
net.mlp.net.1.linear.bias tensor([-0.1423,  0.1164,  0.1255, -0.1019,  0.0397,  0.1844,  0.0585,  0.1809,
        -0.0594,  0.0416,  0.0309,  0.1142, -0.0498, -0.0773,  0.1513,  0.1187,
         0.0571,  0.0412,  0.1033, -0.0472, -0.0638,  0.0893,  0.0644, -0.1058,
         0.0431,  0.1502, -0.0559, -0.0911, -0.0122, -0.0010, -0.1082, -0.0937,
        -0.1099,  0.1318,  0.1251,  0.0002, -0.0290,  0.0087,  0.0696,  0.0688,
         0.1120, -0.0877, -0.1438, -0.0245,  0.1420,  0.1315,  0.0252,  0.1763,
         0.2023,  0.0206, -0.0460, -0.0421,  0.0053, -0.0610, -0.0952, -0.0187,
        -0.0413,  0.1740, -0.0023, -0.0366, -0.0863,  0.0740, -0.0765, -0.0131])
net.mlp.net.1.batch_norm.weight tensor([0.8433, 0.8752, 0.8644, 0.8703, 0.9288, 0.9991, 0.9118, 1.0221, 0.8406,
        0.8690, 0.8862, 0.9610, 0.7970, 1.0322, 1.0104, 0.9357, 0.8212, 0.8892,
        0.9767, 0.8416, 0.9165, 1.0261, 0.9782, 0.9451, 0.7924, 0.9055, 0.8985,
        0.8973, 0.8773, 0.7837, 0.9121, 0.8234, 0.8068, 0.8916, 0.9810, 0.9259,
        1.0996, 0.8797, 0.7648, 0.9104, 0.9449, 0.8795, 0.8668, 0.8467, 0.9503,
        0.9786, 0.9688, 0.9103, 1.1125, 0.9241, 0.9144, 0.8312, 0.9451, 0.9835,
        0.9480, 0.9061, 0.9479, 0.8048, 0.9443, 0.9704, 0.8798, 0.9332, 0.9409,
        1.0147])
net.mlp.net.1.batch_norm.bias tensor([ 0.1123, -0.0914,  0.0596,  0.0380,  0.0093,  0.0541, -0.0894, -0.0920,
        -0.0637,  0.0505, -0.0273,  0.0185, -0.0903,  0.0876, -0.0462, -0.0438,
        -0.0854, -0.1411,  0.0179, -0.0496, -0.0779, -0.0737, -0.0368, -0.0045,
        -0.0328,  0.0140, -0.0155,  0.0167,  0.0540, -0.0667,  0.0853,  0.0015,
         0.0826,  0.0475,  0.1095,  0.0877,  0.0021, -0.0238,  0.0472,  0.0511,
        -0.1439, -0.1036,  0.0424, -0.0642,  0.0590,  0.0334, -0.0851, -0.1186,
         0.1023, -0.0516,  0.0180,  0.1107, -0.2171,  0.0004, -0.0154, -0.0624,
         0.0403, -0.0786, -0.0981, -0.0118,  0.0563, -0.0376, -0.0080,  0.1270])
net.mlp.net.1.batch_norm.running_mean tensor([0.5932, 0.7693, 0.9593, 0.8534, 0.6315, 1.1062, 1.2197, 1.0565, 0.6688,
        0.7188, 0.6738, 1.0020, 0.7445, 0.6685, 1.1580, 0.9001, 0.7736, 0.9072,
        0.7683, 0.5393, 0.5680, 0.8170, 0.7580, 0.8584, 0.6612, 0.7195, 0.7022,
        1.0446, 0.7299, 0.6912, 0.6142, 0.6383, 0.7329, 0.7456, 1.0124, 0.7771,
        0.8667, 0.7316, 0.6411, 0.5676, 1.0623, 0.7291, 0.5195, 0.7259, 0.8446,
        1.0476, 0.7595, 1.2176, 1.2223, 1.0756, 0.7661, 0.5444, 0.7756, 1.0045,
        0.5428, 0.5888, 1.0366, 0.8932, 0.6895, 0.7545, 0.6391, 0.6508, 0.8591,
        0.9451])
net.mlp.net.1.batch_norm.running_var tensor([1.0747, 3.0736, 1.3406, 1.4900, 2.7988, 3.4115, 2.2706, 1.2820, 1.9478,
        1.2642, 1.6590, 1.8146, 1.5449, 1.6114, 3.1984, 2.1543, 1.7912, 1.7618,
        1.3937, 0.7469, 1.1951, 1.9739, 3.3122, 2.2279, 1.3189, 0.7985, 1.4740,
        3.0251, 1.6338, 1.6667, 1.9229, 1.5209, 2.8829, 1.6462, 2.2020, 1.1989,
        4.0084, 1.5078, 0.8539, 1.8858, 2.1640, 1.6109, 1.5063, 2.0413, 2.1429,
        2.8313, 2.7967, 2.9367, 3.2223, 2.1417, 1.3422, 1.2824, 1.7582, 2.9595,
        1.0147, 1.7447, 3.2936, 3.0266, 1.7223, 1.6676, 1.5791, 1.7863, 2.3854,
        2.6018])
net.mlp.net.1.batch_norm.num_batches_tracked tensor(174)
net.mlp.net.2.linear.weight tensor([[ 0.1922, -0.2267, -0.0776,  ...,  0.0892,  0.1696, -0.2265],
        [ 0.0810,  0.3145, -0.0452,  ...,  0.3511,  0.2284, -0.0021],
        [-0.0697,  0.2398,  0.2290,  ..., -0.0277, -0.1834,  0.2010],
        ...,
        [ 0.2734,  0.0967, -0.0927,  ..., -0.0511,  0.3739,  0.1940],
        [ 0.0400,  0.1209, -0.2858,  ..., -0.0215,  0.1458,  0.2894],
        [ 0.0041,  0.3225, -0.0669,  ..., -0.1930,  0.1279,  0.0893]])
net.mlp.net.2.linear.bias tensor([ 0.1632,  0.1943,  0.0415,  0.0211, -0.0622, -0.0526,  0.0412,  0.0278,
         0.1946,  0.0192,  0.0856, -0.0378, -0.0606,  0.0734,  0.0689,  0.0555,
         0.2063, -0.0165,  0.1494,  0.0361,  0.0524,  0.0939, -0.0904,  0.0814,
         0.0120,  0.0858,  0.1174, -0.0568,  0.0128,  0.0117,  0.1349, -0.0327,
        -0.0198, -0.0890,  0.0084, -0.0554,  0.0321, -0.0620,  0.0338, -0.0141,
         0.1580,  0.0734,  0.0315,  0.1183, -0.0692,  0.1328,  0.1880,  0.0446,
        -0.0097,  0.0260,  0.1495,  0.0761,  0.0636, -0.0241, -0.0201,  0.0377,
        -0.0036,  0.0645, -0.0107, -0.0601,  0.0277,  0.0079,  0.1359,  0.0216])
net.mlp.net.2.batch_norm.weight tensor([0.9440, 0.9344, 0.7903, 0.9055, 0.9746, 0.9217, 0.8604, 0.9487, 0.9764,
        0.9178, 0.9563, 0.8413, 0.9193, 0.9447, 0.8135, 0.8034, 0.9585, 0.8529,
        0.9213, 0.8238, 0.9509, 0.9001, 0.9191, 0.8357, 0.9246, 1.0906, 0.9741,
        0.9557, 0.7887, 0.9239, 1.0513, 0.9250, 0.9015, 0.8530, 0.8259, 0.8979,
        1.0474, 0.8856, 0.9839, 0.8410, 1.0075, 0.8754, 0.9677, 0.9185, 0.9222,
        0.9903, 0.9082, 0.8680, 0.9957, 0.9785, 0.9268, 0.9101, 0.7691, 0.8928,
        0.8284, 0.9078, 0.9971, 0.8423, 0.8210, 0.8708, 0.9894, 0.8578, 0.9846,
        0.8955])
net.mlp.net.2.batch_norm.bias tensor([-0.0186,  0.0404, -0.0041, -0.1442, -0.0100,  0.0599,  0.0650, -0.0053,
        -0.0128,  0.0886,  0.0552,  0.1692,  0.0272,  0.0113,  0.0535,  0.0895,
         0.0959,  0.0745,  0.1568,  0.0108, -0.0378, -0.0333, -0.1181,  0.0632,
        -0.0647,  0.0303,  0.0475,  0.1022,  0.0729, -0.0236, -0.0517,  0.1581,
        -0.0217, -0.0169,  0.0052,  0.0495,  0.0450,  0.0627,  0.0314,  0.0017,
        -0.0049,  0.0868, -0.0764, -0.0174,  0.0234,  0.0334, -0.0464,  0.0938,
         0.0114,  0.0060,  0.1332, -0.0908, -0.0021, -0.0099,  0.0191,  0.0976,
        -0.0538,  0.0994,  0.1067,  0.0645,  0.0211,  0.0999, -0.0181, -0.0143])
net.mlp.net.2.batch_norm.running_mean tensor([1.1176, 1.0928, 0.7058, 0.9532, 0.7151, 0.7914, 1.2026, 1.1950, 0.8938,
        0.9368, 1.0775, 0.6395, 1.0040, 0.9719, 1.1771, 0.6087, 1.3927, 0.5903,
        0.8519, 0.7366, 1.0263, 0.8327, 0.8056, 0.8559, 0.9335, 1.1601, 1.1632,
        0.6391, 0.5707, 0.9517, 1.5383, 0.8342, 0.6696, 0.6945, 0.7638, 0.4787,
        0.8388, 0.9326, 1.0083, 0.7251, 1.0752, 0.7279, 0.6871, 0.8683, 0.8924,
        1.2551, 1.3000, 1.0918, 1.1400, 0.8421, 0.9546, 0.8750, 0.8423, 0.7397,
        0.6784, 0.6635, 0.9224, 1.1185, 0.6579, 0.7221, 0.9806, 0.6647, 1.0171,
        0.7610])
net.mlp.net.2.batch_norm.running_var tensor([2.7403, 3.9395, 1.4202, 1.5872, 2.3470, 2.5475, 2.5685, 2.2755, 2.5783,
        3.6385, 4.2452, 1.9212, 4.7077, 3.5573, 2.4047, 1.1068, 5.4333, 1.0067,
        2.2778, 1.5510, 4.4007, 1.8274, 3.2570, 1.0510, 2.3210, 4.7007, 2.4184,
        1.8267, 1.3517, 1.3151, 3.6174, 2.6648, 2.6330, 1.7583, 2.0162, 0.4926,
        2.6694, 1.4509, 4.1174, 2.5568, 3.7818, 2.0276, 1.2833, 1.2535, 2.5672,
        4.7666, 1.9470, 2.8699, 2.6881, 1.4958, 1.7284, 3.5430, 2.2881, 2.4616,
        2.3176, 1.5234, 3.0091, 1.4246, 1.7511, 1.6742, 3.8189, 1.6659, 4.1703,
        2.2674])
net.mlp.net.2.batch_norm.num_batches_tracked tensor(174)
net.mlp.net.3.linear.weight tensor([[ 0.0276, -0.0367, -0.0288,  ..., -0.0931, -0.0036, -0.2095],
        [ 0.1202,  0.0140,  0.1817,  ..., -0.1892, -0.0639,  0.1845],
        [ 0.1563,  0.1152, -0.1882,  ...,  0.3529,  0.0549, -0.1643],
        ...,
        [-0.0136, -0.2741, -0.1482,  ...,  0.0075, -0.0800, -0.2679],
        [-0.0190,  0.2134, -0.0870,  ..., -0.1566,  0.3802, -0.0615],
        [-0.2837,  0.3237, -0.0870,  ...,  0.1007,  0.1546, -0.1936]])
net.mlp.net.3.linear.bias tensor([ 0.0163, -0.0388, -0.0582,  0.1679, -0.0442,  0.0889,  0.1227, -0.0725,
         0.1062,  0.0194,  0.1392,  0.0725, -0.0134,  0.1374,  0.0455,  0.1767,
         0.1744, -0.0166,  0.1054,  0.2226,  0.0511,  0.0330,  0.1449,  0.3572,
        -0.0078, -0.0918,  0.1975,  0.0025,  0.1118,  0.1633,  0.0673, -0.0526,
        -0.0387,  0.1311,  0.1632, -0.0110, -0.1820,  0.0830,  0.1954,  0.1039,
         0.2359, -0.0773,  0.1674,  0.2098, -0.0720,  0.1147,  0.0994, -0.1954,
         0.0815, -0.1188, -0.1887,  0.0398,  0.0107,  0.0986, -0.0696, -0.1259,
         0.0795, -0.1091,  0.0647,  0.0460,  0.0292,  0.0970, -0.0150, -0.0254])
net.mlp.net.3.batch_norm.weight tensor([0.7835, 0.7681, 0.8218, 0.8504, 0.7932, 0.7645, 0.8113, 0.7917, 0.7644,
        0.7033, 0.8096, 0.8148, 0.7943, 0.7638, 0.8740, 0.8168, 0.8121, 0.7247,
        0.7589, 0.8303, 0.8368, 0.8303, 0.8509, 0.8511, 0.7759, 0.7397, 0.8368,
        0.7671, 0.7977, 0.9032, 0.7803, 0.7652, 0.7448, 0.8333, 0.7299, 0.8116,
        0.7748, 0.7485, 0.8696, 0.7981, 0.8064, 0.7462, 0.7678, 0.7895, 0.7723,
        0.7941, 0.8184, 0.7690, 0.8712, 0.7952, 0.7732, 0.7625, 0.8401, 0.8585,
        0.7791, 0.7848, 0.8460, 0.8005, 0.7830, 0.8264, 0.8163, 0.7864, 0.8068,
        0.6918])
net.mlp.net.3.batch_norm.bias tensor([-0.0512,  0.1028, -0.0066,  0.0258, -0.0378,  0.0248, -0.0008,  0.0466,
        -0.0081, -0.0748,  0.1085,  0.1153, -0.0169, -0.0004, -0.0943, -0.0269,
        -0.0364,  0.1460,  0.0004,  0.0290,  0.1476,  0.0450, -0.0512,  0.1299,
         0.1191,  0.0715, -0.0466, -0.0040,  0.0399, -0.0023, -0.0111, -0.0606,
         0.0422,  0.0327,  0.0132,  0.0121, -0.1242, -0.0172,  0.0671,  0.0227,
         0.0395, -0.0469,  0.1164, -0.0237, -0.0502,  0.0277,  0.0267, -0.0381,
         0.0892, -0.0362,  0.0906,  0.0731,  0.0056, -0.0465, -0.0368,  0.0535,
         0.0581,  0.0129,  0.0324,  0.0085, -0.0562, -0.0006, -0.1062, -0.0857])
net.mlp.net.3.batch_norm.running_mean tensor([0.6347, 0.8308, 0.7506, 1.4129, 1.0996, 1.5235, 0.9769, 0.3864, 0.7361,
        0.5923, 1.1548, 1.2417, 0.6443, 1.1643, 1.3458, 1.3320, 1.3611, 0.7657,
        0.7561, 1.1919, 1.0301, 0.8350, 0.8245, 1.2198, 0.9013, 0.7707, 0.9856,
        0.4667, 0.8878, 1.4914, 1.0484, 0.9789, 0.7498, 1.2749, 1.0622, 0.7469,
        0.6527, 0.8354, 1.1304, 1.1553, 1.4730, 0.5790, 0.6544, 1.5152, 0.6203,
        0.9797, 0.9657, 0.4790, 0.8635, 0.6124, 0.7159, 0.7782, 0.8331, 1.5494,
        0.5967, 0.8612, 1.1807, 0.7098, 1.0195, 0.9619, 0.9122, 1.1185, 1.2576,
        0.5648])
net.mlp.net.3.batch_norm.running_var tensor([0.9629, 3.3758, 2.9091, 6.2834, 2.1456, 2.8113, 2.0066, 0.8152, 2.5012,
        1.0939, 6.4770, 7.0547, 2.3121, 1.4942, 2.2187, 2.5196, 6.3166, 2.0772,
        2.0930, 1.6393, 4.9502, 3.1643, 3.0323, 4.2565, 3.4337, 2.4816, 3.4216,
        1.1055, 3.7870, 2.5953, 4.1822, 2.1377, 1.9931, 7.3468, 1.4984, 2.0646,
        2.5191, 0.9457, 5.8057, 1.8371, 2.3780, 1.4582, 1.2040, 2.2968, 0.7256,
        3.3043, 4.6163, 1.0752, 2.2149, 2.3343, 2.1854, 1.0071, 1.4220, 3.7850,
        0.5137, 4.5129, 1.3889, 3.7326, 4.3905, 3.9165, 3.8330, 2.3795, 7.9235,
        0.6099])
net.mlp.net.3.batch_norm.num_batches_tracked tensor(174)
net.mlp.net.4.weight tensor([[-0.0138, -0.0041, -0.0170, -0.0188,  0.0305,  0.0043,  0.0278, -0.0232,
         -0.0147, -0.0083, -0.0328, -0.0026, -0.0035,  0.0339,  0.0324,  0.0134,
         -0.0196,  0.0171, -0.0223,  0.0216, -0.0120, -0.0475, -0.0348, -0.0371,
         -0.0366, -0.0060, -0.0316, -0.0024, -0.0186,  0.0562, -0.0210,  0.0293,
          0.0038, -0.0414,  0.0125, -0.0383, -0.0216,  0.0125, -0.0462,  0.0365,
          0.0337, -0.0267,  0.0020,  0.0168, -0.0006, -0.0161, -0.0140, -0.0072,
         -0.0432, -0.0135,  0.0052, -0.0110,  0.0119,  0.0310, -0.0025, -0.0032,
          0.0488, -0.0190, -0.0187, -0.0339, -0.0506,  0.0405, -0.0328,  0.0257]])
