Weights: 
net.embeddings.embeddings.0.weight tensor([[ 0.1173, -0.1700],
        [-0.1366, -0.0907],
        [ 0.1435, -0.1002],
        [-0.0226, -0.1984]])
net.embeddings.embeddings.1.weight tensor([[-0.1770, -0.0104],
        [ 0.0811, -0.0890],
        [-0.0466,  0.0219],
        [ 0.0293,  0.1377],
        [-0.0075, -0.2782]])
net.embeddings.embeddings.2.weight tensor([[ 0.0289, -0.1261,  0.0412],
        [ 0.0577, -0.2065,  0.1501],
        [-0.1602, -0.0469,  0.2007],
        [ 0.1502, -0.0478,  0.1559],
        [-0.1905,  0.1754, -0.2246],
        [ 0.1582,  0.1125,  0.0475]])
net.embeddings.embeddings.3.weight tensor([[ 0.1600, -0.1024],
        [ 0.0684,  0.2604],
        [-0.0796, -0.2196],
        [-0.5194, -0.5247]])
net.embeddings.embeddings.4.weight tensor([[ 0.0113,  0.2919],
        [-0.3770, -0.2486],
        [ 0.2076,  0.3608],
        [ 0.3089, -0.1209]])
net.mlp.net.0.linear.weight tensor([[ 0.0253, -0.0368, -0.0104,  ..., -0.3655,  0.0675,  0.0665],
        [-0.1795, -0.0543, -0.0554,  ...,  0.0311, -0.0294, -0.2913],
        [ 0.1930, -0.0188, -0.0656,  ...,  0.0620,  0.2051, -0.0735],
        ...,
        [-0.0549,  0.1030, -0.1795,  ..., -0.2318,  0.0861,  0.1425],
        [ 0.0825, -0.2431, -0.0524,  ...,  0.2458,  0.2901,  0.2373],
        [ 0.0493,  0.0514, -0.1174,  ...,  0.2208,  0.3977,  0.0563]])
net.mlp.net.0.linear.bias tensor([ 0.0585, -0.1962, -0.1098, -0.0379, -0.1132, -0.0100, -0.1300,  0.0118,
         0.0245, -0.0410,  0.1611,  0.1564, -0.1125,  0.1579,  0.0331,  0.1171,
         0.1103,  0.0659,  0.0436, -0.0298,  0.0230,  0.0436, -0.0812, -0.1006,
        -0.0195, -0.1514, -0.0215,  0.1216,  0.0316,  0.0832, -0.2047,  0.2107,
         0.0031, -0.0175, -0.1525, -0.0809,  0.1417,  0.0544,  0.1741,  0.0420,
         0.0301, -0.0319, -0.0865, -0.1408,  0.1058,  0.0794, -0.0443,  0.0734,
         0.1163, -0.0112, -0.0800,  0.1319, -0.0278, -0.0103,  0.0690, -0.2584,
         0.0832, -0.1239, -0.1283,  0.0378, -0.1119, -0.0794,  0.1167,  0.1160])
net.mlp.net.0.batch_norm.weight tensor([0.5859, 0.5229, 0.5849, 0.4762, 0.4917, 0.6108, 0.5885, 0.4357, 0.5811,
        0.5719, 0.7009, 0.5761, 0.4894, 0.5346, 0.5801, 0.5773, 0.4893, 0.4703,
        0.5650, 0.5559, 0.6386, 0.4287, 0.5702, 0.6507, 0.6287, 0.6671, 0.7609,
        0.5757, 0.5511, 0.5369, 0.5985, 0.5940, 0.4738, 0.6294, 0.6745, 0.4878,
        0.4748, 0.5145, 0.5403, 0.6254, 0.5163, 0.4529, 0.7118, 0.5764, 0.5738,
        0.4581, 0.4669, 0.5133, 0.4832, 0.5861, 0.5972, 0.5118, 0.6169, 0.5744,
        0.6181, 0.5084, 0.4917, 0.5621, 0.5340, 0.6128, 0.5030, 0.6222, 0.5384,
        0.5539])
net.mlp.net.0.batch_norm.bias tensor([-0.0399, -0.1091,  0.0586, -0.0836, -0.0309,  0.0381, -0.0508,  0.0267,
        -0.0002, -0.1630,  0.0053,  0.0218, -0.0043, -0.0993,  0.0093, -0.0049,
         0.0064, -0.0558,  0.0194,  0.0287, -0.0060,  0.0571,  0.0955, -0.0415,
        -0.0160,  0.0419,  0.0553,  0.0821,  0.0785,  0.0041,  0.0612,  0.0006,
         0.0730,  0.0483,  0.0306,  0.1329, -0.0040,  0.0644,  0.0486,  0.1150,
        -0.0249, -0.0372,  0.0582,  0.0230,  0.0998,  0.0098,  0.0383,  0.0058,
         0.0266, -0.0053, -0.1273,  0.0500,  0.0478, -0.0325, -0.0244, -0.0440,
         0.0256, -0.0742,  0.0816, -0.0125,  0.0412, -0.0631,  0.0788,  0.0446])
net.mlp.net.0.batch_norm.running_mean tensor([3.8509e-01, 3.2647e-05, 2.9209e-02, 1.4667e-01, 9.1640e-02, 1.2569e-01,
        1.0067e-03, 2.7930e-03, 6.9301e-02, 2.5662e-01, 7.7555e-01, 3.7506e-01,
        2.3259e-02, 6.4828e-01, 4.6573e-01, 3.6489e-01, 4.5240e-02, 4.1175e-01,
        1.8621e-02, 7.9827e-02, 1.3850e-01, 5.6454e-02, 8.9251e-02, 4.2958e-03,
        1.3182e-03, 5.3900e-03, 4.0880e-02, 3.2686e-01, 3.2610e-02, 1.0398e+00,
        1.3364e-02, 6.6730e-01, 1.1391e-01, 5.1975e-01, 1.0682e-03, 5.0506e-02,
        3.4137e-01, 2.5284e-01, 6.0200e-01, 2.5674e-02, 1.3986e-01, 6.5649e-02,
        6.3493e-04, 5.8560e-02, 4.7115e-01, 5.3066e-01, 5.7454e-02, 3.3405e-02,
        4.0628e-01, 2.6866e-01, 1.8360e-01, 4.6855e-02, 3.3687e-03, 1.2270e-02,
        2.1953e-01, 1.0872e-01, 7.1527e-01, 4.7931e-01, 9.6066e-03, 3.7090e-01,
        5.8359e-02, 1.4263e-01, 3.5903e-01, 1.9033e-01])
net.mlp.net.0.batch_norm.running_var tensor([8.4656e-02, 1.1560e-05, 1.4860e-02, 4.5681e-02, 4.6907e-02, 1.0882e-01,
        7.3237e-05, 3.8833e-04, 1.3513e-02, 6.0308e-02, 1.6576e-01, 1.6953e-01,
        5.1737e-03, 3.9919e-02, 7.0933e-02, 6.8764e-02, 1.8611e-02, 5.0789e-02,
        1.2516e-02, 3.1877e-02, 3.9903e-02, 2.2957e-02, 3.2647e-02, 5.6738e-04,
        1.9456e-04, 1.0073e-03, 8.2501e-03, 2.1419e-01, 5.3107e-03, 1.1689e-01,
        2.1016e-03, 5.8413e-02, 7.0005e-02, 8.0720e-02, 1.4604e-04, 1.6931e-02,
        8.1513e-02, 5.6888e-02, 8.1524e-02, 6.2492e-03, 3.3213e-02, 1.1106e-01,
        1.4369e-04, 8.6806e-02, 9.1283e-02, 6.7306e-02, 1.5878e-02, 1.0055e-02,
        1.3585e-01, 4.4676e-02, 2.6996e-02, 2.2150e-02, 6.0827e-04, 2.3384e-03,
        2.5977e-02, 8.9196e-02, 1.1952e-01, 1.3273e-01, 1.6763e-03, 6.1006e-02,
        5.7012e-02, 3.4024e-02, 3.1501e-02, 2.2382e-02])
net.mlp.net.0.batch_norm.num_batches_tracked tensor(130)
net.mlp.net.1.linear.weight tensor([[-0.1624, -0.0750, -0.0531,  ...,  0.1299,  0.0556,  0.0910],
        [-0.0418, -0.0824, -0.0709,  ..., -0.1598,  0.1789,  0.0775],
        [ 0.0267,  0.0768,  0.0425,  ...,  0.1809, -0.0503, -0.1430],
        ...,
        [-0.0510, -0.0436, -0.2295,  ..., -0.1438,  0.0710,  0.0601],
        [-0.1794,  0.1131, -0.0138,  ..., -0.2278,  0.1802,  0.0496],
        [-0.1240, -0.1179, -0.0701,  ...,  0.1267, -0.0476, -0.0727]])
net.mlp.net.1.linear.bias tensor([ 0.1013,  0.1053, -0.0574,  0.2025, -0.0928, -0.0480, -0.0142,  0.0743,
        -0.0098,  0.0516,  0.1530, -0.0193, -0.1467,  0.0270,  0.1107,  0.0552,
        -0.0483,  0.0296, -0.0406,  0.0995,  0.0681,  0.0451, -0.0561, -0.0829,
         0.0029, -0.1700, -0.0023,  0.1559,  0.1195, -0.1120,  0.0092, -0.1654,
        -0.0959, -0.0351,  0.0698,  0.1833,  0.0090, -0.0464, -0.1312,  0.1005,
        -0.0228, -0.0890, -0.0552,  0.0607, -0.0246, -0.0302, -0.0428,  0.0643,
        -0.0027, -0.0699, -0.0716,  0.1211,  0.0712,  0.0941,  0.0030, -0.0536,
        -0.0603,  0.0477, -0.0218, -0.0476,  0.1054, -0.0319, -0.0081,  0.0226])
net.mlp.net.1.batch_norm.weight tensor([0.5227, 0.5956, 0.5326, 0.5981, 0.5922, 0.6156, 0.6255, 0.6643, 0.5513,
        0.4595, 0.5170, 0.6063, 0.5398, 0.5419, 0.5255, 0.4958, 0.5301, 0.4627,
        0.6466, 0.4513, 0.5838, 0.6343, 0.5192, 0.5393, 0.5898, 0.6440, 0.5146,
        0.5200, 0.6389, 0.4761, 0.4804, 0.4996, 0.5487, 0.5145, 0.5420, 0.4958,
        0.5730, 0.5786, 0.6511, 0.6495, 0.5341, 0.4965, 0.5079, 0.5855, 0.5492,
        0.5473, 0.6301, 0.5600, 0.6201, 0.5495, 0.5509, 0.5674, 0.4433, 0.5064,
        0.4903, 0.6048, 0.4927, 0.4805, 0.5548, 0.6188, 0.6424, 0.6714, 0.6082,
        0.5876])
net.mlp.net.1.batch_norm.bias tensor([ 0.0595,  0.0627,  0.0734,  0.1064,  0.0358,  0.0067, -0.0554,  0.0504,
        -0.0426, -0.1197,  0.0253, -0.0297,  0.0645, -0.0865, -0.0462, -0.0082,
        -0.0467, -0.0351,  0.0903, -0.0225, -0.0072,  0.0520, -0.0101,  0.0453,
         0.0128,  0.0738,  0.0045, -0.0178,  0.0061, -0.0117, -0.0094,  0.0221,
         0.0127,  0.0006,  0.0513,  0.0307,  0.0626,  0.0630,  0.1028,  0.0497,
         0.1061,  0.0049,  0.0484, -0.0171, -0.0336,  0.0184,  0.0607, -0.1237,
         0.0338, -0.0220,  0.0891,  0.0079,  0.0637,  0.0077, -0.0015,  0.0090,
         0.0225, -0.1514,  0.0178,  0.0745, -0.0817, -0.0082,  0.0401,  0.0740])
net.mlp.net.1.batch_norm.running_mean tensor([0.3797, 0.4766, 0.4180, 0.5263, 0.2909, 0.4774, 0.2968, 0.4766, 0.3670,
        0.3493, 0.6290, 0.4968, 0.2427, 0.3293, 0.4216, 0.3278, 0.3247, 0.2098,
        0.3327, 0.3765, 0.3815, 0.4261, 0.2642, 0.3165, 0.3453, 0.2144, 0.2280,
        0.4601, 0.5799, 0.2834, 0.2540, 0.1773, 0.2516, 0.2714, 0.3197, 0.6400,
        0.3457, 0.3428, 0.3744, 0.6094, 0.2907, 0.3064, 0.2407, 0.4253, 0.2383,
        0.2991, 0.3058, 0.3452, 0.3270, 0.1917, 0.2720, 0.4236, 0.2855, 0.3178,
        0.4188, 0.2602, 0.2863, 0.4367, 0.3659, 0.3849, 0.4669, 0.4215, 0.3707,
        0.3646])
net.mlp.net.1.batch_norm.running_var tensor([0.3898, 0.3760, 1.1521, 0.5675, 0.3595, 0.8843, 0.3413, 0.7820, 0.7448,
        0.3080, 0.9601, 0.6199, 0.4010, 0.4339, 0.3470, 0.3364, 0.6566, 0.1700,
        0.2724, 0.3142, 0.5721, 0.3841, 0.3931, 0.4051, 0.5189, 0.3171, 0.1614,
        0.4117, 0.6432, 0.5492, 0.2754, 0.1763, 0.5170, 0.1881, 0.2493, 0.8420,
        0.5657, 0.3422, 0.4822, 0.8113, 0.1765, 0.2832, 0.3184, 0.6031, 0.2156,
        0.2912, 0.4418, 0.3906, 0.3268, 0.1467, 0.3549, 0.3731, 0.2724, 0.3317,
        0.4691, 0.1825, 0.3517, 0.6512, 0.2804, 0.4140, 0.3813, 0.7595, 0.3334,
        0.4412])
net.mlp.net.1.batch_norm.num_batches_tracked tensor(130)
net.mlp.net.2.linear.weight tensor([[ 0.0303, -0.1217,  0.0029,  ..., -0.0135, -0.0500, -0.1273],
        [ 0.1824,  0.0049, -0.0777,  ...,  0.0523,  0.0688, -0.1569],
        [ 0.0727,  0.0486,  0.0868,  ..., -0.0068,  0.2181,  0.1252],
        ...,
        [-0.0320, -0.0486, -0.0719,  ...,  0.0793,  0.0691,  0.0290],
        [-0.1343, -0.0563, -0.1545,  ..., -0.0743, -0.1572,  0.0313],
        [ 0.1753, -0.0156, -0.1635,  ...,  0.1343, -0.1265,  0.2366]])
net.mlp.net.2.linear.bias tensor([ 0.0211,  0.0506, -0.0212,  0.0896, -0.0844, -0.0151,  0.0611, -0.0445,
        -0.0723,  0.0227, -0.0063,  0.0954,  0.1761, -0.0217, -0.0324,  0.0530,
        -0.0569,  0.1087,  0.1078,  0.0567, -0.0678,  0.2396, -0.0332,  0.1466,
         0.0945,  0.0533,  0.0501, -0.0020,  0.0012,  0.0976, -0.0119, -0.0071,
         0.0050, -0.0317, -0.0298, -0.0259, -0.0501, -0.0380, -0.0472,  0.0886,
        -0.0252,  0.0290,  0.1442,  0.0087,  0.1282,  0.0849, -0.0932,  0.1319,
        -0.0867,  0.0050, -0.0137, -0.0542, -0.0176,  0.0798, -0.0707,  0.0794,
         0.1489,  0.1367, -0.1218,  0.0543,  0.0633, -0.0983,  0.0581,  0.0428])
net.mlp.net.2.batch_norm.weight tensor([0.4667, 0.5814, 0.5881, 0.5374, 0.5139, 0.5829, 0.4935, 0.5337, 0.6051,
        0.5495, 0.5065, 0.6632, 0.5958, 0.5330, 0.5245, 0.5603, 0.6180, 0.5711,
        0.4352, 0.5809, 0.6365, 0.6023, 0.4750, 0.6491, 0.5731, 0.5878, 0.5499,
        0.5988, 0.4863, 0.5144, 0.5173, 0.5279, 0.5949, 0.4926, 0.5829, 0.5374,
        0.5641, 0.5361, 0.5941, 0.5601, 0.4591, 0.5312, 0.5885, 0.5246, 0.6407,
        0.5967, 0.5793, 0.6414, 0.4803, 0.5435, 0.6250, 0.4572, 0.5311, 0.5332,
        0.4870, 0.6633, 0.5781, 0.6054, 0.4785, 0.4780, 0.6864, 0.5655, 0.6707,
        0.6190])
net.mlp.net.2.batch_norm.bias tensor([ 2.0527e-02,  3.3398e-03,  5.0473e-02, -3.2717e-02,  6.7186e-02,
        -2.8420e-03,  3.7545e-03,  3.7037e-02,  3.8939e-02, -3.6487e-02,
        -1.6554e-02, -2.6625e-02, -9.6808e-02,  3.0525e-02,  5.9550e-02,
         3.5452e-02,  7.0413e-02, -3.9857e-02,  4.0631e-02, -1.6482e-02,
        -2.0238e-02,  1.5910e-02,  7.2456e-02, -6.9378e-03, -7.4151e-02,
         3.3467e-02,  5.8639e-02, -2.4413e-02, -3.8502e-02,  3.9917e-02,
         1.7917e-02, -4.4264e-02,  1.3856e-04, -8.8667e-03,  1.1533e-02,
         1.2648e-02,  9.5432e-02,  8.6338e-02, -4.2630e-02,  7.8342e-03,
         1.5128e-01,  3.0818e-02,  1.4857e-02, -2.7158e-02,  5.1253e-02,
         2.7357e-02, -2.0415e-02, -2.4288e-02, -1.6874e-03, -7.0591e-02,
         1.2501e-02, -2.1038e-04,  7.9109e-03,  9.0931e-02, -5.1663e-02,
         1.3091e-02,  7.6949e-02,  2.5731e-02, -1.4034e-02,  2.0951e-03,
         4.7273e-02,  3.3812e-02, -2.7540e-02, -1.9309e-02])
net.mlp.net.2.batch_norm.running_mean tensor([0.2806, 0.4084, 0.2853, 0.3286, 0.2411, 0.2889, 0.3382, 0.3155, 0.2256,
        0.3633, 0.4126, 0.6125, 0.5219, 0.2696, 0.3391, 0.3253, 0.2389, 0.3975,
        0.3995, 0.3840, 0.4366, 0.6437, 0.2884, 0.5128, 0.3965, 0.4189, 0.3986,
        0.2752, 0.3002, 0.4547, 0.3475, 0.3186, 0.3536, 0.3055, 0.3628, 0.4079,
        0.4116, 0.2845, 0.3377, 0.4508, 0.3540, 0.3259, 0.4576, 0.3480, 0.4601,
        0.5187, 0.2511, 0.4274, 0.3301, 0.2868, 0.2908, 0.2863, 0.3351, 0.3995,
        0.2533, 0.4822, 0.4568, 0.5580, 0.1974, 0.2536, 0.4579, 0.2832, 0.3015,
        0.3640])
net.mlp.net.2.batch_norm.running_var tensor([0.1659, 0.5311, 0.3750, 0.2037, 0.4459, 0.3717, 0.2985, 0.4794, 0.2465,
        0.6051, 0.8468, 0.9410, 0.3741, 0.3185, 0.4658, 0.3415, 0.3406, 0.4034,
        0.1938, 0.6067, 0.7949, 0.4713, 0.4974, 0.8145, 0.3033, 0.6050, 0.8369,
        0.2383, 0.2682, 0.7988, 0.4007, 0.5339, 0.2858, 0.3561, 0.5279, 1.1137,
        0.9230, 0.4071, 0.4348, 0.3071, 0.5423, 0.4004, 0.2426, 0.4956, 0.7618,
        1.1129, 0.1940, 0.6655, 0.4695, 0.5346, 0.3685, 0.2150, 0.4160, 0.3677,
        0.3725, 1.0005, 0.6457, 1.0795, 0.2824, 0.2971, 0.8338, 0.4093, 0.3500,
        0.4479])
net.mlp.net.2.batch_norm.num_batches_tracked tensor(130)
net.mlp.net.3.linear.weight tensor([[ 0.1636, -0.1269,  0.0239,  ...,  0.0694, -0.1880,  0.0836],
        [-0.0486,  0.2389, -0.2302,  ..., -0.0579,  0.2326,  0.1456],
        [-0.0494,  0.1227, -0.0556,  ...,  0.0738, -0.0323, -0.0991],
        ...,
        [ 0.1167,  0.0429, -0.1480,  ...,  0.0426,  0.0355,  0.0643],
        [ 0.1380, -0.0570,  0.0287,  ..., -0.0791, -0.0431, -0.0938],
        [ 0.0169, -0.0719,  0.1780,  ..., -0.0559,  0.0585,  0.0926]])
net.mlp.net.3.linear.bias tensor([ 0.0879,  0.0056, -0.0020,  0.0733,  0.0965, -0.0596,  0.0164, -0.0490,
        -0.0360, -0.0824,  0.0619,  0.0155,  0.1420, -0.0954,  0.0339, -0.0612,
         0.1106, -0.0438,  0.1639, -0.0066,  0.0259,  0.0040,  0.0210,  0.0363,
        -0.0005, -0.0322,  0.0578, -0.0259,  0.0554, -0.0390,  0.1729,  0.0900,
        -0.0173, -0.0892,  0.1152,  0.1396,  0.1120,  0.0606,  0.1108, -0.0390,
         0.1080,  0.1807,  0.0822,  0.1051, -0.0171, -0.0137, -0.0022,  0.0323,
        -0.0113, -0.0196,  0.1116,  0.3326,  0.1765,  0.0748, -0.1219,  0.0104,
         0.0773, -0.0383, -0.0449,  0.0305, -0.1121, -0.0923,  0.1757,  0.1152])
net.mlp.net.3.batch_norm.weight tensor([0.5305, 0.4999, 0.4294, 0.4563, 0.5064, 0.4161, 0.4385, 0.4870, 0.5028,
        0.5139, 0.4726, 0.4523, 0.5170, 0.4922, 0.4924, 0.5014, 0.4979, 0.5123,
        0.4892, 0.4773, 0.5037, 0.4698, 0.5177, 0.5443, 0.4773, 0.4433, 0.5037,
        0.4821, 0.4919, 0.4483, 0.5091, 0.4377, 0.4999, 0.4918, 0.5512, 0.4659,
        0.5056, 0.4818, 0.4971, 0.5142, 0.4939, 0.6135, 0.5864, 0.5340, 0.4005,
        0.4861, 0.5711, 0.4634, 0.4816, 0.5026, 0.5066, 0.5516, 0.5238, 0.5353,
        0.4881, 0.5521, 0.4639, 0.4928, 0.5135, 0.4853, 0.4812, 0.5031, 0.5170,
        0.4718])
net.mlp.net.3.batch_norm.bias tensor([-9.3659e-02, -2.6160e-02, -7.9708e-03,  2.2404e-02,  4.5827e-02,
         2.4933e-02, -3.7537e-02, -4.5720e-03, -1.3302e-02, -9.7828e-03,
        -1.1224e-02,  3.5321e-02, -3.6404e-02,  4.1190e-02, -9.4060e-03,
        -2.1417e-02, -1.5275e-02,  9.3370e-03, -2.8536e-02,  4.1576e-02,
         1.9700e-02, -3.1017e-02,  8.5254e-02,  8.4352e-02,  5.4152e-02,
         9.4368e-02,  7.6106e-02,  6.2925e-02,  5.7273e-03,  5.1409e-03,
         2.5139e-02,  5.9713e-02,  1.1430e-02,  5.4760e-02,  9.8237e-02,
         2.1263e-01, -6.2784e-02,  7.6962e-02, -4.4859e-02,  1.3502e-01,
         2.8887e-02, -1.2926e-01, -4.0777e-02,  1.4399e-01,  5.2107e-02,
        -2.9617e-02,  9.8798e-02,  1.1839e-01,  1.2152e-03, -6.0669e-02,
         3.0791e-02, -2.7538e-02,  2.2134e-02,  8.3383e-02, -9.4517e-03,
         1.2316e-01,  2.6701e-02,  5.3602e-02,  1.3057e-01, -7.8837e-02,
        -5.2995e-05, -3.2767e-02,  2.2481e-02, -4.6013e-02])
net.mlp.net.3.batch_norm.running_mean tensor([0.6537, 0.3009, 0.2661, 0.4049, 0.3125, 0.4314, 0.3547, 0.2372, 0.2902,
        0.2787, 0.2464, 0.2325, 0.4907, 0.2332, 0.2436, 0.1737, 0.2974, 0.2507,
        0.3919, 0.2317, 0.3680, 0.2782, 0.4288, 0.3370, 0.2587, 0.2327, 0.3177,
        0.2786, 0.4599, 0.2147, 0.3973, 0.3271, 0.3215, 0.2262, 0.3908, 0.6159,
        0.5090, 0.3106, 0.4209, 0.3378, 0.3556, 0.9136, 0.5661, 0.3522, 0.2533,
        0.2504, 0.5308, 0.3386, 0.2392, 0.2230, 0.3690, 0.8958, 0.4921, 0.4151,
        0.2086, 0.3788, 0.3358, 0.2343, 0.3275, 0.2963, 0.2425, 0.3808, 0.5660,
        0.4365])
net.mlp.net.3.batch_norm.running_var tensor([0.4592, 0.5719, 0.4109, 0.2018, 0.4694, 1.1204, 0.6756, 0.2976, 0.2530,
        0.4779, 0.1962, 0.1301, 0.9855, 0.4569, 0.3422, 0.1582, 0.3138, 0.3620,
        0.2178, 0.2325, 0.9983, 0.4345, 0.9175, 0.5933, 0.4160, 0.2438, 0.4619,
        0.2794, 1.1308, 0.3337, 0.1829, 0.2244, 0.4465, 0.2209, 0.6963, 1.3737,
        0.3813, 0.2802, 0.2085, 0.5603, 0.4406, 0.7093, 0.4199, 0.7213, 0.4140,
        0.3134, 0.3811, 0.6938, 0.4027, 0.2498, 0.5014, 0.6608, 1.0291, 0.8282,
        0.2481, 0.7833, 0.1727, 0.3458, 0.5330, 0.3167, 0.3587, 0.8712, 0.2745,
        0.2322])
net.mlp.net.3.batch_norm.num_batches_tracked tensor(130)
net.mlp.net.4.weight tensor([[ 0.0692, -0.0340, -0.0040,  0.0208, -0.0087,  0.0077,  0.0017, -0.0237,
         -0.0198, -0.0231,  0.0163, -0.0044, -0.0223, -0.0140, -0.0175,  0.0003,
          0.0153, -0.0418,  0.0353, -0.0057, -0.0397, -0.0209, -0.0373, -0.0550,
         -0.0096, -0.0280, -0.0212, -0.0185, -0.0452, -0.0277,  0.0387, -0.0123,
         -0.0353, -0.0069, -0.0441, -0.0350,  0.0422, -0.0043,  0.0225, -0.0517,
         -0.0409,  0.0831,  0.0642, -0.0438, -0.0116, -0.0124,  0.0682, -0.0195,
         -0.0184, -0.0397, -0.0320,  0.0492, -0.0309, -0.0584,  0.0059, -0.0614,
          0.0184, -0.0056, -0.0488, -0.0145, -0.0202, -0.0151,  0.0502,  0.0233]])
