Weights: 
net.embeddings.embeddings.0.weight tensor([[-0.1336, -0.3369],
        [-0.3370, -0.0480],
        [ 0.1563, -0.3315],
        [ 0.1629, -0.1067]])
net.embeddings.embeddings.1.weight tensor([[ 0.3157,  0.2371],
        [-0.1634, -0.0234],
        [ 0.2510,  0.2323],
        [-0.0085, -0.4117],
        [ 0.2458, -0.2283]])
net.embeddings.embeddings.2.weight tensor([[-0.1776,  0.1819,  0.0789],
        [-0.2265,  0.1208,  0.0836],
        [-0.1130, -0.0747,  0.0532],
        [ 0.1639,  0.1752,  0.0310],
        [-0.2655, -0.0101, -0.2324],
        [-0.1990,  0.0405,  0.2020]])
net.embeddings.embeddings.3.weight tensor([[ 0.0053,  0.0682],
        [ 0.3406, -0.3890],
        [-0.1344,  0.0041],
        [ 0.2062,  0.4921]])
net.embeddings.embeddings.4.weight tensor([[-0.1578,  0.3108],
        [-0.4931,  0.1731],
        [ 0.3092, -0.5576],
        [ 0.1802, -0.1404]])
net.mlp.net.0.linear.weight tensor([[ 0.2278, -0.1708,  0.2288,  ...,  0.2821, -0.0152, -0.1485],
        [ 0.0146,  0.0392,  0.1576,  ..., -0.4118,  0.2145,  0.1315],
        [ 0.1043, -0.0098,  0.1090,  ..., -0.1428, -0.1982,  0.2634],
        ...,
        [ 0.2657,  0.0188, -0.1094,  ...,  0.4311, -0.0536, -0.0872],
        [-0.2394,  0.1256,  0.2454,  ..., -0.0973, -0.0406, -0.1653],
        [-0.0475,  0.1338,  0.4935,  ..., -0.2251, -0.1676,  0.1936]])
net.mlp.net.0.linear.bias tensor([-0.0145,  0.1098, -0.0782, -0.0163, -0.1114, -0.0313,  0.0803, -0.0124,
         0.0576, -0.0539, -0.0100, -0.0272, -0.1141, -0.0669,  0.0173, -0.1287,
         0.0158, -0.0788, -0.1322,  0.0843,  0.1129,  0.0785, -0.0802, -0.0337,
        -0.0893, -0.0076, -0.1049, -0.0821,  0.0833,  0.0506, -0.0086, -0.0177,
        -0.0024,  0.1573, -0.0434,  0.1405,  0.0390, -0.0690, -0.0160,  0.0391,
         0.0899, -0.0414,  0.1849,  0.1327, -0.0264,  0.0814,  0.0024,  0.0229,
        -0.0587, -0.1480,  0.1103, -0.0517,  0.1044, -0.0646, -0.0493, -0.0068,
         0.0837, -0.0148,  0.0817,  0.0359, -0.0167,  0.1311, -0.0498, -0.1018])
net.mlp.net.0.batch_norm.weight tensor([0.5938, 0.6353, 0.6185, 0.7462, 0.5966, 0.5456, 0.5189, 0.5504, 0.5536,
        0.5866, 0.5491, 0.6666, 0.5430, 0.6475, 0.5981, 0.5426, 0.5989, 0.4705,
        0.6303, 0.7124, 0.6369, 0.5876, 0.5355, 0.8116, 0.6055, 0.5386, 0.5739,
        0.6375, 0.7127, 0.5486, 0.5947, 0.5909, 0.5440, 0.4660, 0.6661, 0.5750,
        0.6726, 0.5180, 0.5985, 0.5219, 0.5473, 0.6376, 0.5882, 0.5096, 0.6501,
        0.6646, 0.4856, 0.6077, 0.5926, 0.6743, 0.5182, 0.5623, 0.5370, 0.6878,
        0.6794, 0.5344, 0.5974, 0.6475, 0.5287, 0.5665, 0.5452, 0.5793, 0.5993,
        0.6128])
net.mlp.net.0.batch_norm.bias tensor([ 0.0443,  0.0431,  0.0686, -0.0709,  0.0046,  0.0216, -0.0813,  0.0097,
        -0.0574, -0.0342,  0.0025, -0.0960, -0.0803,  0.0156, -0.0167, -0.0698,
        -0.0234,  0.0553,  0.0422, -0.0423,  0.1015, -0.0479,  0.1036, -0.0389,
         0.0217,  0.0234,  0.0305, -0.0609, -0.0400, -0.0019, -0.0377,  0.0593,
        -0.0388, -0.0605,  0.0530, -0.0493,  0.0759,  0.0447,  0.0516,  0.0051,
         0.0748,  0.0314, -0.0230,  0.0106,  0.0855, -0.1094,  0.0552,  0.0470,
        -0.0012, -0.0969,  0.0493,  0.0458, -0.0144,  0.0299, -0.0294, -0.0818,
        -0.0438, -0.1013,  0.0367,  0.0696, -0.0264,  0.0064,  0.0220,  0.0395])
net.mlp.net.0.batch_norm.running_mean tensor([2.8169e-01, 5.3903e-02, 2.8792e-01, 4.8984e-02, 1.4245e-01, 1.1807e-01,
        1.4510e-01, 2.1838e-01, 1.5798e-01, 2.9361e-02, 4.2865e-02, 3.6086e-01,
        2.8583e-02, 5.1179e-01, 1.0500e-01, 2.8859e-01, 6.4804e-02, 6.2291e-01,
        5.9844e-02, 2.0094e-01, 9.2665e-02, 4.9497e-01, 2.5445e-02, 5.3535e-01,
        4.4371e-01, 1.9732e-01, 5.6563e-04, 1.5230e-02, 3.5164e-01, 2.1342e-01,
        4.9441e-02, 1.5917e-01, 7.5874e-02, 4.7545e-01, 1.0387e-02, 4.2757e-01,
        2.6342e-01, 3.2245e-01, 4.1141e-02, 4.7852e-01, 2.0673e-03, 3.1726e-02,
        4.9857e-01, 3.8202e-02, 1.3867e-02, 3.0225e-02, 5.7440e-01, 1.6315e-01,
        2.0344e-01, 1.3468e-02, 1.6071e-01, 3.2904e-01, 4.0695e-01, 3.8977e-02,
        2.6220e-01, 2.3989e-03, 3.5984e-01, 6.1098e-01, 5.5347e-01, 4.6643e-02,
        4.4034e-02, 3.7665e-01, 3.0382e-01, 1.2216e-01])
net.mlp.net.0.batch_norm.running_var tensor([4.3155e-02, 1.0324e-02, 4.7198e-02, 1.4257e-02, 1.7637e-01, 1.0740e-01,
        2.6781e-02, 5.0502e-02, 2.7110e-02, 2.1277e-02, 4.7162e-02, 3.3821e-02,
        6.7389e-03, 6.6815e-02, 4.9046e-02, 3.3260e-02, 2.3378e-02, 1.7633e-01,
        4.2974e-02, 7.0228e-02, 2.4256e-02, 7.5041e-02, 2.0350e-02, 5.9660e-02,
        2.7339e-01, 3.7546e-02, 9.3011e-05, 3.2183e-03, 8.3644e-02, 1.0526e-01,
        2.5921e-02, 2.3812e-01, 1.7412e-02, 9.8790e-02, 7.0788e-03, 9.4528e-02,
        7.0535e-02, 5.8675e-02, 1.2845e-02, 8.3117e-02, 4.9184e-04, 1.0420e-02,
        5.1842e-02, 8.0673e-03, 4.1049e-03, 8.2893e-03, 9.1816e-02, 4.5542e-02,
        5.3743e-02, 4.1578e-03, 4.8893e-02, 9.1827e-02, 6.3523e-02, 3.9113e-02,
        9.5683e-02, 4.7021e-04, 1.4653e-01, 1.0108e-01, 1.2411e-01, 1.8108e-02,
        1.3941e-02, 7.9444e-02, 7.6529e-02, 2.8696e-02])
net.mlp.net.0.batch_norm.num_batches_tracked tensor(105)
net.mlp.net.1.linear.weight tensor([[-0.0393, -0.0729,  0.0193,  ..., -0.0184,  0.0614,  0.1530],
        [ 0.0048, -0.1256,  0.1939,  ...,  0.0515, -0.0002, -0.0043],
        [-0.0856,  0.1099, -0.0644,  ..., -0.1575,  0.0666, -0.0354],
        ...,
        [ 0.0365, -0.0109, -0.0252,  ...,  0.0884,  0.0105,  0.1209],
        [ 0.0569, -0.2095, -0.0648,  ..., -0.1583,  0.1648,  0.1388],
        [ 0.0755, -0.0739,  0.0661,  ..., -0.0813,  0.0320,  0.0130]])
net.mlp.net.1.linear.bias tensor([-0.0463, -0.0501,  0.0272, -0.1297,  0.0413, -0.0378,  0.0120,  0.0099,
        -0.0966,  0.0901,  0.0074,  0.0931, -0.0533, -0.0898,  0.0076, -0.0154,
        -0.0318,  0.0817,  0.0049,  0.0886,  0.0983, -0.0207,  0.0672,  0.0422,
         0.0427,  0.0839,  0.0530, -0.0059,  0.0362,  0.0199, -0.0585,  0.0570,
         0.1283, -0.1176, -0.0860,  0.0927,  0.0809,  0.0070,  0.0858,  0.0597,
        -0.0154,  0.0698,  0.0087,  0.0566,  0.1488, -0.0151,  0.0298, -0.0304,
         0.1233, -0.0314,  0.1159, -0.0286,  0.0302,  0.0341,  0.0528, -0.1025,
         0.0631, -0.0773, -0.0134, -0.0770,  0.0172,  0.0641,  0.0425,  0.0266])
net.mlp.net.1.batch_norm.weight tensor([0.5650, 0.5821, 0.6286, 0.6220, 0.6846, 0.5087, 0.6388, 0.5018, 0.6809,
        0.5422, 0.4795, 0.5718, 0.5963, 0.5109, 0.5586, 0.6502, 0.5557, 0.5766,
        0.6422, 0.5848, 0.6078, 0.5748, 0.5186, 0.4945, 0.5870, 0.5983, 0.6707,
        0.5247, 0.7437, 0.6103, 0.4960, 0.5777, 0.5960, 0.6743, 0.6268, 0.5100,
        0.6534, 0.5989, 0.5873, 0.6011, 0.6578, 0.5535, 0.5826, 0.5436, 0.5525,
        0.6766, 0.7237, 0.6440, 0.5668, 0.5320, 0.5581, 0.6119, 0.5390, 0.6072,
        0.5083, 0.5965, 0.5700, 0.5685, 0.7054, 0.5842, 0.6077, 0.5068, 0.6216,
        0.6106])
net.mlp.net.1.batch_norm.bias tensor([ 0.0264, -0.0253,  0.0720, -0.0714,  0.0290, -0.0496, -0.0091, -0.0124,
         0.0331,  0.0460,  0.0170, -0.0199, -0.0237, -0.0084, -0.0089, -0.0996,
        -0.0227,  0.0471,  0.1038,  0.0230,  0.0435,  0.0022, -0.0242,  0.0775,
        -0.0223,  0.0373,  0.0007, -0.0814,  0.0148,  0.0277, -0.0032, -0.0007,
        -0.0623,  0.0902, -0.0325, -0.0157, -0.0209, -0.0512, -0.0528,  0.0898,
         0.0407, -0.0243,  0.0191,  0.0166, -0.0192,  0.0064, -0.0358,  0.0299,
        -0.0227,  0.0114, -0.0233,  0.0398,  0.0644,  0.0467, -0.0129,  0.0114,
        -0.0201, -0.0054, -0.0185, -0.0154,  0.0442,  0.0616, -0.0368,  0.0303])
net.mlp.net.1.batch_norm.running_mean tensor([0.2689, 0.2819, 0.3594, 0.3050, 0.3338, 0.3262, 0.4178, 0.3565, 0.3111,
        0.4463, 0.3524, 0.4200, 0.3182, 0.2472, 0.3348, 0.2831, 0.3344, 0.4307,
        0.4762, 0.4566, 0.5313, 0.3971, 0.3899, 0.3404, 0.3955, 0.4595, 0.3920,
        0.3458, 0.5724, 0.3332, 0.2497, 0.3700, 0.5039, 0.4426, 0.3700, 0.3977,
        0.4145, 0.3781, 0.3508, 0.4532, 0.4402, 0.3516, 0.3717, 0.3171, 0.4979,
        0.3810, 0.4219, 0.4044, 0.3561, 0.2496, 0.4885, 0.3614, 0.3826, 0.2764,
        0.3744, 0.3556, 0.3463, 0.2787, 0.3483, 0.2737, 0.2969, 0.3763, 0.4079,
        0.4154])
net.mlp.net.1.batch_norm.running_var tensor([0.4980, 0.2280, 0.3401, 0.3061, 0.3664, 0.3059, 0.6026, 0.2710, 0.4070,
        0.3647, 0.3231, 0.2491, 0.3759, 0.2060, 0.6028, 0.5513, 0.3871, 0.3234,
        0.7102, 0.4059, 0.4262, 1.0048, 0.3479, 0.3611, 0.3851, 0.4831, 0.3475,
        0.3792, 0.6895, 0.4693, 0.2204, 0.2954, 0.4540, 0.9683, 0.5673, 0.3436,
        0.4641, 0.7859, 0.3300, 0.4759, 0.6732, 0.4436, 0.3159, 0.2681, 0.4192,
        0.4563, 0.3354, 0.5457, 0.2442, 0.2226, 1.0079, 0.5683, 0.5020, 0.5529,
        0.3586, 0.4662, 0.2137, 0.8472, 0.4123, 0.2446, 0.3405, 0.2601, 0.3397,
        0.6551])
net.mlp.net.1.batch_norm.num_batches_tracked tensor(105)
net.mlp.net.2.linear.weight tensor([[-4.3045e-02,  1.3724e-01,  2.0440e-01,  ...,  1.7101e-01,
          1.8629e-02,  7.7371e-03],
        [-1.9001e-01, -1.7567e-01,  8.4188e-02,  ...,  8.3057e-02,
         -1.0307e-01,  4.8596e-02],
        [-1.9173e-02, -2.3021e-01, -8.8947e-03,  ..., -9.3014e-02,
          4.7916e-02,  7.8624e-02],
        ...,
        [-1.1401e-01, -1.3654e-02, -8.3430e-02,  ...,  5.5274e-02,
         -1.0780e-01,  2.3315e-01],
        [ 2.2094e-02,  1.7794e-01,  1.1699e-01,  ..., -4.2220e-02,
         -9.7465e-02, -2.9843e-02],
        [-4.3917e-02, -2.1597e-01, -1.5704e-04,  ..., -1.8867e-02,
         -7.3202e-02, -2.6116e-02]])
net.mlp.net.2.linear.bias tensor([-0.0835,  0.0528,  0.0846,  0.0392,  0.0856,  0.0643,  0.0758, -0.0029,
         0.0771,  0.0772,  0.1255, -0.0212, -0.0482, -0.0587, -0.0775, -0.1066,
         0.0036, -0.0677, -0.1536, -0.0304,  0.1090,  0.0002, -0.1062, -0.0800,
         0.0484, -0.1286,  0.0653, -0.0553, -0.0514, -0.0032,  0.0825,  0.0178,
         0.0519,  0.0649, -0.0444, -0.0267,  0.0820,  0.0428,  0.0231,  0.0877,
         0.0388,  0.0210, -0.0142,  0.1178, -0.0148, -0.0559,  0.1552, -0.0209,
        -0.0171, -0.0085,  0.0072, -0.0473,  0.0068, -0.0193, -0.0293,  0.0539,
        -0.0053,  0.0284, -0.0388,  0.0163,  0.0808,  0.1132,  0.0381,  0.0932])
net.mlp.net.2.batch_norm.weight tensor([0.6353, 0.6505, 0.5733, 0.6232, 0.5993, 0.5576, 0.5969, 0.5548, 0.6676,
        0.6461, 0.5330, 0.6095, 0.4958, 0.5411, 0.6065, 0.5113, 0.6674, 0.5191,
        0.5722, 0.5611, 0.5968, 0.5341, 0.6819, 0.6257, 0.6334, 0.5361, 0.5108,
        0.5440, 0.5620, 0.5846, 0.6429, 0.6229, 0.5522, 0.5677, 0.6026, 0.6500,
        0.6439, 0.6159, 0.5955, 0.5930, 0.6109, 0.6074, 0.5361, 0.6492, 0.6289,
        0.5747, 0.6004, 0.5138, 0.5448, 0.5313, 0.5840, 0.5880, 0.6069, 0.5749,
        0.5645, 0.7274, 0.5614, 0.5114, 0.5400, 0.5544, 0.6679, 0.7177, 0.6690,
        0.5573])
net.mlp.net.2.batch_norm.bias tensor([-0.0294,  0.0017,  0.0284, -0.0088, -0.0252, -0.0482,  0.0795,  0.0082,
         0.0324,  0.0650, -0.0575, -0.0595,  0.0211,  0.0110, -0.0931, -0.0010,
         0.0961,  0.0608, -0.0417,  0.0162,  0.0174,  0.0328, -0.0047,  0.0671,
         0.0410, -0.0431, -0.0183,  0.0306, -0.0205, -0.0333,  0.0654,  0.0785,
        -0.0238, -0.0620,  0.0216,  0.0237, -0.0090,  0.0639,  0.0059, -0.0135,
         0.0672,  0.0392,  0.0017,  0.0698, -0.0124,  0.0539,  0.0684,  0.0282,
         0.1291, -0.0752, -0.0227, -0.0768,  0.0358,  0.0291,  0.0147, -0.0082,
         0.0105,  0.0125,  0.0908,  0.0769,  0.0293, -0.0097, -0.0135, -0.0392])
net.mlp.net.2.batch_norm.running_mean tensor([0.2595, 0.3865, 0.3693, 0.5515, 0.4297, 0.3399, 0.4498, 0.3623, 0.4215,
        0.3700, 0.4075, 0.3279, 0.3419, 0.2604, 0.3507, 0.2608, 0.3733, 0.2936,
        0.2402, 0.4324, 0.4281, 0.4530, 0.3473, 0.2684, 0.4630, 0.1979, 0.3966,
        0.2500, 0.3835, 0.3926, 0.4563, 0.4235, 0.3469, 0.3645, 0.2919, 0.4034,
        0.4137, 0.4579, 0.4038, 0.4493, 0.4024, 0.4071, 0.3017, 0.4576, 0.2436,
        0.3151, 0.4939, 0.3517, 0.2516, 0.2417, 0.3483, 0.3276, 0.4414, 0.2999,
        0.3331, 0.4703, 0.3472, 0.4423, 0.3398, 0.3712, 0.4623, 0.4335, 0.3208,
        0.4314])
net.mlp.net.2.batch_norm.running_var tensor([0.3399, 0.3335, 0.4333, 0.5289, 0.2963, 0.2145, 0.4760, 0.5545, 0.8609,
        0.4238, 0.2988, 0.5764, 0.5069, 0.3417, 0.4771, 0.2658, 0.4775, 0.3581,
        0.3774, 1.0828, 0.4131, 1.0139, 0.8451, 0.3183, 1.0730, 0.2376, 0.3273,
        0.3274, 0.2549, 0.3275, 0.8779, 0.8647, 0.3742, 0.3369, 0.2529, 1.0226,
        0.5501, 0.4856, 0.7472, 0.5192, 0.6105, 0.8319, 0.1975, 0.2759, 0.5269,
        0.4562, 0.3395, 0.3044, 0.2210, 0.1844, 0.6198, 0.3832, 0.3766, 0.1866,
        0.2003, 0.5872, 0.4718, 0.6593, 0.5153, 0.5007, 0.8709, 0.6404, 0.3284,
        0.4609])
net.mlp.net.2.batch_norm.num_batches_tracked tensor(105)
net.mlp.net.3.linear.weight tensor([[ 0.0974,  0.0502,  0.0369,  ...,  0.1057, -0.0282,  0.1746],
        [-0.1490,  0.0243, -0.1198,  ...,  0.0956,  0.0123, -0.1133],
        [ 0.2388,  0.1188,  0.0468,  ...,  0.0874,  0.1087, -0.0815],
        ...,
        [ 0.0369,  0.0454, -0.0699,  ...,  0.0227, -0.1470,  0.1535],
        [-0.2974, -0.0190, -0.0178,  ...,  0.0587,  0.1129, -0.0071],
        [ 0.0029,  0.2123,  0.0952,  ...,  0.1225,  0.1171, -0.0670]])
net.mlp.net.3.linear.bias tensor([ 0.0746,  0.0359, -0.0807, -0.0753, -0.1092,  0.0147,  0.0377, -0.0098,
         0.0809, -0.0220, -0.0063,  0.1290,  0.1338,  0.0388,  0.0321, -0.0787,
         0.1680,  0.1104,  0.0323,  0.0279,  0.0312,  0.0347,  0.0654,  0.0061,
         0.2111, -0.0554, -0.0343, -0.0353,  0.1321, -0.0836, -0.1028, -0.0707,
        -0.0973,  0.1268,  0.0185, -0.0381, -0.0739, -0.0204, -0.0279,  0.0065,
        -0.0864,  0.1253, -0.0049, -0.0933,  0.0076,  0.0646,  0.1447,  0.0052,
         0.1615,  0.0759,  0.0776, -0.0025,  0.0991,  0.0935,  0.1314,  0.0277,
         0.0339, -0.0092, -0.0737, -0.0052, -0.0411, -0.0263, -0.0017, -0.0443])
net.mlp.net.3.batch_norm.weight tensor([0.5323, 0.5470, 0.4975, 0.5196, 0.5049, 0.5347, 0.5670, 0.5131, 0.5485,
        0.4503, 0.6166, 0.5451, 0.6670, 0.4890, 0.5202, 0.4868, 0.5576, 0.5000,
        0.5392, 0.5236, 0.5528, 0.5462, 0.5718, 0.5044, 0.6299, 0.4780, 0.5387,
        0.4074, 0.4770, 0.5484, 0.5424, 0.5661, 0.5529, 0.5520, 0.5165, 0.4898,
        0.5206, 0.5549, 0.5733, 0.5464, 0.4953, 0.5146, 0.5150, 0.5225, 0.5769,
        0.4549, 0.5557, 0.5212, 0.5617, 0.4647, 0.5625, 0.5191, 0.5516, 0.5530,
        0.5276, 0.5200, 0.5776, 0.5118, 0.5244, 0.5232, 0.5454, 0.5227, 0.5122,
        0.5386])
net.mlp.net.3.batch_norm.bias tensor([ 0.0145,  0.0334,  0.0201,  0.0657, -0.0123, -0.0113, -0.0321,  0.1012,
         0.0257, -0.0599,  0.0085, -0.0563, -0.0666,  0.0430, -0.0276,  0.0053,
         0.0230, -0.0088,  0.0009, -0.1125,  0.0425, -0.0035,  0.0460,  0.0130,
        -0.0463, -0.0462,  0.0312, -0.0014,  0.0262, -0.0162, -0.0120,  0.0188,
         0.0431, -0.0098,  0.0510,  0.0577, -0.0458,  0.0624,  0.0120, -0.0172,
        -0.0266,  0.0021, -0.0249,  0.0057, -0.0265,  0.0863,  0.1113,  0.0420,
         0.0028,  0.0152,  0.0207, -0.0026, -0.0271,  0.0355,  0.0068,  0.0579,
         0.1047, -0.0354,  0.0733, -0.0487,  0.0120, -0.0176,  0.0729,  0.0093])
net.mlp.net.3.batch_norm.running_mean tensor([0.3918, 0.4182, 0.2430, 0.2732, 0.2117, 0.2898, 0.5020, 0.3787, 0.4410,
        0.2579, 0.3868, 0.4440, 0.6336, 0.3512, 0.3297, 0.2726, 0.4886, 0.3416,
        0.3415, 0.3002, 0.4062, 0.4283, 0.4119, 0.3135, 0.7261, 0.2282, 0.3074,
        0.2974, 0.3707, 0.3675, 0.2823, 0.3149, 0.2354, 0.3986, 0.3065, 0.3311,
        0.2649, 0.4062, 0.2442, 0.4244, 0.2958, 0.4488, 0.3004, 0.2146, 0.3656,
        0.3877, 0.5537, 0.2663, 0.5663, 0.3234, 0.3860, 0.3103, 0.5353, 0.4188,
        0.3683, 0.4086, 0.4343, 0.4204, 0.2436, 0.3273, 0.3004, 0.2545, 0.4137,
        0.3557])
net.mlp.net.3.batch_norm.running_var tensor([0.9178, 0.6373, 0.3015, 0.2959, 0.2226, 0.4245, 0.3362, 0.8204, 0.5819,
        0.2378, 0.5835, 0.2999, 0.5624, 0.3102, 0.2629, 0.2184, 0.9670, 0.1975,
        0.5783, 0.2369, 0.6471, 0.4191, 0.8298, 0.3904, 0.5703, 0.1680, 0.5487,
        0.3739, 0.2882, 1.0780, 0.6067, 0.5060, 0.1820, 0.5545, 0.2996, 0.4147,
        0.5026, 0.7437, 0.2357, 0.3232, 0.2823, 0.5029, 0.3781, 0.1551, 0.5240,
        0.3878, 1.3033, 0.3150, 1.5504, 0.3720, 0.5474, 0.2981, 1.1144, 0.2674,
        0.3026, 0.8991, 0.8860, 0.3111, 0.3213, 0.3320, 0.4442, 0.2720, 0.3959,
        0.6021])
net.mlp.net.3.batch_norm.num_batches_tracked tensor(105)
net.mlp.net.4.weight tensor([[-0.0171, -0.0126, -0.0008, -0.0082, -0.0057, -0.0246,  0.0513, -0.0124,
         -0.0329, -0.0106, -0.0775,  0.0202,  0.0914,  0.0021,  0.0161,  0.0026,
         -0.0377,  0.0162, -0.0355,  0.0334, -0.0407,  0.0358, -0.0524, -0.0044,
          0.0738, -0.0190, -0.0377,  0.0018, -0.0342, -0.0208, -0.0193, -0.0409,
         -0.0174, -0.0338, -0.0323, -0.0103, -0.0102, -0.0276, -0.0490,  0.0232,
          0.0161,  0.0209, -0.0054,  0.0205, -0.0455, -0.0171, -0.0338,  0.0031,
         -0.0322,  0.0168, -0.0405, -0.0205, -0.0227,  0.0335, -0.0350, -0.0099,
         -0.0774,  0.0204, -0.0039,  0.0077, -0.0331, -0.0013, -0.0386, -0.0243]])
