Weights: 
net.embeddings.embeddings.0.weight tensor([[-0.1417, -0.1348],
        [ 0.4621, -0.2869],
        [-0.0456,  0.4017],
        [ 0.4597, -0.2614]])
net.embeddings.embeddings.1.weight tensor([[-0.2174, -0.2219],
        [ 0.3701, -0.0605],
        [ 0.3414, -0.5400],
        [ 0.4597,  0.2756],
        [ 0.5422, -0.4011]])
net.embeddings.embeddings.2.weight tensor([[ 0.4392, -0.3290, -0.0694],
        [ 0.3920, -0.1030, -0.0364],
        [ 0.0137, -0.2357,  0.2010],
        [ 0.3734,  0.3419, -0.1606],
        [-0.4309,  0.2597,  0.0986],
        [ 0.1634, -0.1003, -0.3948]])
net.embeddings.embeddings.3.weight tensor([[ 0.3110, -0.5608],
        [ 0.0587, -0.4037],
        [-0.4206,  0.0545],
        [-0.0675,  0.4816]])
net.embeddings.embeddings.4.weight tensor([[-0.5675,  0.5271],
        [-0.5000,  0.4047],
        [ 0.5777,  0.3727],
        [ 0.0779,  0.3897]])
net.mlp.net.0.linear.weight tensor([[-0.2420, -0.1445,  0.0845,  ...,  0.2631, -0.0408,  0.4683],
        [-0.5042, -0.2333, -0.2138,  ...,  0.1429,  0.2352, -0.1272],
        [-0.1719, -0.4758, -0.1050,  ..., -0.0249,  0.0444, -0.5169],
        ...,
        [ 0.1048,  0.0880, -0.2959,  ...,  0.3289,  0.5385,  0.4141],
        [ 0.3454,  0.0269, -0.0087,  ..., -0.4023,  0.0444, -0.3517],
        [ 0.0819,  0.3208, -0.4275,  ..., -0.1168, -0.1829, -0.2179]])
net.mlp.net.0.linear.bias tensor([-0.0450, -0.1395, -0.0097,  0.0781, -0.1429, -0.0908,  0.1120,  0.0367,
        -0.0465,  0.0791,  0.0526,  0.0050,  0.1031, -0.0995,  0.2162,  0.1670,
         0.1622, -0.0312,  0.0662,  0.0777, -0.1454,  0.1474,  0.0407,  0.0252,
         0.0258, -0.0993,  0.0290,  0.0727,  0.0840, -0.0821,  0.0599,  0.1192,
        -0.1103,  0.1686, -0.0992, -0.0281, -0.1042, -0.0198, -0.1042,  0.1355,
        -0.1418, -0.1619, -0.0005, -0.1162,  0.1228,  0.0626, -0.1374,  0.1280,
         0.0826, -0.1621,  0.0153, -0.0502,  0.1688, -0.1099, -0.1567, -0.0074,
        -0.0550,  0.1076,  0.1904,  0.1729, -0.0357, -0.1561,  0.0662, -0.0696])
net.mlp.net.0.batch_norm.weight tensor([0.8943, 0.8825, 0.9198, 0.8795, 0.8884, 0.8945, 0.8856, 0.8899, 0.8712,
        0.8857, 0.8934, 0.8575, 0.8993, 0.9033, 0.9027, 0.9000, 0.9052, 0.9008,
        0.8719, 0.8794, 0.8850, 0.8924, 0.8935, 0.8747, 0.8942, 0.9115, 0.8816,
        0.8813, 0.9025, 0.8935, 0.8939, 0.8858, 0.8790, 0.8737, 0.8891, 0.8861,
        0.9101, 0.9504, 0.9215, 0.8848, 0.9085, 0.8978, 0.8856, 0.8888, 0.8754,
        0.8795, 0.8706, 0.8679, 0.8846, 0.8942, 0.9028, 0.9016, 0.8884, 0.8866,
        0.8882, 0.8938, 0.8844, 0.9112, 0.8907, 0.8902, 0.8900, 0.8776, 0.8869,
        0.9064])
net.mlp.net.0.batch_norm.bias tensor([-9.0624e-03, -3.2094e-03,  6.4051e-03,  4.4601e-03, -2.8813e-03,
        -3.9107e-03,  1.5783e-02, -2.7833e-02,  8.5161e-03, -2.3958e-02,
         1.5252e-03,  5.2439e-03, -2.0368e-02,  2.0273e-02,  2.4591e-04,
        -1.6428e-02, -3.5321e-03, -3.8708e-03, -1.5407e-02, -1.1766e-02,
         1.1909e-02, -1.0779e-02,  1.7281e-02,  4.1703e-04, -2.5358e-03,
        -9.8580e-03,  3.1170e-02,  6.9464e-03,  2.3047e-02, -1.2977e-02,
        -2.3979e-03,  2.9358e-02, -3.3355e-03, -8.7063e-05,  1.6606e-02,
         1.5387e-02, -3.4718e-03,  8.7750e-03, -3.0239e-03,  8.8444e-03,
         8.6697e-03, -2.0710e-02, -2.2959e-02, -1.5870e-02,  2.3472e-02,
        -3.2067e-03,  3.1963e-03, -7.0851e-03,  1.6368e-02,  2.4561e-02,
        -2.7998e-03, -5.7773e-03,  3.0142e-02,  1.1541e-02,  1.7268e-02,
        -3.5692e-03, -1.4376e-02,  2.2227e-02,  6.6897e-03,  2.9696e-02,
        -1.6306e-02, -8.5811e-03,  1.9324e-03, -1.4504e-02])
net.mlp.net.0.batch_norm.running_mean tensor([4.8382e-01, 7.0004e-03, 1.3729e-04, 4.2330e-01, 2.8594e-01, 1.2523e-01,
        5.4557e-01, 4.5620e-01, 4.6628e-02, 2.3569e-01, 1.5435e-01, 4.7865e-01,
        7.9299e-02, 1.5514e-01, 5.5675e-01, 7.1157e-02, 7.1998e-02, 1.0534e+00,
        3.1664e-02, 1.4129e-01, 3.3457e-03, 2.3195e-01, 1.3188e-02, 3.0526e-02,
        3.9178e-02, 6.7672e-01, 5.6498e-02, 1.3826e-01, 9.4697e-02, 5.0267e-02,
        4.5793e-02, 7.7347e-01, 1.9130e-01, 6.4130e-01, 1.4312e-01, 1.1874e-01,
        5.2203e-01, 1.8605e-01, 2.1225e-01, 1.1360e-01, 1.1339e-01, 1.5779e-01,
        1.1954e-02, 7.6871e-02, 1.9354e-01, 6.3700e-01, 1.9349e-01, 4.3339e-01,
        3.9998e-01, 1.1135e-01, 2.2051e-01, 1.0611e-02, 7.3015e-01, 1.1027e-01,
        1.0274e-01, 2.9239e-01, 2.7712e-03, 3.1483e-01, 2.8686e-01, 1.7462e-01,
        6.7528e-01, 6.5989e-02, 5.9348e-03, 6.5244e-02])
net.mlp.net.0.batch_norm.running_var tensor([2.2618e-01, 2.4460e-03, 1.1784e-05, 1.0500e-01, 1.6842e-01, 3.9573e-02,
        1.6781e-01, 2.3680e-01, 5.3565e-02, 5.9846e-02, 7.3498e-02, 1.9751e-01,
        1.6654e-01, 8.6704e-02, 9.0776e-02, 3.4449e-02, 1.2951e-02, 2.2054e-01,
        9.8651e-03, 4.6271e-02, 8.3656e-04, 2.1590e-01, 3.9155e-03, 7.1249e-03,
        1.8247e-02, 1.7710e-01, 8.4335e-02, 4.5735e-02, 3.1816e-02, 2.7185e-02,
        6.9784e-02, 1.9791e-01, 6.1967e-02, 5.4601e-01, 2.8620e-01, 1.1967e-01,
        2.4036e-01, 7.2275e-02, 1.1049e-01, 1.8487e-01, 6.1357e-02, 5.4757e-02,
        3.9046e-03, 2.2732e-02, 8.6074e-02, 2.1356e-01, 4.9621e-01, 9.5168e-02,
        2.4373e-01, 2.4719e-01, 7.9007e-02, 3.3567e-03, 1.6708e-01, 2.1071e-01,
        2.6424e-02, 5.9362e-02, 7.9563e-04, 1.5087e-01, 4.0259e-01, 4.0387e-02,
        1.1994e-01, 4.0462e-02, 1.8365e-03, 6.2053e-02])
net.mlp.net.0.batch_norm.num_batches_tracked tensor(280)
net.mlp.net.1.linear.weight tensor([[ 0.0220, -0.0801, -0.2787,  ..., -0.0297, -0.0348,  0.1643],
        [-0.0860, -0.1271, -0.1803,  ..., -0.0911, -0.1863, -0.0759],
        [ 0.0759, -0.2485,  0.0188,  ...,  0.1064, -0.1690,  0.0123],
        ...,
        [ 0.1170, -0.0173,  0.2035,  ...,  0.0262,  0.1919, -0.0884],
        [ 0.2617,  0.1183,  0.3039,  ...,  0.1567,  0.1925,  0.1053],
        [ 0.2259,  0.2432,  0.1373,  ...,  0.2057,  0.2781,  0.1961]])
net.mlp.net.1.linear.bias tensor([ 0.0384, -0.0142, -0.0591,  0.0322,  0.0786,  0.0762, -0.0132, -0.1062,
        -0.0640, -0.0204, -0.0819,  0.0322,  0.0970,  0.0629, -0.0816, -0.0245,
        -0.0691, -0.0499, -0.0330, -0.0584,  0.1003,  0.0538,  0.0921,  0.0137,
        -0.0479,  0.0765, -0.0411, -0.0670, -0.0296,  0.0813, -0.0401, -0.0430,
         0.0778, -0.0755,  0.0665,  0.0165,  0.0134, -0.0501,  0.0246,  0.0043,
        -0.0406,  0.0868,  0.0566, -0.0890, -0.0676,  0.0996, -0.0539,  0.0807,
         0.0816,  0.0692, -0.0522,  0.0362, -0.1074, -0.0502, -0.0792, -0.0407,
        -0.0442, -0.0908,  0.0975, -0.0158,  0.0520, -0.0449, -0.0547, -0.0745])
net.mlp.net.1.batch_norm.weight tensor([0.8920, 0.8749, 0.8912, 0.8630, 0.9126, 0.9250, 0.8788, 0.9117, 0.8884,
        0.8795, 0.8857, 0.9016, 0.8718, 0.8778, 0.8658, 0.8974, 0.8755, 0.9154,
        0.8913, 0.8780, 0.9116, 0.8692, 0.8974, 0.9131, 0.8865, 0.8943, 0.8830,
        0.8921, 0.8864, 0.8663, 0.8955, 0.8821, 0.8878, 0.8969, 0.9324, 0.8942,
        0.8894, 0.8784, 0.8855, 0.9035, 0.8750, 0.8878, 0.8610, 0.9106, 0.8900,
        0.9205, 0.8756, 0.8882, 0.9108, 0.9039, 0.8601, 0.8934, 0.9155, 0.8987,
        0.9042, 0.8851, 0.8970, 0.8889, 0.9309, 0.8839, 0.8750, 0.9032, 0.8752,
        0.8768])
net.mlp.net.1.batch_norm.bias tensor([-0.0006, -0.0053, -0.0052,  0.0094,  0.0109,  0.0011,  0.0151, -0.0121,
         0.0219,  0.0178, -0.0044,  0.0039, -0.0104, -0.0135,  0.0229,  0.0052,
         0.0025, -0.0063,  0.0102, -0.0112,  0.0004,  0.0180,  0.0234, -0.0021,
         0.0127, -0.0049,  0.0019, -0.0163,  0.0080,  0.0165,  0.0007,  0.0135,
        -0.0042, -0.0044,  0.0086,  0.0134, -0.0020, -0.0276, -0.0157, -0.0126,
         0.0063,  0.0034,  0.0068,  0.0051, -0.0009,  0.0147, -0.0025,  0.0133,
        -0.0133, -0.0048,  0.0150,  0.0253, -0.0156, -0.0008,  0.0098, -0.0006,
        -0.0153,  0.0039, -0.0133,  0.0085, -0.0007,  0.0163,  0.0002, -0.0058])
net.mlp.net.1.batch_norm.running_mean tensor([0.4107, 0.4032, 0.3393, 0.5450, 0.5396, 0.6744, 0.4450, 0.4460, 0.3628,
        0.4534, 0.3739, 0.4411, 0.4920, 0.6107, 0.4179, 0.4957, 0.4917, 0.5012,
        0.3217, 0.3091, 0.5705, 0.4720, 0.4736, 0.4769, 0.3468, 0.5971, 0.4234,
        0.3811, 0.5645, 0.5286, 0.3893, 0.4929, 0.3741, 0.4524, 0.5237, 0.5093,
        0.4721, 0.3946, 0.6059, 0.4383, 0.4210, 0.4925, 0.5354, 0.2903, 0.4055,
        0.5486, 0.3808, 0.4683, 0.4033, 0.4251, 0.4266, 0.4412, 0.3295, 0.4233,
        0.5734, 0.5057, 0.3822, 0.2964, 0.5469, 0.4653, 0.6502, 0.3764, 0.4000,
        0.3650])
net.mlp.net.1.batch_norm.running_var tensor([0.2849, 0.3534, 0.2627, 0.4268, 0.4219, 1.1092, 0.3234, 0.9297, 0.2597,
        0.5549, 0.4500, 0.9504, 0.6617, 0.7765, 0.3309, 0.4504, 1.5359, 1.4036,
        0.7299, 0.2927, 0.6046, 0.8600, 0.6852, 0.5721, 0.2824, 0.6861, 0.4345,
        0.6113, 0.7416, 0.6347, 0.3225, 0.8259, 0.2616, 0.5408, 0.6096, 0.4395,
        0.9278, 0.6665, 0.7113, 0.5512, 0.3988, 0.9088, 1.2991, 0.3274, 0.4443,
        0.6545, 0.3862, 0.4298, 0.4385, 0.3730, 0.4680, 0.4257, 0.3321, 0.4682,
        0.7435, 1.6066, 0.3576, 0.3322, 0.9951, 0.5850, 0.9073, 0.5165, 0.3830,
        0.3947])
net.mlp.net.1.batch_norm.num_batches_tracked tensor(280)
net.mlp.net.2.linear.weight tensor([[-0.1202,  0.1399,  0.1074,  ...,  0.0641,  0.3075, -0.0824],
        [-0.0374,  0.1568,  0.0673,  ...,  0.1760, -0.0702, -0.0031],
        [ 0.0713,  0.2008,  0.3010,  ...,  0.2794, -0.1274,  0.0931],
        ...,
        [ 0.1393, -0.1536, -0.2609,  ..., -0.1539,  0.3420, -0.0980],
        [-0.1242, -0.1624, -0.0339,  ..., -0.0281,  0.1709, -0.3394],
        [-0.1285, -0.1191,  0.1140,  ..., -0.0936,  0.0540,  0.1682]])
net.mlp.net.2.linear.bias tensor([-0.0211,  0.0486,  0.0211, -0.1217, -0.0046, -0.0487, -0.0116, -0.0075,
        -0.0736,  0.0572, -0.0923,  0.0164,  0.0297, -0.0031, -0.0902,  0.1131,
         0.1055,  0.0392, -0.0582, -0.0598,  0.0045,  0.0133,  0.0090, -0.0136,
        -0.0314, -0.0784, -0.0736,  0.0609,  0.0834,  0.0056, -0.0954,  0.0729,
         0.1253, -0.0486, -0.0509,  0.0689,  0.0984, -0.0125, -0.1209,  0.0881,
        -0.0016, -0.0971, -0.0261,  0.0699,  0.1323,  0.0356, -0.0860, -0.0456,
         0.0570,  0.0062, -0.0900, -0.0893, -0.0098, -0.0301,  0.0985,  0.0660,
         0.0958,  0.0303, -0.0594, -0.0422,  0.0220,  0.0380,  0.0678, -0.0781])
net.mlp.net.2.batch_norm.weight tensor([0.8853, 0.9058, 0.8885, 0.8960, 0.8818, 0.8805, 0.8847, 0.9042, 0.9194,
        0.8766, 0.8719, 0.9051, 0.8937, 0.9139, 0.8932, 0.8750, 0.9264, 0.8903,
        0.8992, 0.8763, 0.9003, 0.8609, 0.8572, 0.9014, 0.8982, 0.8984, 0.8880,
        0.9039, 0.8782, 0.9125, 0.9050, 0.9082, 0.9153, 0.8974, 0.9096, 0.8794,
        0.8757, 0.8621, 0.8659, 0.8913, 0.8849, 0.8733, 0.9159, 0.8987, 0.8536,
        0.8999, 0.8860, 0.8956, 0.8981, 0.8843, 0.8808, 0.8936, 0.8927, 0.9023,
        0.9101, 0.8894, 0.9031, 0.9125, 0.9096, 0.8753, 0.8906, 0.9050, 0.8989,
        0.9153])
net.mlp.net.2.batch_norm.bias tensor([-6.6908e-04,  2.3717e-02, -1.3140e-02,  1.2858e-03, -3.5504e-03,
         5.3913e-03,  5.9348e-03, -2.0654e-03, -7.9354e-03, -1.2574e-02,
         1.0659e-02, -1.1660e-02,  2.7609e-03, -5.9367e-03,  9.8682e-04,
        -3.0279e-02, -2.8273e-02, -4.6704e-03, -6.3928e-03,  6.7295e-03,
        -1.6168e-02, -1.0983e-03, -1.5330e-02, -8.2553e-03,  1.1946e-03,
         2.1390e-03,  2.8339e-03,  1.3946e-02,  9.9379e-03,  1.0794e-02,
        -2.3230e-02, -2.4441e-02,  2.1879e-02,  6.5073e-05,  1.1409e-02,
        -6.4888e-03,  1.8161e-02,  1.9170e-03,  1.9595e-02,  1.1046e-02,
        -6.1922e-03, -2.0906e-02,  3.4262e-03,  2.5611e-02, -1.5397e-02,
        -1.6010e-02, -3.8216e-03,  1.1447e-03,  8.1675e-03,  2.6406e-03,
        -1.8906e-02,  4.3127e-03, -1.2931e-02,  1.2427e-02, -1.0775e-02,
        -1.1485e-02, -3.7241e-02,  1.2005e-02,  8.4799e-03,  2.5317e-02,
        -4.0598e-03, -2.1864e-02,  1.5924e-02, -3.2411e-03])
net.mlp.net.2.batch_norm.running_mean tensor([0.4943, 0.3133, 0.4556, 0.3378, 0.4491, 0.4009, 0.4376, 0.5579, 0.4697,
        0.4911, 0.5448, 0.4442, 0.4589, 0.5825, 0.4109, 0.5451, 0.4861, 0.5470,
        0.4655, 0.5381, 0.3829, 0.4543, 0.5604, 0.5284, 0.5109, 0.4000, 0.4426,
        0.6221, 0.5347, 0.4802, 0.4884, 0.5841, 0.5705, 0.5224, 0.4886, 0.5427,
        0.4360, 0.4293, 0.4182, 0.4640, 0.3579, 0.4637, 0.5815, 0.4106, 0.5933,
        0.5739, 0.4706, 0.4558, 0.6192, 0.4681, 0.4269, 0.3044, 0.4101, 0.4607,
        0.6100, 0.4839, 0.4538, 0.6140, 0.4230, 0.4227, 0.4843, 0.5731, 0.4958,
        0.3832])
net.mlp.net.2.batch_norm.running_var tensor([0.6661, 0.2798, 0.6728, 0.4384, 0.5160, 0.5477, 0.7004, 0.5296, 0.7698,
        0.3778, 0.8814, 0.5800, 0.9295, 0.9061, 0.6464, 0.9485, 0.4058, 0.7019,
        0.5380, 1.5441, 0.5547, 0.5120, 0.4143, 1.3714, 0.7818, 0.7324, 0.6180,
        0.9328, 0.6597, 0.5074, 0.7067, 0.7748, 0.9916, 0.6752, 1.1184, 0.7226,
        0.3815, 0.4596, 0.6079, 0.4845, 0.3837, 0.9715, 0.5997, 0.3938, 0.5191,
        0.6079, 0.8576, 0.7134, 0.5413, 0.4015, 0.5977, 0.3076, 0.5956, 0.6787,
        0.6063, 0.5419, 0.6520, 1.0579, 0.6597, 0.4983, 0.4474, 0.6235, 0.4919,
        0.4713])
net.mlp.net.2.batch_norm.num_batches_tracked tensor(280)
net.mlp.net.3.linear.weight tensor([[-0.1238,  0.2502, -0.0146,  ..., -0.0975, -0.0739,  0.1492],
        [-0.1964,  0.2062,  0.1491,  ..., -0.1050,  0.1209,  0.0951],
        [-0.0709,  0.1674, -0.0709,  ...,  0.0593,  0.0736,  0.0426],
        ...,
        [-0.0960,  0.2012,  0.1954,  ...,  0.0625, -0.1863,  0.2090],
        [-0.1322, -0.4138, -0.0433,  ...,  0.3223,  0.2012,  0.0981],
        [-0.2036,  0.1977,  0.1538,  ...,  0.2085, -0.0553,  0.0254]])
net.mlp.net.3.linear.bias tensor([ 0.0867, -0.0636,  0.0449,  0.0623, -0.0386, -0.0331, -0.0592, -0.1052,
        -0.0483,  0.0204, -0.0081, -0.0645,  0.0215,  0.0743,  0.0784, -0.0525,
        -0.0212, -0.0147,  0.0954, -0.0932,  0.1363, -0.0641, -0.0455,  0.1105,
        -0.0005,  0.0988,  0.0037, -0.0852, -0.0465,  0.0601,  0.0343,  0.0262,
         0.1006, -0.0820, -0.0445, -0.0579,  0.1150, -0.0208,  0.0410, -0.0272,
         0.0966,  0.0784,  0.0080, -0.0782,  0.1412,  0.0556, -0.0680, -0.0361,
         0.0299,  0.0531, -0.0977,  0.1253, -0.0966, -0.0227,  0.0432,  0.0288,
        -0.0151,  0.0483, -0.0670, -0.0432, -0.0541,  0.0690, -0.0623, -0.0693])
net.mlp.net.3.batch_norm.weight tensor([0.8653, 0.8629, 0.9116, 0.8691, 0.8705, 0.8815, 0.8777, 0.8747, 0.9052,
        0.9061, 0.8542, 0.8872, 0.8745, 0.8702, 0.8694, 0.8843, 0.8683, 0.8941,
        0.8890, 0.8633, 0.8769, 0.8766, 0.9026, 0.8545, 0.8905, 0.8810, 0.8876,
        0.9005, 0.8672, 0.8873, 0.8770, 0.8854, 0.8804, 0.8983, 0.9096, 0.8659,
        0.8848, 0.8813, 0.8580, 0.8721, 0.8712, 0.8974, 0.8598, 0.9156, 0.8948,
        0.8939, 0.8639, 0.8834, 0.8650, 0.8836, 0.8822, 0.8880, 0.9141, 0.9119,
        0.8902, 0.8576, 0.8552, 0.8727, 0.8782, 0.8572, 0.8848, 0.8594, 0.8848,
        0.8730])
net.mlp.net.3.batch_norm.bias tensor([ 0.0017,  0.0067, -0.0064,  0.0030, -0.0116,  0.0083,  0.0073, -0.0012,
        -0.0054, -0.0002, -0.0024,  0.0016, -0.0102, -0.0025, -0.0049, -0.0025,
        -0.0124, -0.0155,  0.0190, -0.0090, -0.0083,  0.0037,  0.0064,  0.0106,
        -0.0090, -0.0014, -0.0059, -0.0062, -0.0035,  0.0071,  0.0147, -0.0050,
         0.0030,  0.0096, -0.0032, -0.0013, -0.0069,  0.0097,  0.0012,  0.0011,
        -0.0022,  0.0052,  0.0018,  0.0178, -0.0069, -0.0117, -0.0050, -0.0033,
         0.0019, -0.0011,  0.0116,  0.0108, -0.0259,  0.0109, -0.0048,  0.0003,
        -0.0063, -0.0100,  0.0015,  0.0032,  0.0031, -0.0082, -0.0069,  0.0047])
net.mlp.net.3.batch_norm.running_mean tensor([0.4731, 0.4693, 0.4558, 0.5431, 0.4769, 0.7065, 0.4130, 0.3305, 0.4295,
        0.4871, 0.3567, 0.4262, 0.4436, 0.4053, 0.5428, 0.4638, 0.3936, 0.4300,
        0.4485, 0.3956, 0.5577, 0.6081, 0.6322, 0.5929, 0.4576, 0.7078, 0.4413,
        0.4111, 0.4163, 0.4595, 0.4689, 0.4810, 0.6734, 0.5374, 0.5065, 0.4019,
        0.4488, 0.4886, 0.4173, 0.4311, 0.4963, 0.5896, 0.4468, 0.5338, 0.6315,
        0.4763, 0.4328, 0.4477, 0.5424, 0.5130, 0.4233, 0.6148, 0.3745, 0.5979,
        0.5353, 0.4616, 0.6073, 0.5689, 0.4514, 0.4207, 0.5759, 0.4204, 0.4771,
        0.4570])
net.mlp.net.3.batch_norm.running_var tensor([0.7566, 0.4328, 0.3284, 1.1318, 0.5723, 0.8984, 0.3947, 0.3230, 0.4627,
        0.8046, 0.4073, 0.3334, 0.5572, 0.4469, 0.7783, 0.4905, 0.5337, 0.4081,
        0.5100, 0.3253, 0.4887, 2.2721, 0.8001, 0.5227, 0.4447, 1.1285, 0.4556,
        0.6040, 0.4026, 0.3283, 0.4189, 0.4431, 0.5895, 1.0239, 0.4833, 0.6181,
        0.4774, 0.9927, 0.4261, 0.6284, 0.9844, 0.9804, 0.4691, 1.0912, 0.5345,
        0.5110, 0.4708, 0.4347, 1.5911, 0.6936, 0.6259, 0.7732, 0.4527, 0.5708,
        0.5338, 0.5631, 1.2522, 1.1118, 0.6659, 0.3497, 0.5197, 0.5204, 0.5555,
        0.4773])
net.mlp.net.3.batch_norm.num_batches_tracked tensor(280)
net.mlp.net.4.weight tensor([[ 0.0817,  0.0669, -0.0497,  0.0186, -0.0481,  0.0977, -0.0444, -0.0350,
         -0.0309, -0.0510, -0.0478,  0.0082,  0.0174,  0.0340,  0.0434, -0.0092,
         -0.0667, -0.0164, -0.0606,  0.0560,  0.0308, -0.0707,  0.0953,  0.0483,
         -0.0104, -0.0792, -0.0400, -0.1163,  0.0665,  0.0080,  0.0540,  0.0282,
          0.0827, -0.1094,  0.0296,  0.0446, -0.0278, -0.0041,  0.0137, -0.0700,
         -0.0139, -0.0433,  0.0388, -0.0301,  0.0238, -0.0130, -0.0287,  0.0474,
          0.0623,  0.0139, -0.0412, -0.0418, -0.0316,  0.0392,  0.0290,  0.0549,
          0.0436,  0.0530, -0.0393,  0.0494,  0.0735, -0.0713,  0.0307,  0.0206]])
