Weights: 
embeddings.embeddings.0.weight tensor([[-0.0763,  0.0225],
        [-0.1857,  0.3096],
        [-0.2167,  0.3415],
        [-0.1925, -0.0608]])
embeddings.embeddings.1.weight tensor([[ 0.0347,  0.2305],
        [-0.0263,  0.1744],
        [-0.1845, -0.0980],
        [ 0.0263,  0.0477],
        [-0.1055, -0.1098]])
embeddings.embeddings.2.weight tensor([[-0.2410, -0.2562, -0.1151],
        [ 0.1067,  0.0742, -0.1270],
        [ 0.2864,  0.2302, -0.1851],
        [-0.1014,  0.0560, -0.1331],
        [-0.1165, -0.0805,  0.0235],
        [-0.0388,  0.0288, -0.0206]])
embeddings.embeddings.3.weight tensor([[ 0.0303,  0.3433],
        [-0.1444, -0.5676],
        [-0.0119,  0.0769],
        [ 0.6198, -0.1953]])
embeddings.embeddings.4.weight tensor([[-0.3269,  0.3187],
        [ 0.4404, -0.1223],
        [-0.0042,  0.0330],
        [ 0.1001,  0.2516]])
mlp.net.0.linear.weight tensor([[ 0.0410, -0.2466, -0.0524,  ..., -0.2018,  0.3395, -0.6230],
        [-0.0181,  0.0494,  0.1778,  ..., -0.1843,  0.1508, -0.0691],
        [ 0.0452, -0.0686,  0.0271,  ..., -0.1325, -0.0120,  0.0010],
        ...,
        [-0.1082,  0.1366, -0.0795,  ...,  0.3775, -0.2170,  0.0323],
        [-0.1833, -0.2222, -0.1268,  ...,  0.0177, -0.1898, -0.3154],
        [-0.3160, -0.4273, -0.4573,  ...,  0.0553, -0.1230, -0.3333]])
mlp.net.0.linear.bias tensor([-0.0492, -0.0365,  0.0418,  0.1037, -0.0235, -0.0223, -0.0375,  0.0897,
        -0.1093,  0.0206, -0.0051,  0.0758,  0.0281, -0.1073, -0.0435, -0.0189,
        -0.1133, -0.0473, -0.0070, -0.1256, -0.0589, -0.0273,  0.0238,  0.0617,
         0.0890, -0.0392, -0.0081, -0.0703,  0.0405, -0.1002, -0.0413, -0.0261,
        -0.0383,  0.0849, -0.0381, -0.0740,  0.1316, -0.0832,  0.0281,  0.0523,
         0.0282, -0.0908,  0.1415,  0.1165,  0.0246, -0.0314,  0.1155,  0.0774,
        -0.0059, -0.0254,  0.0088, -0.0819,  0.0800,  0.1597, -0.0847, -0.0789,
        -0.0571,  0.0281, -0.0840,  0.0097,  0.0885, -0.0142,  0.0810,  0.0968,
         0.0655, -0.0070,  0.0264,  0.0821,  0.0967,  0.0958,  0.0416,  0.0258,
         0.0588, -0.0518,  0.0660,  0.0706,  0.0477,  0.0830,  0.0697,  0.0103,
        -0.0751, -0.0307, -0.0075,  0.0529,  0.0844, -0.0285,  0.0652, -0.0263,
         0.1391, -0.0339,  0.0353, -0.0181,  0.0833, -0.0651, -0.0078, -0.0890,
         0.0433, -0.0325,  0.1113, -0.1046, -0.0354, -0.0360, -0.0554,  0.0113,
        -0.0967, -0.0658, -0.0554,  0.0509,  0.0578,  0.0683, -0.0766, -0.0764,
         0.0940, -0.0649, -0.1091, -0.0195, -0.0227, -0.0779, -0.0264, -0.0772,
        -0.0524, -0.0918,  0.0509,  0.1225,  0.1070, -0.1216, -0.0329, -0.0568])
mlp.net.0.batch_norm.weight tensor([0.5488, 0.5457, 0.6224, 0.5705, 0.4102, 0.4958, 0.4630, 0.5851, 0.4772,
        0.5513, 0.5745, 0.4667, 0.6140, 0.5366, 0.4761, 0.5654, 0.5722, 0.5683,
        0.5291, 0.5234, 0.5288, 0.5700, 0.5613, 0.4445, 0.5664, 0.5108, 0.5054,
        0.5314, 0.5145, 0.5661, 0.5405, 0.4605, 0.4822, 0.5307, 0.5105, 0.5918,
        0.6670, 0.5151, 0.4675, 0.4748, 0.5912, 0.5531, 0.5291, 0.5314, 0.6080,
        0.5390, 0.5179, 0.4840, 0.6058, 0.5550, 0.3997, 0.5287, 0.5463, 0.5982,
        0.5807, 0.5248, 0.5750, 0.5914, 0.5621, 0.5870, 0.5274, 0.5557, 0.4924,
        0.5492, 0.5068, 0.6093, 0.6072, 0.5361, 0.5381, 0.4660, 0.5497, 0.4974,
        0.5791, 0.5661, 0.5744, 0.5738, 0.5877, 0.5719, 0.4939, 0.6132, 0.5280,
        0.6271, 0.4316, 0.5572, 0.4873, 0.4933, 0.4966, 0.5658, 0.5207, 0.5242,
        0.4466, 0.4934, 0.5844, 0.5896, 0.5522, 0.4844, 0.4628, 0.5872, 0.5520,
        0.4500, 0.5987, 0.5920, 0.4878, 0.4780, 0.5915, 0.5789, 0.5572, 0.5574,
        0.5357, 0.5953, 0.6011, 0.5020, 0.5552, 0.6262, 0.6274, 0.5325, 0.5473,
        0.5438, 0.5864, 0.5651, 0.5060, 0.5590, 0.5212, 0.5360, 0.6157, 0.5128,
        0.5682, 0.5148])
mlp.net.0.batch_norm.bias tensor([ 0.1037,  0.0580,  0.0493, -0.0123, -0.0950,  0.0153,  0.0057,  0.0015,
        -0.0010, -0.1188,  0.1038, -0.0405,  0.1305, -0.0174, -0.0174,  0.0638,
         0.0689,  0.0008,  0.0307, -0.0205,  0.0008,  0.0414,  0.0224,  0.0263,
        -0.0155,  0.0029, -0.0422, -0.0030, -0.0681,  0.0164, -0.0087, -0.0307,
         0.0103,  0.0199,  0.0355,  0.0571,  0.0551,  0.0228, -0.0102, -0.0908,
         0.0335,  0.0865,  0.0733, -0.0546,  0.0490, -0.0063, -0.0236, -0.0150,
        -0.0700,  0.0018, -0.0160,  0.0285, -0.0347,  0.0682, -0.0413, -0.0227,
         0.0055,  0.0580, -0.1083, -0.1105, -0.0348,  0.0451, -0.0262,  0.0167,
        -0.0103, -0.0231,  0.0170,  0.0656,  0.0538,  0.0232,  0.0512,  0.0037,
         0.0524,  0.0514,  0.0663, -0.1207, -0.1121,  0.0274,  0.0033, -0.0036,
        -0.0244,  0.0512, -0.0833, -0.0127, -0.0292, -0.0074,  0.0192,  0.0674,
         0.1783,  0.0359, -0.0104, -0.0932,  0.0401,  0.1062,  0.1189, -0.0154,
        -0.0174, -0.0675, -0.0349, -0.0047,  0.0873,  0.1298, -0.0107, -0.0194,
         0.0149,  0.0237,  0.0608, -0.0057,  0.0231,  0.0278,  0.0881,  0.0327,
         0.0128, -0.1115,  0.0368, -0.1057, -0.0083, -0.0003,  0.0535,  0.0686,
         0.0269, -0.0889,  0.0978, -0.0589, -0.0836, -0.0396,  0.0154,  0.0201])
mlp.net.0.batch_norm.running_mean tensor([4.1275e-01, 3.9205e-02, 2.2788e-01, 4.5597e-01, 2.3035e-02, 3.2864e-03,
        9.0953e-02, 4.1323e-03, 2.5073e-05, 3.5863e-01, 1.1716e-01, 3.8635e-01,
        1.8044e-01, 4.6322e-04, 1.1497e-01, 4.8008e-01, 8.2219e-03, 9.2392e-04,
        1.6122e-03, 3.8565e-02, 3.3730e-02, 3.6209e-03, 3.0708e-03, 1.5862e-02,
        3.9176e-01, 4.6403e-02, 8.6942e-01, 5.6052e-45, 4.4402e-04, 1.4911e-02,
        2.0746e-03, 1.3980e-04, 2.2601e-03, 1.2237e-02, 1.5896e-02, 1.6611e-02,
        5.7388e-01, 9.6751e-02, 2.0946e-02, 3.6327e-01, 1.3808e-02, 1.4423e-02,
        4.5076e-01, 8.9442e-02, 7.6052e-02, 4.4915e-04, 2.1229e-03, 7.3077e-03,
        5.0372e-01, 3.3682e-01, 9.2978e-02, 5.4480e-02, 3.0203e-01, 1.8103e-01,
        2.3727e-03, 6.4826e-01, 1.1058e-02, 1.5588e-01, 1.3277e-01, 2.3975e-01,
        4.0846e-02, 2.6618e-03, 1.8460e-02, 6.5364e-01, 1.0948e-01, 5.6054e-03,
        2.8913e-02, 1.5147e-01, 4.7600e-02, 2.1587e-01, 8.6189e-02, 1.2035e-01,
        3.0759e-02, 6.5583e-02, 2.3586e-01, 2.6255e-01, 4.4171e-01, 8.0931e-02,
        1.4391e-01, 5.0079e-05, 1.4759e-01, 2.5723e-02, 1.8204e-02, 7.2544e-01,
        8.8033e-02, 5.2797e-01, 1.0375e-01, 2.1757e-02, 3.2370e-01, 1.3939e-01,
        1.5145e-01, 8.6935e-02, 2.3708e-02, 3.7453e-01, 8.0800e-02, 3.6241e-01,
        9.1454e-02, 5.5755e-01, 5.6825e-01, 6.1999e-03, 1.0676e-01, 6.5321e-02,
        1.9899e-02, 2.5464e-01, 6.4701e-03, 1.5693e-02, 1.0556e-02, 1.4589e-02,
        9.1296e-02, 2.0869e-02, 1.4357e-01, 1.3117e-01, 1.0986e-02, 4.4846e-02,
        1.2562e-01, 5.9302e-01, 3.4292e-01, 1.6334e-02, 1.5004e-02, 8.6478e-02,
        4.4982e-01, 2.1551e-01, 9.4691e-02, 6.6083e-01, 1.4076e-01, 5.8471e-03,
        1.6644e-03, 8.9232e-02])
mlp.net.0.batch_norm.running_var tensor([6.2553e-02, 4.1615e-03, 2.9525e-02, 4.2113e-02, 3.0530e-03, 4.9606e-04,
        1.1166e-02, 5.3259e-04, 1.0119e-06, 4.8154e-02, 2.8470e-02, 3.7741e-02,
        1.0510e-02, 4.6182e-05, 2.3407e-02, 3.0944e-02, 9.3320e-04, 1.5860e-04,
        1.5313e-04, 6.2759e-03, 6.1883e-03, 4.5207e-04, 2.5287e-04, 3.5923e-03,
        3.0351e-02, 6.1107e-03, 8.7790e-02, 5.6052e-45, 5.5609e-05, 3.3131e-03,
        2.6317e-04, 1.0145e-05, 2.7613e-04, 2.3948e-03, 3.1410e-03, 3.6169e-03,
        3.1932e-02, 2.0638e-02, 3.6410e-03, 8.0853e-02, 3.8398e-03, 1.8629e-03,
        4.1179e-02, 1.7877e-02, 1.1001e-02, 5.3873e-05, 3.5246e-04, 9.8086e-04,
        3.1901e-02, 1.3649e-02, 1.4481e-02, 7.9980e-03, 3.5472e-02, 2.3593e-02,
        3.5107e-04, 7.0124e-02, 3.5883e-03, 2.8594e-02, 1.5480e-02, 2.8681e-02,
        4.7571e-03, 2.1246e-04, 2.5701e-03, 6.5551e-02, 2.7846e-02, 1.2630e-03,
        4.6158e-03, 2.0577e-02, 5.5652e-03, 3.8003e-02, 1.2631e-02, 1.6264e-02,
        6.1894e-03, 1.1686e-02, 2.5443e-02, 1.7971e-02, 3.6155e-02, 1.3871e-02,
        1.4729e-02, 3.1747e-06, 2.3096e-02, 3.0598e-03, 3.2189e-03, 8.0120e-02,
        2.2297e-02, 9.0851e-02, 1.9112e-02, 3.6242e-03, 3.3589e-02, 2.9151e-02,
        2.3505e-02, 1.8651e-02, 6.1870e-03, 4.5954e-02, 2.4211e-02, 4.6671e-02,
        1.8774e-02, 2.2580e-02, 4.6094e-02, 5.0361e-04, 1.6521e-02, 7.2722e-03,
        3.8784e-03, 5.6310e-02, 5.4496e-04, 1.7705e-03, 7.5556e-04, 2.9291e-03,
        1.9382e-02, 3.9852e-03, 3.0144e-02, 2.1462e-02, 1.3365e-03, 7.8237e-03,
        1.5763e-02, 3.5723e-02, 2.3539e-02, 1.5071e-03, 2.0095e-03, 1.3825e-02,
        3.6171e-02, 2.8221e-02, 2.3490e-02, 4.8713e-02, 2.3015e-02, 6.9809e-04,
        2.2194e-04, 1.9895e-02])
mlp.net.0.batch_norm.num_batches_tracked tensor(2120)
mlp.net.1.linear.weight tensor([[-0.0482,  0.0490, -0.0365,  ...,  0.0174,  0.0400,  0.0105],
        [-0.0547,  0.1168,  0.0796,  ..., -0.0720, -0.0308, -0.0423],
        [ 0.0695, -0.1065,  0.0010,  ..., -0.0439, -0.0089,  0.0122],
        ...,
        [-0.1178, -0.0612, -0.2160,  ..., -0.0238, -0.0720, -0.0173],
        [-0.0380, -0.0655, -0.0766,  ...,  0.0527, -0.1498, -0.1950],
        [-0.0817, -0.0611, -0.0930,  ..., -0.0680,  0.0141, -0.0916]])
mlp.net.1.linear.bias tensor([ 0.0896, -0.0591, -0.0271,  0.0518,  0.1982,  0.0974,  0.0643,  0.0663,
         0.0290,  0.0074, -0.0006, -0.0071,  0.0910, -0.0216,  0.0309,  0.0209,
        -0.0233,  0.0641, -0.0427,  0.0647,  0.0774,  0.0271,  0.0094,  0.0794,
         0.0849,  0.0274, -0.0445,  0.0011, -0.0140,  0.0141,  0.0268,  0.0808,
         0.0621,  0.0612, -0.0698,  0.0441,  0.0068, -0.0381,  0.0560,  0.0280,
         0.0443, -0.0261,  0.0878,  0.0308, -0.0055,  0.0837,  0.0767,  0.0518,
         0.0240,  0.0211,  0.0141, -0.0633, -0.0050, -0.0013,  0.0659, -0.0013,
         0.0643,  0.0286,  0.1079,  0.0234,  0.0459,  0.0097,  0.0544,  0.0608,
         0.1094, -0.0718,  0.0431,  0.0632,  0.0385,  0.0719, -0.0013, -0.0439,
         0.0238, -0.0050,  0.1199,  0.0091,  0.0548,  0.0736, -0.0033, -0.0219,
         0.0386,  0.0234,  0.0707,  0.0111,  0.0181,  0.0175,  0.0420,  0.0254,
        -0.0614,  0.0069,  0.0426,  0.0169, -0.0422,  0.0664,  0.0013, -0.0013,
         0.0418,  0.0325,  0.0625,  0.0091, -0.0023,  0.0683,  0.0198, -0.0217,
         0.0833, -0.0390,  0.0111,  0.0111,  0.0152, -0.0338,  0.0052,  0.0511,
         0.1131,  0.0225, -0.0051,  0.0569,  0.0584,  0.0218, -0.0059,  0.1287,
        -0.0495,  0.0879, -0.0342, -0.0152,  0.0839,  0.0153,  0.0766,  0.0505])
mlp.net.1.batch_norm.weight tensor([0.5300, 0.5464, 0.5201, 0.5219, 0.5681, 0.5858, 0.5238, 0.5632, 0.5572,
        0.4876, 0.5573, 0.5020, 0.4899, 0.5357, 0.5092, 0.5084, 0.4950, 0.5369,
        0.5397, 0.5795, 0.5377, 0.5219, 0.5558, 0.5429, 0.4539, 0.5553, 0.5218,
        0.5314, 0.5326, 0.4830, 0.5604, 0.5223, 0.5208, 0.5314, 0.5354, 0.5310,
        0.5782, 0.4765, 0.5554, 0.4997, 0.5552, 0.5450, 0.5654, 0.4999, 0.5229,
        0.5331, 0.5717, 0.5283, 0.5162, 0.5079, 0.4918, 0.5085, 0.5484, 0.5694,
        0.5487, 0.5111, 0.6127, 0.5769, 0.5732, 0.4417, 0.5673, 0.4966, 0.5535,
        0.5365, 0.5912, 0.5400, 0.5149, 0.5047, 0.5831, 0.5000, 0.5722, 0.4949,
        0.5029, 0.5776, 0.5382, 0.5613, 0.5520, 0.5567, 0.5111, 0.5552, 0.5486,
        0.5689, 0.4930, 0.5195, 0.5924, 0.4679, 0.5260, 0.5328, 0.5384, 0.5421,
        0.5478, 0.4964, 0.4986, 0.5590, 0.5728, 0.5509, 0.5410, 0.5457, 0.5490,
        0.5102, 0.5525, 0.5607, 0.5489, 0.5451, 0.5204, 0.5365, 0.5259, 0.4898,
        0.5299, 0.5686, 0.5379, 0.5869, 0.5243, 0.5386, 0.5309, 0.5156, 0.5620,
        0.5594, 0.5879, 0.5637, 0.5009, 0.5674, 0.5363, 0.5232, 0.6047, 0.5406,
        0.5055, 0.5038])
mlp.net.1.batch_norm.bias tensor([-0.0527,  0.0965,  0.0605, -0.0820,  0.1256,  0.0682,  0.1190,  0.0974,
        -0.1093, -0.0521,  0.0203,  0.0295, -0.0630, -0.1233,  0.1233,  0.1087,
         0.0388,  0.0977,  0.0993,  0.1244,  0.0501,  0.0858,  0.0892,  0.1011,
         0.1022,  0.0764,  0.0425, -0.0611,  0.0368, -0.0680,  0.0829,  0.0847,
         0.0556,  0.0667, -0.0210,  0.0521,  0.0540, -0.0712,  0.0854,  0.0370,
        -0.0034,  0.0333,  0.0865,  0.0668,  0.0325,  0.1197,  0.0751,  0.1372,
         0.1045,  0.0662,  0.1218,  0.0318,  0.0750,  0.0702,  0.1178, -0.0510,
         0.0976,  0.0434,  0.0867, -0.0060,  0.0326, -0.0506,  0.0688,  0.1335,
         0.1055,  0.0531,  0.1181,  0.0982,  0.0749,  0.1098,  0.0128,  0.0355,
        -0.0365, -0.0439,  0.1192, -0.0384,  0.0703,  0.0770,  0.0455,  0.0390,
         0.0806,  0.0778, -0.0060, -0.0090,  0.0259, -0.0018,  0.0983,  0.0669,
         0.0194,  0.0645, -0.0803,  0.0998,  0.0905,  0.0957,  0.0810,  0.0865,
         0.1089,  0.0135,  0.1580, -0.0311,  0.0745,  0.1370,  0.1237,  0.0728,
         0.0776,  0.0440,  0.1021,  0.0150,  0.0791, -0.1362,  0.0289,  0.0813,
         0.1384,  0.0900,  0.0516,  0.1153,  0.0932,  0.0951,  0.0893,  0.1339,
         0.0664,  0.0896,  0.0307, -0.0273,  0.0990, -0.1322, -0.0774, -0.0929])
mlp.net.1.batch_norm.running_mean tensor([0.3455, 0.3279, 0.3570, 0.3783, 0.5797, 0.5013, 0.4558, 0.5342, 0.3821,
        0.2897, 0.4342, 0.3673, 0.3846, 0.3479, 0.4588, 0.3888, 0.2985, 0.4977,
        0.4025, 0.5122, 0.4434, 0.3782, 0.4419, 0.5423, 0.3768, 0.3907, 0.4566,
        0.3408, 0.4077, 0.3026, 0.4240, 0.4718, 0.3778, 0.3686, 0.2654, 0.3288,
        0.4265, 0.2903, 0.3508, 0.3526, 0.4598, 0.3641, 0.4467, 0.3759, 0.3640,
        0.4866, 0.5134, 0.3590, 0.4652, 0.3426, 0.4427, 0.3242, 0.3786, 0.4917,
        0.4572, 0.3385, 0.5248, 0.4131, 0.4821, 0.3130, 0.4563, 0.3339, 0.4503,
        0.4744, 0.5188, 0.3041, 0.4357, 0.4421, 0.4795, 0.4604, 0.4165, 0.3544,
        0.3089, 0.3307, 0.5551, 0.3158, 0.3922, 0.4218, 0.4422, 0.3244, 0.4202,
        0.4867, 0.3526, 0.3406, 0.3496, 0.3730, 0.4211, 0.4075, 0.2858, 0.3526,
        0.3326, 0.3422, 0.3813, 0.4745, 0.4366, 0.4252, 0.4842, 0.3497, 0.4715,
        0.3036, 0.3904, 0.4664, 0.3893, 0.3905, 0.4941, 0.3390, 0.3998, 0.3043,
        0.4740, 0.3638, 0.3771, 0.4253, 0.6283, 0.4719, 0.3553, 0.3778, 0.3853,
        0.3859, 0.3469, 0.5542, 0.2949, 0.5260, 0.3043, 0.3054, 0.5813, 0.3472,
        0.3473, 0.3397])
mlp.net.1.batch_norm.running_var tensor([0.2527, 0.2482, 0.3663, 0.3863, 0.5006, 0.4309, 0.3774, 0.4880, 0.4708,
        0.2055, 0.5889, 0.4376, 0.2785, 0.3623, 0.5126, 0.2968, 0.2419, 0.5048,
        0.4301, 0.3735, 0.3378, 0.2957, 0.5726, 0.7661, 0.3457, 0.4475, 0.5970,
        0.3469, 0.4824, 0.2775, 0.3546, 0.3573, 0.3545, 0.2653, 0.3306, 0.4182,
        0.4593, 0.2773, 0.3226, 0.3529, 0.6690, 0.4316, 0.4780, 0.2634, 0.2771,
        0.5800, 0.6007, 0.4254, 0.4311, 0.3800, 0.3554, 0.2482, 0.2697, 0.5565,
        0.6062, 0.3345, 0.7419, 0.4487, 0.4144, 0.2526, 0.5602, 0.3903, 0.4793,
        0.5402, 0.3810, 0.4292, 0.3177, 0.3742, 0.3995, 0.4204, 0.6219, 0.5332,
        0.2808, 0.3056, 0.5143, 0.3134, 0.3489, 0.3004, 0.3437, 0.3952, 0.5203,
        0.6721, 0.3391, 0.3915, 0.2738, 0.5294, 0.3163, 0.3342, 0.2995, 0.3145,
        0.3229, 0.2959, 0.2792, 0.4351, 0.6020, 0.4119, 0.4006, 0.3122, 0.4967,
        0.2740, 0.4593, 0.3185, 0.3176, 0.4865, 0.3903, 0.3767, 0.3384, 0.2742,
        0.5985, 0.3972, 0.4356, 0.3251, 0.6482, 0.5585, 0.4268, 0.3229, 0.3417,
        0.3488, 0.3096, 0.4403, 0.2663, 0.5974, 0.2684, 0.3118, 0.5985, 0.3808,
        0.2490, 0.3654])
mlp.net.1.batch_norm.num_batches_tracked tensor(2120)
mlp.net.2.linear.weight tensor([[-0.1017, -0.0342, -0.0726,  ..., -0.0346, -0.0007, -0.0595],
        [-0.0618,  0.0440, -0.0254,  ..., -0.1357,  0.0496, -0.0855],
        [ 0.0235, -0.0211,  0.0765,  ..., -0.0188,  0.0295, -0.0840],
        ...,
        [-0.0613, -0.0856, -0.0176,  ...,  0.0218,  0.0220, -0.1060],
        [-0.0024, -0.0244, -0.0953,  ...,  0.0134, -0.0953, -0.0397],
        [ 0.0083, -0.0075,  0.0210,  ..., -0.0040, -0.1457, -0.0432]])
mlp.net.2.linear.bias tensor([ 0.0507, -0.0157, -0.0389,  0.0774,  0.0210,  0.0381,  0.0499,  0.0649,
         0.1118,  0.1171,  0.0263,  0.0619,  0.1005,  0.0715,  0.0867, -0.0190,
         0.0832,  0.0753, -0.0176,  0.1671,  0.0362,  0.0345,  0.0133,  0.0525,
        -0.1001,  0.0828,  0.1051,  0.0848, -0.0040,  0.0674,  0.0646,  0.0150,
         0.0410,  0.0744,  0.1425, -0.0548,  0.2141,  0.0520,  0.0751,  0.0760,
         0.0387,  0.1229, -0.0006, -0.0177,  0.0175,  0.0230,  0.1377, -0.0590,
         0.0396,  0.0593, -0.0755,  0.0145,  0.0581,  0.1362,  0.0305,  0.0805,
        -0.0324,  0.0521,  0.0340,  0.0595,  0.1146,  0.0219,  0.0306,  0.0769,
        -0.0259, -0.0411,  0.1328, -0.0008,  0.0889,  0.0188, -0.0093,  0.0292,
         0.0478,  0.0058,  0.0088,  0.0308,  0.1189, -0.0143,  0.0217,  0.1036,
         0.0061,  0.0119,  0.0745,  0.0441,  0.0683,  0.0613,  0.1157,  0.0582,
         0.0656,  0.0556,  0.0539, -0.0339,  0.0012,  0.1289,  0.1348, -0.0374,
         0.1126,  0.0577,  0.0217,  0.0410,  0.0770,  0.0560,  0.0278,  0.0152,
         0.1232,  0.0483,  0.0716,  0.0427, -0.0110, -0.0653, -0.0400,  0.0177,
         0.0104,  0.0419,  0.1045, -0.0687, -0.0328,  0.0477,  0.0198,  0.0207,
         0.1266,  0.0456,  0.0910,  0.0394, -0.0019, -0.0206,  0.0344,  0.0318])
mlp.net.2.batch_norm.weight tensor([0.4968, 0.5279, 0.5574, 0.5722, 0.5223, 0.5465, 0.5051, 0.5517, 0.5514,
        0.5781, 0.5152, 0.5350, 0.6028, 0.5396, 0.5552, 0.5054, 0.5174, 0.5680,
        0.5176, 0.5279, 0.5518, 0.5445, 0.5562, 0.5105, 0.4858, 0.5064, 0.5311,
        0.5266, 0.5518, 0.5433, 0.5223, 0.5708, 0.5766, 0.5634, 0.5236, 0.4872,
        0.5806, 0.5163, 0.5696, 0.5784, 0.5301, 0.5897, 0.5241, 0.4960, 0.5241,
        0.5532, 0.5555, 0.4631, 0.5689, 0.5595, 0.4890, 0.5419, 0.5392, 0.5774,
        0.5201, 0.5208, 0.4646, 0.5680, 0.5341, 0.5267, 0.5383, 0.5777, 0.5146,
        0.5271, 0.5126, 0.5164, 0.4961, 0.5261, 0.5333, 0.5138, 0.5501, 0.5545,
        0.5051, 0.5171, 0.5301, 0.5570, 0.5347, 0.5171, 0.5052, 0.5039, 0.5724,
        0.4964, 0.5361, 0.5526, 0.5334, 0.5545, 0.5347, 0.5620, 0.5520, 0.5241,
        0.5168, 0.5275, 0.5324, 0.4975, 0.5809, 0.4842, 0.5479, 0.5129, 0.5109,
        0.4902, 0.5041, 0.5189, 0.5183, 0.5256, 0.5375, 0.5265, 0.5635, 0.5520,
        0.4695, 0.4835, 0.4988, 0.5799, 0.5683, 0.5038, 0.5493, 0.5107, 0.5419,
        0.5723, 0.4983, 0.5322, 0.5239, 0.5520, 0.5617, 0.5338, 0.5139, 0.4926,
        0.4845, 0.5495])
mlp.net.2.batch_norm.bias tensor([ 0.1332,  0.0291,  0.0024,  0.0180,  0.0617,  0.1054,  0.0532,  0.0552,
         0.1092,  0.0705,  0.0212,  0.0594,  0.0781,  0.0559,  0.0767,  0.0409,
         0.1094,  0.0518,  0.0827,  0.1381,  0.0587,  0.0986,  0.0429,  0.0725,
         0.0188,  0.0521,  0.0937,  0.0768,  0.0721,  0.1112,  0.1289,  0.0450,
         0.0955,  0.0907,  0.0998, -0.0141,  0.1175,  0.0683,  0.0912,  0.0376,
         0.0020,  0.0779, -0.0946, -0.1685, -0.0018,  0.0910,  0.1137, -0.0388,
         0.0752,  0.0506, -0.0067,  0.0112,  0.1120,  0.0715,  0.0475,  0.0912,
         0.0030,  0.0791,  0.0922,  0.0777,  0.1048,  0.0292, -0.0958,  0.1005,
         0.0104,  0.0351,  0.1364, -0.0727,  0.1308, -0.1417, -0.1505,  0.0389,
         0.0373, -0.0901,  0.0996,  0.0971,  0.0938, -0.0375,  0.1043,  0.1126,
         0.0356,  0.0202,  0.0733,  0.0847,  0.1017,  0.0644,  0.1120,  0.0981,
         0.0725,  0.0626,  0.1013, -0.1486,  0.0855,  0.1061,  0.1016,  0.0827,
         0.0758,  0.0637,  0.0235,  0.0906,  0.1116,  0.0678, -0.0253, -0.1321,
         0.0836,  0.0832,  0.0946,  0.0726, -0.0185, -0.0291, -0.0078,  0.1103,
         0.0784,  0.0277,  0.1333, -0.0428,  0.0479,  0.0741, -0.0877,  0.0667,
         0.1021,  0.0412,  0.0544,  0.0987,  0.0694,  0.0781, -0.0396,  0.0528])
mlp.net.2.batch_norm.running_mean tensor([0.4334, 0.3893, 0.3659, 0.5418, 0.5222, 0.4347, 0.4016, 0.5778, 0.4604,
        0.5512, 0.4104, 0.4529, 0.4521, 0.5723, 0.4884, 0.3080, 0.4781, 0.4998,
        0.3321, 0.4942, 0.5075, 0.5162, 0.3278, 0.4387, 0.2847, 0.4431, 0.5935,
        0.4928, 0.3612, 0.3928, 0.5330, 0.4825, 0.4514, 0.4936, 0.4838, 0.2628,
        0.5491, 0.3705, 0.5530, 0.5762, 0.3567, 0.4778, 0.4234, 0.4019, 0.3903,
        0.4037, 0.5593, 0.2971, 0.4552, 0.4126, 0.2646, 0.3903, 0.4622, 0.4687,
        0.3779, 0.5488, 0.2616, 0.5027, 0.4671, 0.4936, 0.4628, 0.4539, 0.3499,
        0.5367, 0.3423, 0.4345, 0.4902, 0.3402, 0.5276, 0.3648, 0.3811, 0.3871,
        0.3864, 0.3342, 0.4492, 0.3861, 0.5299, 0.3195, 0.4240, 0.4904, 0.4414,
        0.3539, 0.5333, 0.4388, 0.4846, 0.4937, 0.5370, 0.5253, 0.3954, 0.4788,
        0.4709, 0.3623, 0.3795, 0.4466, 0.5648, 0.3978, 0.4295, 0.4780, 0.3570,
        0.3948, 0.4575, 0.4440, 0.3061, 0.3949, 0.5355, 0.5400, 0.5096, 0.5397,
        0.3201, 0.1988, 0.3361, 0.3256, 0.4611, 0.3651, 0.4720, 0.3551, 0.4538,
        0.5431, 0.3782, 0.4692, 0.5805, 0.5391, 0.6200, 0.5117, 0.4186, 0.4311,
        0.3606, 0.4129])
mlp.net.2.batch_norm.running_var tensor([0.4662, 0.4018, 0.4342, 0.7230, 0.5650, 0.4405, 0.4507, 0.6700, 0.3703,
        0.6519, 0.5475, 0.4128, 0.4436, 0.9685, 0.4296, 0.3270, 0.4199, 0.5912,
        0.3309, 0.3008, 0.8998, 0.8992, 0.4061, 0.4496, 0.3680, 0.5335, 0.7001,
        0.6170, 0.4433, 0.4066, 0.5072, 0.6557, 0.4875, 0.4619, 0.3621, 0.2448,
        0.3948, 0.2768, 0.4744, 0.9284, 0.3504, 0.6580, 0.5084, 0.4946, 0.4228,
        0.3689, 0.4267, 0.2344, 0.3580, 0.4891, 0.2261, 0.4750, 0.3813, 0.4770,
        0.4358, 0.4646, 0.2861, 0.3816, 0.5120, 0.5673, 0.3715, 0.5676, 0.3362,
        0.4593, 0.4014, 0.7007, 0.3869, 0.3111, 0.5379, 0.3896, 0.4468, 0.4235,
        0.4015, 0.3804, 0.5893, 0.4083, 0.4184, 0.4042, 0.4570, 0.3435, 0.5730,
        0.3992, 0.7203, 0.5008, 0.4530, 0.6204, 0.4098, 0.5718, 0.3429, 0.5262,
        0.3634, 0.4573, 0.4654, 0.3582, 0.4693, 0.3839, 0.4662, 0.6609, 0.3426,
        0.3646, 0.3958, 0.3882, 0.2795, 0.4573, 0.6753, 0.6179, 0.7785, 0.6053,
        0.2747, 0.1484, 0.3282, 0.2091, 0.4286, 0.4677, 0.4377, 0.4684, 0.6603,
        0.8448, 0.4234, 0.6037, 0.5709, 0.4798, 0.9287, 0.4975, 0.3761, 0.6896,
        0.2931, 0.5358])
mlp.net.2.batch_norm.num_batches_tracked tensor(2120)
mlp.net.3.linear.weight tensor([[ 0.0916, -0.0652, -0.0085,  ...,  0.0225, -0.1235,  0.0805],
        [-0.0467,  0.0850,  0.0430,  ..., -0.1097,  0.0189, -0.0572],
        [ 0.1326, -0.0876,  0.0279,  ...,  0.0745, -0.0670,  0.0298],
        ...,
        [-0.0366, -0.0729,  0.0544,  ..., -0.0759, -0.0833, -0.0032],
        [ 0.0229, -0.1205, -0.0311,  ..., -0.0032,  0.0207,  0.0859],
        [-0.0259,  0.1045,  0.1128,  ...,  0.0026,  0.0241,  0.0859]])
mlp.net.3.linear.bias tensor([ 0.1233,  0.0621,  0.0877, -0.0897,  0.0846,  0.0417,  0.0356,  0.0750,
        -0.0132,  0.1104,  0.0138,  0.0064, -0.0276,  0.0910,  0.0608,  0.0629,
         0.0236,  0.0362,  0.0590,  0.1220,  0.0768, -0.0315,  0.0581,  0.1061,
        -0.0102,  0.0115,  0.0440,  0.1541,  0.0924,  0.0325,  0.0587,  0.1314,
         0.0218,  0.0861,  0.0693,  0.0442,  0.0240, -0.0136,  0.0975,  0.0294,
         0.0813,  0.0427,  0.0002,  0.1018, -0.0285,  0.0817,  0.1145,  0.0580,
         0.1167,  0.0651,  0.0475,  0.0867,  0.0769, -0.0063,  0.0719,  0.0205,
        -0.0142,  0.0752,  0.0454,  0.0652,  0.0732, -0.0049, -0.0258,  0.0269,
         0.0820,  0.0242,  0.1005,  0.0310,  0.0138,  0.0607, -0.0525,  0.0602,
         0.1242,  0.0052,  0.0030,  0.0117, -0.0487,  0.0576,  0.0183,  0.0080,
         0.0209,  0.0846,  0.0618,  0.0185,  0.0955,  0.0797, -0.0049,  0.0930,
         0.0961,  0.0505,  0.0729, -0.0446, -0.0156,  0.0107,  0.0311,  0.1101,
        -0.0257,  0.0374,  0.0485,  0.0511,  0.0479,  0.0575,  0.0776,  0.0410,
         0.0679, -0.0020,  0.0200,  0.0517, -0.0165,  0.0114,  0.0053,  0.0653,
         0.0524,  0.1939,  0.0643,  0.0243,  0.0006,  0.0489,  0.0214,  0.1423,
         0.0309,  0.0608,  0.0340, -0.0319, -0.0125,  0.0618,  0.0466,  0.0955])
mlp.net.3.batch_norm.weight tensor([0.5398, 0.5283, 0.5664, 0.5466, 0.5564, 0.5339, 0.5265, 0.4954, 0.4946,
        0.5285, 0.5066, 0.5355, 0.4906, 0.5430, 0.5079, 0.5307, 0.5295, 0.5319,
        0.5289, 0.5473, 0.4982, 0.5492, 0.5490, 0.5564, 0.5124, 0.5073, 0.5408,
        0.5400, 0.5398, 0.5400, 0.5240, 0.5492, 0.5362, 0.5264, 0.5599, 0.5592,
        0.5597, 0.5558, 0.5481, 0.5112, 0.5514, 0.5764, 0.5487, 0.5252, 0.5396,
        0.5031, 0.5597, 0.5184, 0.5467, 0.5211, 0.5540, 0.4999, 0.5117, 0.4844,
        0.5395, 0.5152, 0.5075, 0.4760, 0.5384, 0.5176, 0.5435, 0.4443, 0.5189,
        0.5520, 0.5526, 0.5042, 0.5402, 0.4912, 0.5108, 0.5239, 0.5390, 0.5177,
        0.5455, 0.5102, 0.5252, 0.5507, 0.5125, 0.5547, 0.5507, 0.5457, 0.5117,
        0.5477, 0.5567, 0.5188, 0.4703, 0.5552, 0.5104, 0.5455, 0.5294, 0.5270,
        0.5373, 0.5319, 0.5074, 0.5196, 0.4981, 0.5274, 0.5526, 0.5479, 0.5439,
        0.5656, 0.5618, 0.5263, 0.5376, 0.5358, 0.5134, 0.5208, 0.5436, 0.5315,
        0.5201, 0.5073, 0.5067, 0.5484, 0.5555, 0.5544, 0.5409, 0.5069, 0.5188,
        0.5227, 0.5443, 0.5364, 0.5087, 0.5241, 0.5442, 0.4886, 0.5144, 0.5632,
        0.5604, 0.5467])
mlp.net.3.batch_norm.bias tensor([-0.1003, -0.1184, -0.0800,  0.0685, -0.0568, -0.0983,  0.0399, -0.1608,
        -0.1484, -0.1220, -0.1756, -0.0095,  0.1374, -0.0588, -0.0978, -0.1689,
         0.1425, -0.1000, -0.0955, -0.0550, -0.1548,  0.0834, -0.0865, -0.0767,
        -0.1978, -0.1009, -0.0952, -0.1430, -0.0932, -0.2017,  0.0020, -0.0751,
        -0.1120, -0.1451, -0.0126, -0.0844, -0.0429,  0.0048, -0.1435, -0.1156,
        -0.0490, -0.0421, -0.1159, -0.1597, -0.0264, -0.1237, -0.0703,  0.1845,
        -0.1120,  0.0943, -0.1123, -0.1883, -0.0491,  0.2646, -0.1016, -0.0627,
         0.0486, -0.1301, -0.1688, -0.1466, -0.1102,  0.3578,  0.0883, -0.0288,
        -0.0487, -0.1350, -0.0074, -0.1836, -0.1866,  0.1323,  0.0797, -0.2088,
        -0.0507, -0.1360,  0.0423, -0.0968, -0.1110, -0.1145, -0.1284,  0.0958,
        -0.1062, -0.1186,  0.0201, -0.1110, -0.1833, -0.0731, -0.1175, -0.0598,
        -0.1785, -0.1773, -0.1673,  0.1031, -0.1355, -0.1142, -0.0376, -0.1270,
         0.0041, -0.0206, -0.1294, -0.1090, -0.0403, -0.1580,  0.0358, -0.0965,
        -0.1520, -0.1573, -0.0336, -0.1071, -0.1126, -0.1970, -0.1206, -0.0893,
         0.0325, -0.1318, -0.0831,  0.1799, -0.0503,  0.0688, -0.1497,  0.1137,
         0.0133, -0.0077, -0.0791, -0.2445,  0.0211, -0.0780, -0.0568, -0.0319])
mlp.net.3.batch_norm.running_mean tensor([0.5494, 0.4897, 0.5021, 0.3461, 0.4461, 0.4809, 0.4366, 0.5848, 0.4293,
        0.4057, 0.3760, 0.4589, 0.3520, 0.6010, 0.5827, 0.4594, 0.4789, 0.4177,
        0.4980, 0.3923, 0.5109, 0.3903, 0.3996, 0.4536, 0.4186, 0.5107, 0.4606,
        0.4723, 0.4636, 0.4248, 0.4675, 0.5420, 0.4875, 0.4103, 0.4836, 0.4663,
        0.4645, 0.4359, 0.5253, 0.5350, 0.5367, 0.4710, 0.5389, 0.4407, 0.3833,
        0.3750, 0.6193, 0.3754, 0.5148, 0.5030, 0.5341, 0.4978, 0.5653, 0.3548,
        0.5521, 0.3722, 0.3756, 0.4677, 0.5406, 0.4163, 0.4065, 0.3106, 0.3569,
        0.4777, 0.4327, 0.4505, 0.3701, 0.5046, 0.5378, 0.4332, 0.3865, 0.6207,
        0.4696, 0.4666, 0.4126, 0.5533, 0.3229, 0.4384, 0.4536, 0.4507, 0.3878,
        0.5131, 0.3919, 0.4016, 0.4841, 0.4947, 0.4553, 0.5411, 0.5652, 0.5202,
        0.5018, 0.4377, 0.5283, 0.4314, 0.5393, 0.5476, 0.4403, 0.4137, 0.4410,
        0.4414, 0.4151, 0.5780, 0.3817, 0.4674, 0.3655, 0.4628, 0.5929, 0.4371,
        0.3946, 0.3458, 0.4487, 0.3925, 0.5441, 0.4855, 0.4236, 0.3830, 0.4065,
        0.3745, 0.4641, 0.4655, 0.4322, 0.4116, 0.5146, 0.4193, 0.3640, 0.4955,
        0.4249, 0.4083])
mlp.net.3.batch_norm.running_var tensor([0.5860, 0.5374, 0.3837, 0.3736, 0.4402, 0.5479, 0.4772, 0.5997, 0.5180,
        0.2598, 0.3382, 0.6041, 0.3660, 0.9468, 0.9680, 0.4922, 0.7273, 0.4810,
        0.7059, 0.3118, 0.4668, 0.3798, 0.2555, 0.3139, 0.6306, 0.7981, 0.5739,
        0.3308, 0.2785, 0.4152, 0.4815, 0.3734, 0.4858, 0.3423, 0.6465, 0.5501,
        0.5550, 0.5309, 0.6731, 0.9367, 0.7290, 0.6593, 1.2255, 0.2751, 0.3870,
        0.3293, 0.7825, 0.3620, 0.5853, 0.7789, 0.6292, 0.5681, 0.7951, 0.3003,
        0.8322, 0.4299, 0.3454, 0.5150, 0.9131, 0.3324, 0.4355, 0.2893, 0.3752,
        0.5080, 0.2656, 0.5489, 0.2182, 0.8051, 0.9990, 0.4858, 0.4112, 1.1052,
        0.4461, 0.6117, 0.4168, 0.9213, 0.4117, 0.5371, 0.5147, 0.5512, 0.3450,
        0.8743, 0.3175, 0.4502, 0.4304, 0.6775, 0.7146, 0.6606, 0.5337, 0.7946,
        0.5489, 0.4760, 1.1391, 0.4716, 0.5634, 0.5570, 0.4955, 0.4830, 0.5993,
        0.4581, 0.4183, 1.0434, 0.3636, 0.4636, 0.3807, 0.7160, 1.2542, 0.4113,
        0.4131, 0.3877, 0.7615, 0.3049, 1.0075, 0.3824, 0.2921, 0.4903, 0.5142,
        0.3316, 0.5853, 0.6985, 0.4333, 0.4427, 0.8217, 0.7444, 0.6331, 0.3408,
        0.3306, 0.3627])
mlp.net.3.batch_norm.num_batches_tracked tensor(2120)
mlp.net.4.weight tensor([[-0.0281, -0.0316, -0.0905,  ..., -0.0288, -0.0755, -0.0415],
        [-0.0746, -0.0643, -0.0951,  ..., -0.1137, -0.0919, -0.0640],
        [-0.0678, -0.0485, -0.0807,  ..., -0.0209, -0.0508, -0.0245],
        ...,
        [ 0.0143,  0.0308,  0.0142,  ...,  0.0219,  0.0036,  0.0039],
        [ 0.0273,  0.0353,  0.0174,  ...,  0.0179,  0.0294, -0.0067],
        [ 0.0381,  0.0161,  0.0130,  ..., -0.0314,  0.0516,  0.0350]])
mlp.net.4.bias tensor([-1.7980e-01,  3.6751e-01,  1.7060e-01,  1.6549e-01,  1.6871e-01,
         3.1405e-01,  2.8834e-01,  1.7979e-01,  2.7064e-01,  2.9242e-01,
         1.6759e-01,  3.5783e-01,  4.4756e-01,  3.1513e-01,  2.9352e-01,
         1.6031e-01,  3.1291e-01,  2.3819e-01,  6.7279e-02,  1.9840e-01,
         1.9003e-01,  1.9881e-01,  1.8609e-04,  9.8062e-02,  1.0639e-01,
         1.8034e-02,  9.7077e-02, -1.2202e-02,  5.3399e-02,  8.9480e-02,
         8.6385e-02,  2.7027e-01, -9.2127e-02,  8.6561e-02,  1.7555e-01,
         2.5142e-01, -1.7273e-01, -1.0441e-01, -1.6568e-01, -4.2024e-01,
        -2.6486e-01,  4.9818e-02, -1.6541e-01, -8.6677e-02, -5.6006e-02,
        -2.0553e-01, -1.4427e-01, -2.3365e-01, -3.7868e-01, -1.6555e-01,
        -1.7594e-01, -8.8585e-02, -7.9425e-01, -1.3713e-01, -2.2077e-01,
        -7.5466e-01, -4.0032e-01, -2.5700e-01, -8.1870e-01, -1.9568e-01,
        -3.6915e-01, -7.3550e-01, -1.7813e-01, -3.5922e-01, -8.0479e-01,
        -1.3761e-01, -7.8814e-01, -3.1058e-01, -3.2493e-01, -7.3357e-01,
        -7.4075e-01, -3.3160e-01, -7.4590e-01, -7.1157e-01, -2.9190e-01,
        -3.1219e-01, -3.2635e-01, -7.3594e-01, -3.0936e-01, -1.9363e-01,
        -7.0538e-01, -3.1482e-01, -7.4444e-01, -3.3102e-01, -6.9364e-01,
        -3.0972e-01, -3.5203e-01, -7.7206e-01, -3.0840e-01, -7.0183e-01,
        -6.9142e-01, -7.5780e-01, -7.0128e-01, -1.3298e-01, -7.3531e-01,
        -7.6488e-01, -7.0824e-01, -6.9385e-01, -2.9074e-01, -7.5137e-01,
        -2.7420e-01, -7.2676e-01, -3.0869e-01, -7.1321e-01, -7.1929e-01,
        -7.1469e-01, -3.1088e-01, -2.7731e-01, -7.6250e-01, -7.7853e-01,
        -7.5624e-01, -3.0747e-01, -7.5277e-01, -6.8308e-01, -7.6803e-01,
        -2.7374e-01, -6.9216e-01, -7.2549e-01, -7.2017e-01, -7.3100e-01,
        -7.5888e-01, -7.3361e-01, -3.3915e-01, -7.4101e-01, -6.7850e-01,
        -2.9236e-01, -7.1403e-01, -7.2398e-01, -2.7460e-01, -6.9059e-01,
        -2.6051e-01, -6.7731e-01, -7.5965e-01, -7.0648e-01, -6.7806e-01,
        -7.0229e-01, -7.1337e-01, -7.4948e-01, -7.2221e-01, -6.9041e-01,
        -6.9176e-01, -6.7974e-01, -7.2244e-01, -7.5728e-01, -7.3662e-01,
        -7.1107e-01, -7.2241e-01, -7.3735e-01, -6.7021e-01, -7.5942e-01,
        -6.8557e-01, -6.8953e-01, -7.3293e-01, -7.4974e-01, -6.9716e-01,
        -6.8409e-01, -6.8055e-01, -7.1052e-01, -7.3295e-01, -7.3590e-01,
        -2.9206e-01, -7.2131e-01, -7.0788e-01, -6.8383e-01, -7.3528e-01,
        -7.4938e-01, -6.7948e-01, -2.5618e-01, -6.8583e-01, -6.9979e-01,
        -6.9054e-01, -6.9975e-01, -6.8802e-01, -7.4769e-01, -7.6373e-01,
        -7.1852e-01, -7.4634e-01, -2.7663e-01, -7.1187e-01, -7.3960e-01,
        -6.8231e-01, -6.7939e-01, -7.2816e-01, -7.0316e-01, -7.1605e-01,
        -7.0067e-01, -7.5127e-01, -6.8612e-01, -6.9861e-01, -7.1952e-01,
        -7.0587e-01, -7.3919e-01, -7.6144e-01, -7.4363e-01, -7.7122e-01,
        -7.5729e-01, -7.6885e-01, -7.1030e-01, -6.7277e-01, -3.0364e-01])
