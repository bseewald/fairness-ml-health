Weights: 
embeddings.embeddings.0.weight tensor([[ 0.3515, -0.1539],
        [-0.1225,  0.2355],
        [ 0.0367, -0.0825],
        [ 0.0028,  0.0492]])
embeddings.embeddings.1.weight tensor([[-0.1550, -0.1781],
        [ 0.2400,  0.3178],
        [ 0.0486, -0.1354],
        [ 0.2019, -0.0846],
        [-0.0436, -0.0327]])
embeddings.embeddings.2.weight tensor([[ 0.2175, -0.1328, -0.1009],
        [ 0.0663,  0.1556, -0.0083],
        [ 0.1724,  0.1141, -0.0790],
        [-0.1079, -0.1172,  0.0765],
        [ 0.1243, -0.1940, -0.1005],
        [-0.0953, -0.1938,  0.1000]])
embeddings.embeddings.3.weight tensor([[-0.2818,  0.2178],
        [-0.6621, -0.2871],
        [-0.1621, -0.2313],
        [ 0.0478,  0.2397]])
embeddings.embeddings.4.weight tensor([[-0.1909, -0.3496],
        [ 0.1098, -0.1466],
        [ 0.3535,  0.3696],
        [ 0.1101,  0.2967]])
mlp.net.0.linear.weight tensor([[ 0.0133, -0.3359,  0.0470,  ..., -0.1409, -0.1170, -0.0178],
        [-0.0315,  0.0502, -0.0497,  ...,  0.1209,  0.1723,  0.0109],
        [-0.0680,  0.1877, -0.0067,  ..., -0.1670, -0.1159, -0.1576],
        ...,
        [ 0.1535,  0.0878, -0.1007,  ...,  0.0669,  0.2903, -0.0415],
        [-0.1251,  0.1384, -0.0337,  ...,  0.0032,  0.0695, -0.1946],
        [-0.2855, -0.1860,  0.0506,  ..., -0.1516, -0.0544, -0.2303]])
mlp.net.0.linear.bias tensor([-9.4811e-02,  7.4644e-02, -7.6468e-02,  1.3756e-01,  1.2064e-01,
        -5.5168e-02,  2.5664e-02, -6.3183e-02,  1.0107e-01, -6.4731e-02,
         1.2103e-01,  1.4820e-02,  5.4319e-02,  4.2772e-02, -4.7266e-02,
         1.0788e-04, -4.5238e-02,  5.7916e-02, -7.4824e-02,  9.3439e-02,
         3.4162e-02, -2.3579e-02,  6.6544e-02, -1.1047e-01, -8.3153e-02,
        -2.4753e-03, -6.3032e-03,  1.0557e-01,  8.1157e-02, -4.1514e-02,
        -2.5345e-02, -1.8469e-02, -1.1066e-01,  7.4758e-02,  1.4361e-02,
        -1.0390e-01, -2.9777e-02, -2.1230e-02, -9.9983e-02,  1.1491e-01,
         8.4068e-02,  5.3444e-02,  4.3475e-02,  1.5444e-02,  1.1874e-01,
        -1.4973e-02, -9.6554e-02, -7.0890e-02, -1.2612e-01,  3.6156e-02,
        -1.8064e-02,  3.8703e-02,  1.1486e-01,  1.0137e-01,  1.6264e-01,
         1.1432e-01, -1.7279e-01, -1.0302e-01, -8.8654e-02,  7.3847e-02,
         9.9127e-02, -8.5196e-02,  4.5696e-02,  1.2557e-01])
mlp.net.0.batch_norm.weight tensor([0.4879, 0.4056, 0.6171, 0.5992, 0.4035, 0.5174, 0.5532, 0.5161, 0.7057,
        0.5837, 0.3860, 0.6304, 0.6255, 0.5940, 0.4717, 0.4982, 0.5224, 0.5545,
        0.4775, 0.4831, 0.4297, 0.5705, 0.5871, 0.5330, 0.5872, 0.5974, 0.4888,
        0.5872, 0.4700, 0.6184, 0.5869, 0.4636, 0.5461, 0.5239, 0.4182, 0.5950,
        0.6226, 0.4741, 0.5416, 0.6765, 0.5085, 0.5940, 0.4228, 0.5366, 0.5186,
        0.6240, 0.5360, 0.6207, 0.5947, 0.5222, 0.5199, 0.3488, 0.5349, 0.3977,
        0.4973, 0.6665, 0.5240, 0.6529, 0.3908, 0.5221, 0.5034, 0.6012, 0.5352,
        0.6260])
mlp.net.0.batch_norm.bias tensor([ 0.1207, -0.0892,  0.0872,  0.1022, -0.0211,  0.1875, -0.1833,  0.0568,
         0.0894, -0.1768,  0.0279, -0.0469,  0.1097,  0.1498, -0.0584,  0.1777,
         0.0073,  0.0200,  0.1173, -0.1072,  0.0121,  0.1204,  0.0374,  0.0669,
         0.0513,  0.1779, -0.0202, -0.0267, -0.0615,  0.1876,  0.0175,  0.0437,
         0.1649, -0.0622, -0.0919,  0.0712,  0.0703, -0.0648,  0.1426,  0.0542,
         0.0656,  0.1233,  0.0305, -0.0304,  0.1777,  0.0584,  0.0124, -0.0113,
         0.1500, -0.1330, -0.0103,  0.0779, -0.0961, -0.1062,  0.1315,  0.0483,
         0.0319, -0.0061,  0.0540,  0.1831,  0.0987,  0.0684,  0.0836,  0.0606])
mlp.net.0.batch_norm.running_mean tensor([7.9848e-02, 1.0783e-01, 2.8666e-02, 7.3872e-01, 4.8718e-01, 1.4712e-01,
        4.7877e-01, 5.6052e-45, 9.0354e-01, 2.2886e-01, 1.7524e-01, 5.9252e-01,
        8.2131e-02, 2.0318e-01, 1.1419e-02, 2.0795e-01, 5.6052e-45, 1.1007e-03,
        6.5552e-02, 4.5023e-01, 2.3367e-01, 3.4154e-02, 5.5468e-02, 5.6052e-45,
        1.1212e-02, 1.3335e-01, 5.6097e-03, 4.5477e-03, 3.6823e-01, 2.4039e-01,
        5.6229e-03, 5.1317e-01, 1.2275e-01, 3.2620e-01, 3.3951e-01, 4.1811e-02,
        1.2704e-04, 1.4381e-01, 6.6846e-02, 7.4970e-01, 1.3397e-02, 2.2782e-02,
        2.8544e-01, 2.8855e-04, 3.1825e-01, 3.9939e-02, 3.7128e-01, 1.3438e-02,
        1.4198e-01, 4.8675e-01, 1.3668e-03, 4.5654e-01, 6.0651e-01, 3.7974e-01,
        2.8133e-01, 2.4244e-02, 1.9666e-03, 1.5780e-03, 9.6108e-03, 2.6260e-01,
        7.4982e-02, 6.5988e-02, 1.3479e-02, 1.0908e-02])
mlp.net.0.batch_norm.running_var tensor([9.9680e-03, 1.4992e-02, 4.4049e-03, 4.0175e-02, 6.0809e-02, 2.5409e-02,
        3.5030e-02, 5.6052e-45, 5.6176e-02, 1.4622e-02, 3.4228e-02, 3.1710e-02,
        9.9503e-03, 3.5797e-02, 2.1028e-03, 2.1102e-02, 5.6052e-45, 1.2688e-04,
        1.2695e-02, 2.9578e-02, 7.3521e-02, 4.5069e-03, 1.1459e-02, 5.6052e-45,
        1.5713e-03, 1.9950e-02, 8.6408e-04, 5.6964e-04, 2.9747e-02, 3.8936e-02,
        7.3906e-04, 6.2058e-02, 3.3750e-02, 3.1736e-02, 5.0804e-02, 8.2577e-03,
        5.8248e-06, 4.3678e-02, 1.0632e-02, 3.6887e-02, 5.5231e-03, 2.6709e-03,
        5.5977e-02, 3.4327e-05, 6.6419e-02, 6.8930e-03, 4.6232e-02, 1.9727e-03,
        2.5838e-02, 5.5133e-02, 1.2718e-04, 1.1245e-01, 7.0861e-02, 3.5908e-02,
        5.0627e-02, 4.1551e-03, 1.4919e-04, 1.0463e-04, 1.5037e-03, 3.4876e-02,
        9.7427e-03, 1.8888e-02, 3.2418e-03, 1.4253e-03])
mlp.net.0.batch_norm.num_batches_tracked tensor(4329)
mlp.net.1.linear.weight tensor([[ 0.0972, -0.0491,  0.0367,  ...,  0.0192, -0.1512,  0.0380],
        [ 0.0859, -0.2635, -0.0143,  ...,  0.1594,  0.0144, -0.1035],
        [ 0.0740,  0.0114,  0.1267,  ...,  0.1052, -0.1445,  0.0936],
        ...,
        [ 0.0594,  0.0945, -0.0088,  ..., -0.0592, -0.0054,  0.1485],
        [-0.0795, -0.0988,  0.1361,  ...,  0.0917,  0.1560,  0.1670],
        [ 0.0716,  0.0447, -0.0311,  ..., -0.0430,  0.1536, -0.0351]])
mlp.net.1.linear.bias tensor([ 0.0698,  0.1508,  0.0384,  0.1047,  0.1181, -0.0136, -0.1118, -0.0920,
         0.1604,  0.1040,  0.1353, -0.0158,  0.0721,  0.0291, -0.0171, -0.0908,
         0.1511,  0.1862,  0.1525,  0.0154,  0.1907, -0.0006,  0.0530,  0.1668,
         0.0480, -0.0088,  0.0779, -0.0599, -0.0382,  0.0278,  0.0635,  0.1601,
         0.1069,  0.1217, -0.0600,  0.2272,  0.3241, -0.0825,  0.1360,  0.0992,
         0.1481,  0.0070, -0.0209,  0.1369,  0.1003, -0.0653,  0.0117, -0.1068,
         0.0833,  0.0272,  0.0502, -0.0320, -0.0652,  0.0433,  0.0674,  0.0228,
        -0.0051, -0.0605,  0.0182,  0.0324,  0.0458, -0.0320,  0.0391,  0.0254])
mlp.net.1.batch_norm.weight tensor([0.5481, 0.5067, 0.5607, 0.5472, 0.4619, 0.5939, 0.5551, 0.4512, 0.5461,
        0.5302, 0.5252, 0.5020, 0.4862, 0.5634, 0.5387, 0.5179, 0.5508, 0.5506,
        0.5459, 0.5269, 0.5442, 0.4979, 0.5509, 0.5623, 0.5020, 0.5149, 0.5806,
        0.4660, 0.4814, 0.5295, 0.5604, 0.5062, 0.5109, 0.5587, 0.5015, 0.4764,
        0.5420, 0.5197, 0.5221, 0.5052, 0.5608, 0.4996, 0.4541, 0.5579, 0.5738,
        0.4925, 0.4877, 0.4546, 0.5061, 0.5290, 0.5294, 0.5277, 0.4748, 0.4898,
        0.5046, 0.5240, 0.4834, 0.4941, 0.5232, 0.5261, 0.5635, 0.4512, 0.5951,
        0.4459])
mlp.net.1.batch_norm.bias tensor([ 0.1689,  0.2266,  0.1503,  0.1660, -0.0289,  0.0914,  0.0199,  0.0989,
         0.1829,  0.1766,  0.1284, -0.0042, -0.1334,  0.0935,  0.1643, -0.0299,
         0.1469,  0.1535,  0.1935,  0.0971,  0.1567,  0.1024,  0.1401,  0.1655,
         0.0977,  0.1748,  0.1553,  0.0491,  0.1146,  0.1633,  0.1391, -0.1253,
         0.1304,  0.1919,  0.0641,  0.1674,  0.2125,  0.0842,  0.2383,  0.1305,
         0.2248, -0.1130,  0.1558,  0.1880,  0.1541,  0.1183,  0.1620, -0.0034,
         0.0883,  0.1429,  0.1094,  0.1420,  0.0922,  0.1677,  0.1696,  0.0747,
         0.1225,  0.1089,  0.1899,  0.1526,  0.1197,  0.0859,  0.0913,  0.1180])
mlp.net.1.batch_norm.running_mean tensor([0.4760, 0.6629, 0.4528, 0.5599, 0.2888, 0.3689, 0.3328, 0.2755, 0.6155,
        0.4480, 0.5061, 0.3946, 0.2379, 0.4033, 0.5171, 0.2788, 0.5139, 0.6096,
        0.5003, 0.3681, 0.6277, 0.3830, 0.3640, 0.5526, 0.4742, 0.3805, 0.4208,
        0.3841, 0.4315, 0.5645, 0.5237, 0.3039, 0.5207, 0.5092, 0.3133, 0.6135,
        0.8221, 0.3127, 0.5065, 0.4258, 0.5604, 0.2633, 0.3801, 0.4889, 0.5124,
        0.2794, 0.4035, 0.1695, 0.3647, 0.4699, 0.4534, 0.3556, 0.3470, 0.4119,
        0.4091, 0.3577, 0.3289, 0.3437, 0.4082, 0.3999, 0.4857, 0.2695, 0.4520,
        0.3885])
mlp.net.1.batch_norm.running_var tensor([0.3767, 0.8823, 0.4964, 0.4251, 0.1538, 0.4681, 0.6186, 0.2050, 0.6569,
        0.4005, 0.4172, 0.3472, 0.1450, 0.4539, 0.5686, 0.3072, 0.6889, 0.5825,
        0.4695, 0.4499, 0.6172, 0.3920, 0.3135, 0.5178, 0.6355, 0.3630, 0.4406,
        0.3918, 0.6013, 0.6551, 0.7240, 0.2089, 0.4595, 0.4716, 0.3181, 0.4887,
        0.8244, 0.4715, 0.4571, 0.3902, 0.4389, 0.2326, 0.5208, 0.5046, 0.5796,
        0.2900, 0.3967, 0.2404, 0.3606, 0.5372, 0.5312, 0.3397, 0.5285, 0.5661,
        0.3011, 0.3786, 0.3486, 0.3449, 0.3687, 0.2939, 0.7290, 0.2313, 0.7229,
        0.4721])
mlp.net.1.batch_norm.num_batches_tracked tensor(4329)
mlp.net.2.linear.weight tensor([[ 0.0651, -0.0561,  0.0246,  ...,  0.0518, -0.1132, -0.1054],
        [ 0.0124,  0.0829,  0.0244,  ..., -0.0861,  0.0298, -0.0107],
        [-0.0262,  0.1135,  0.1510,  ..., -0.2488,  0.2918, -0.0124],
        ...,
        [-0.0054,  0.0737,  0.0163,  ...,  0.0838, -0.0523, -0.0202],
        [ 0.1610,  0.0218,  0.0887,  ...,  0.0680,  0.1438, -0.0497],
        [ 0.0686,  0.1515, -0.1485,  ..., -0.0937,  0.0408, -0.0607]])
mlp.net.2.linear.bias tensor([-0.0735, -0.0526,  0.1308,  0.0020,  0.0915,  0.2099,  0.0462,  0.1274,
         0.0309,  0.0779,  0.0378,  0.0869,  0.1349,  0.0171,  0.0542,  0.0886,
         0.1481,  0.0579,  0.0534,  0.1528,  0.1263, -0.0013,  0.0072,  0.0139,
         0.1696,  0.0392,  0.1926,  0.0227, -0.0385, -0.0025, -0.0291,  0.1680,
         0.1481,  0.1026,  0.1986,  0.2685,  0.0987, -0.0006,  0.1229, -0.0631,
         0.0281,  0.0688,  0.0742,  0.0783,  0.0745, -0.0256,  0.0655,  0.0063,
         0.0155, -0.1152, -0.0209,  0.0252,  0.1358,  0.1318, -0.0091, -0.0291,
        -0.0050,  0.2049,  0.0801, -0.0412, -0.0447,  0.0404,  0.0388,  0.1197])
mlp.net.2.batch_norm.weight tensor([0.5297, 0.5719, 0.5453, 0.5395, 0.4853, 0.5017, 0.4593, 0.5042, 0.4928,
        0.5020, 0.5018, 0.4340, 0.4646, 0.3905, 0.4891, 0.5017, 0.5539, 0.5312,
        0.5032, 0.5022, 0.5181, 0.5559, 0.4695, 0.5598, 0.5398, 0.4809, 0.5141,
        0.5606, 0.4883, 0.5330, 0.4922, 0.5627, 0.4782, 0.5085, 0.4980, 0.4863,
        0.4689, 0.5280, 0.4395, 0.4693, 0.4612, 0.4903, 0.4704, 0.4498, 0.5505,
        0.4416, 0.4762, 0.5220, 0.5631, 0.4618, 0.4679, 0.4933, 0.5245, 0.4675,
        0.4795, 0.5038, 0.5355, 0.5264, 0.5028, 0.4905, 0.5068, 0.5392, 0.5435,
        0.5561])
mlp.net.2.batch_norm.bias tensor([ 0.1088,  0.0628,  0.1923,  0.1740,  0.1371,  0.1935,  0.1728,  0.1088,
         0.0630, -0.1493,  0.1769,  0.1544, -0.1004, -0.1139,  0.1539,  0.1784,
         0.1478,  0.1585,  0.1959,  0.1983,  0.0661,  0.1401,  0.1453, -0.1843,
         0.1826, -0.1719,  0.2594,  0.0682, -0.1916,  0.1126,  0.1662,  0.2144,
         0.1822,  0.1765,  0.2487,  0.2778,  0.2074,  0.1910,  0.1838,  0.0904,
         0.1478,  0.1347,  0.1697,  0.1205,  0.0857,  0.1243, -0.1828,  0.1114,
        -0.2047,  0.0183,  0.1761,  0.2145,  0.1782, -0.1562,  0.0642, -0.1691,
         0.0301,  0.2235,  0.1329,  0.1442,  0.1343,  0.1238,  0.1644,  0.1771])
mlp.net.2.batch_norm.running_mean tensor([0.2377, 0.3090, 0.6101, 0.3841, 0.4204, 0.6708, 0.4637, 0.3717, 0.3837,
        0.2588, 0.4573, 0.5465, 0.3189, 0.2298, 0.4672, 0.4551, 0.5101, 0.4611,
        0.3771, 0.5039, 0.4912, 0.4044, 0.4288, 0.2592, 0.6432, 0.2536, 0.5837,
        0.4275, 0.2947, 0.3626, 0.4348, 0.6867, 0.4553, 0.4893, 0.5785, 0.6819,
        0.5289, 0.4611, 0.5705, 0.3263, 0.3377, 0.4292, 0.4103, 0.3626, 0.3804,
        0.4120, 0.3120, 0.3584, 0.2844, 0.2101, 0.3974, 0.4343, 0.4656, 0.2913,
        0.3894, 0.2448, 0.3994, 0.5205, 0.4206, 0.2477, 0.3503, 0.3906, 0.4654,
        0.5026])
mlp.net.2.batch_norm.running_var tensor([0.2547, 0.3793, 0.8490, 0.4813, 0.4516, 0.6200, 0.6692, 0.3126, 0.4134,
        0.1449, 0.5528, 0.6744, 0.3494, 0.1096, 0.6013, 0.4500, 0.5062, 0.7785,
        0.2909, 0.5084, 0.5945, 0.4214, 0.6720, 0.1553, 0.8827, 0.1682, 0.6230,
        0.6005, 0.2082, 0.5073, 0.5397, 0.9133, 0.5067, 0.6344, 0.5978, 0.8109,
        0.6457, 0.6162, 0.6414, 0.4223, 0.2936, 0.4536, 0.4510, 0.3681, 0.3988,
        0.4977, 0.2154, 0.4092, 0.2152, 0.2401, 0.4330, 0.5333, 0.4363, 0.1743,
        0.6613, 0.1623, 0.5513, 0.4696, 0.5335, 0.2880, 0.5037, 0.3566, 0.5783,
        0.6159])
mlp.net.2.batch_norm.num_batches_tracked tensor(4329)
mlp.net.3.linear.weight tensor([[-2.9068e-02,  1.0593e-04,  4.5696e-02,  ...,  1.4231e-02,
          6.4225e-02, -1.2426e-02],
        [ 2.8814e-02,  6.1057e-02, -7.8308e-03,  ...,  8.6771e-02,
          1.1145e-02,  2.2647e-01],
        [ 8.5758e-02,  8.4239e-02, -8.1588e-02,  ..., -7.1560e-02,
         -5.8848e-02, -2.5218e-02],
        ...,
        [ 5.9626e-02, -1.4868e-01,  5.9539e-02,  ..., -3.4188e-02,
         -2.8678e-02,  9.9689e-02],
        [ 9.4085e-02,  1.7403e-01,  1.6161e-01,  ...,  1.5677e-01,
          1.5214e-01,  7.9295e-02],
        [-1.5291e-01, -1.2149e-01,  8.3012e-03,  ...,  1.1372e-01,
          8.6853e-02,  3.3626e-02]])
mlp.net.3.linear.bias tensor([0.2037, 0.2104, 0.0826, 0.1292, 0.1715, 0.2364, 0.1095, 0.0802, 0.0760,
        0.1711, 0.1660, 0.1846, 0.1437, 0.0963, 0.1521, 0.0919, 0.0475, 0.1725,
        0.1355, 0.1601, 0.0892, 0.1241, 0.2130, 0.0514, 0.1649, 0.1611, 0.1428,
        0.0881, 0.0592, 0.2000, 0.2265, 0.1041, 0.1702, 0.1034, 0.0721, 0.0198,
        0.0421, 0.1942, 0.1546, 0.0677, 0.2275, 0.2086, 0.0948, 0.0543, 0.1391,
        0.1311, 0.0698, 0.1115, 0.1382, 0.1194, 0.0951, 0.1400, 0.2591, 0.0111,
        0.1257, 0.0987, 0.1413, 0.0631, 0.0724, 0.1271, 0.1372, 0.1184, 0.1537,
        0.2010])
mlp.net.3.batch_norm.weight tensor([0.5232, 0.5096, 0.4795, 0.4998, 0.5277, 0.5435, 0.4527, 0.5150, 0.4909,
        0.5132, 0.4706, 0.5137, 0.4392, 0.4751, 0.5043, 0.4937, 0.4816, 0.5123,
        0.4943, 0.5053, 0.4580, 0.4533, 0.4701, 0.4369, 0.5105, 0.3928, 0.4992,
        0.4800, 0.5195, 0.5108, 0.5120, 0.4284, 0.4634, 0.4824, 0.4900, 0.4923,
        0.4738, 0.4523, 0.5068, 0.4390, 0.5227, 0.4908, 0.4406, 0.4522, 0.4960,
        0.5049, 0.5057, 0.5095, 0.4844, 0.5097, 0.4874, 0.4316, 0.5167, 0.4436,
        0.5170, 0.4878, 0.4770, 0.4953, 0.4204, 0.4620, 0.4748, 0.5077, 0.4851,
        0.5059])
mlp.net.3.batch_norm.bias tensor([ 0.0318,  0.0019,  0.0350, -0.0071,  0.0342, -0.0148,  0.0139,  0.0038,
        -0.0425,  0.0415, -0.0084,  0.0504, -0.0524,  0.0080, -0.0589,  0.0641,
        -0.0235, -0.0305, -0.0586, -0.0148, -0.0907, -0.0574, -0.0822, -0.0053,
        -0.0883, -0.0294, -0.0076, -0.0263,  0.0141,  0.0429, -0.0451, -0.0066,
         0.0272, -0.0119, -0.0073, -0.0687, -0.0665, -0.0145,  0.0845,  0.1064,
         0.0352,  0.0083, -0.0366, -0.0267, -0.0075,  0.0085,  0.1054, -0.0233,
         0.0060,  0.0054,  0.0602,  0.0426,  0.0699,  0.0648,  0.0244, -0.0510,
         0.0212,  0.0367, -0.0248,  0.0398, -0.0151,  0.0112, -0.1230,  0.0097])
mlp.net.3.batch_norm.running_mean tensor([0.6677, 0.7869, 0.6003, 0.7565, 0.7414, 0.8021, 0.7387, 0.5632, 0.5347,
        0.6059, 0.6477, 0.6488, 0.7824, 0.6276, 0.5853, 0.6830, 0.3092, 0.6333,
        0.7222, 0.6737, 0.5559, 0.5339, 0.6509, 0.5943, 0.6976, 0.6544, 0.6327,
        0.6612, 0.2934, 0.6386, 0.7257, 0.6224, 0.6176, 0.6214, 0.7053, 0.6301,
        0.5360, 0.8257, 0.6662, 0.2452, 0.6296, 0.7790, 0.3980, 0.5006, 0.6901,
        0.6189, 0.4917, 0.4969, 0.6475, 0.5922, 0.5828, 0.5584, 0.6082, 0.2425,
        0.5393, 0.7111, 0.7013, 0.7080, 0.2350, 0.5168, 0.5244, 0.5847, 0.7962,
        0.8613])
mlp.net.3.batch_norm.running_var tensor([0.5951, 1.1272, 0.7647, 1.3233, 0.7026, 0.7409, 0.9765, 0.7198, 0.6644,
        0.4437, 0.6450, 0.5494, 1.5014, 0.8878, 0.5731, 0.8445, 0.2864, 0.5485,
        0.9009, 0.7604, 0.6415, 0.7009, 0.5293, 0.6224, 0.9536, 0.8969, 0.6073,
        0.8282, 0.2899, 0.4620, 0.7024, 0.9027, 0.6713, 0.8075, 0.9895, 1.1345,
        0.8460, 1.1099, 0.5712, 0.1772, 0.4082, 0.8242, 0.3302, 0.5777, 1.0416,
        0.6764, 0.3525, 0.3558, 0.9480, 0.5980, 0.5531, 0.6158, 0.3431, 0.1863,
        0.4614, 1.0347, 0.8170, 1.0087, 0.1478, 0.4057, 0.5965, 0.6230, 1.4898,
        1.1876])
mlp.net.3.batch_norm.num_batches_tracked tensor(4329)
mlp.net.4.weight tensor([[-0.0317, -0.0446, -0.1038,  ..., -0.0859, -0.0347, -0.1080],
        [-0.1133, -0.0488, -0.0790,  ..., -0.1003, -0.0897, -0.0608],
        [-0.0344, -0.0705, -0.0705,  ..., -0.0586, -0.0174, -0.0770],
        ...,
        [ 0.0103,  0.0531,  0.0215,  ...,  0.0184,  0.0205,  0.0109],
        [ 0.0547, -0.0170, -0.0101,  ...,  0.0464,  0.0650,  0.0458],
        [ 0.0649,  0.0703,  0.0423,  ...,  0.0526,  0.1136,  0.0030]])
mlp.net.4.bias tensor([ 0.1868,  0.5719,  0.6059,  0.5511,  0.3913,  0.3522,  0.3637,  0.5093,
         0.3720,  0.4592,  0.4571,  0.5068,  0.7010,  0.2288,  0.4218,  0.5825,
         0.4368,  0.4991,  0.3930,  0.5284,  0.2722,  0.4965,  0.3146,  0.5337,
         0.4731,  0.5520,  0.4295,  0.2969,  0.2333,  0.3046,  0.2899,  0.1502,
         0.2551, -0.0428,  0.1237,  0.0053,  0.2094,  0.0732,  0.1920,  0.1845,
        -0.0527,  0.2412,  0.2866,  0.0409,  0.2168,  0.0922,  0.1769, -0.2687,
         0.2753, -0.1917, -0.5202,  0.0062, -0.0027,  0.1501, -0.2182, -0.0528,
         0.0861, -0.3391,  0.0270,  0.2760, -0.3367, -0.1698,  0.3261, -0.2060,
        -0.3173, -0.3458,  0.1134, -0.1354,  0.1251,  0.1328, -0.1550,  0.0685,
        -0.1195, -0.4869, -0.1345, -1.3534, -0.2982, -1.3517, -0.2372, -0.0963,
        -1.1041,  0.0087, -0.1154,  0.0781, -0.4893, -0.4899,  0.0236, -0.0952,
        -1.2324, -0.2546, -0.4290, -0.4504, -0.4272, -1.3280, -1.2305, -0.4591,
        -1.0817, -0.4205, -0.1905, -0.1883, -1.3357, -0.2313, -0.1585, -1.1572,
        -1.1721, -0.3736, -0.1722, -1.2774, -0.4089, -1.3273, -0.4235, -1.1209,
        -0.1785, -1.0666, -1.1973, -1.2047, -1.2999, -1.1534, -1.1462, -1.2230,
        -1.2523, -1.2492, -1.1942, -0.3556, -0.3210, -0.3118, -1.2479, -1.2329,
        -1.3048, -0.3573, -1.2531, -0.3623, -1.1941, -1.2005, -1.1322, -1.0853,
        -0.3188, -1.1932, -1.1781, -1.0510, -1.2263, -1.2565, -0.1187, -1.1580,
        -1.0521, -1.1028, -1.1388, -0.3240, -1.2786, -0.3234, -0.8412, -1.1071,
        -1.1789, -0.3678, -1.1438, -1.1130, -1.0953, -0.1649, -0.2818, -1.2875,
        -1.1328, -1.1356, -0.3344, -0.9501, -1.1312, -1.1649, -1.1005, -1.2577,
        -1.1782, -0.4129, -1.2182, -0.3231, -1.1675, -0.4049, -0.9191, -1.0991,
        -1.1115, -0.3719, -1.0032, -1.1354, -1.2429, -1.1304, -1.0645, -1.1789,
        -1.0939, -0.3173, -0.3579, -1.0795, -1.0712, -1.1576, -1.1415, -1.1030,
        -1.1222, -1.0830, -0.9785, -0.3683, -1.2390, -1.1434, -1.0750, -1.0453,
        -1.1567, -0.3432, -1.1825, -0.9814, -0.3913, -1.1477, -1.2645, -1.1397,
        -1.1347, -1.1373, -0.9731, -1.0689, -1.1297, -1.1145, -0.3634, -1.2420,
        -1.0257, -1.1921, -1.0175, -1.0672, -1.0439, -0.9337, -0.9802, -1.1393,
        -1.0807, -1.0617, -1.0855, -1.0583, -1.2094, -1.0043, -1.1237, -0.2996,
        -1.0639, -0.9884, -1.0213, -0.9962, -1.0664, -1.2147, -1.2327, -0.9236,
        -1.0826, -1.0233, -1.1161, -1.0529, -0.3673, -0.9329, -1.1986, -1.0896,
        -1.1146, -1.0704, -0.3677, -1.1747, -0.9436, -1.2163, -0.9739, -1.0480,
        -1.0837, -0.3589, -1.1427, -0.9686, -1.2040, -1.1242, -1.1944, -1.0791,
        -1.0292, -1.1019, -1.0081, -1.0291, -0.8259, -0.9849, -1.0759, -0.7866,
        -1.1215, -0.9922, -1.0464, -1.0677, -1.1277, -1.2038, -1.0683, -1.0957,
        -1.0642, -1.0568, -1.0287, -1.0996, -1.0463, -1.1217, -1.1598, -1.2119,
        -0.8606, -1.1015, -1.1073, -1.1398, -1.1423, -0.9083, -1.1309, -1.1030,
        -1.0383, -0.9355, -0.9334, -1.2807, -1.1347, -1.0728, -1.2373, -1.2006,
        -1.0523, -0.5511, -1.1313, -1.1828, -1.2012, -0.2627, -1.0415, -1.2156,
        -1.0116, -1.1763, -1.1451, -1.0849, -1.0686, -1.1598, -1.0804, -0.3135,
        -1.1060, -1.1792, -1.0991, -1.0723, -1.0433, -1.1309, -0.9822, -1.2250,
        -1.1806, -1.1244, -0.7147, -1.1119, -1.2276, -1.1821, -1.1587, -0.3519,
        -1.0213, -0.9675, -1.0514, -1.1093, -0.7555, -1.1696, -1.0346, -0.8846,
        -1.0644, -1.0841, -1.1595, -0.9956, -1.0452, -0.9657, -1.0284, -1.0847,
        -1.1149, -1.0690, -1.0713, -0.2978, -0.9861, -0.9153, -1.2008, -1.1561,
        -1.0414, -0.9206, -1.1308, -1.1061, -1.1237, -1.0161, -1.0857, -1.0375,
        -1.0178, -1.0851, -0.9784, -1.0782, -1.1266, -1.0705, -1.0374, -1.2127,
        -1.0053, -1.0554, -1.1664, -1.0432, -1.0553, -1.1174, -1.0411, -0.8706,
        -1.2399, -1.0866, -1.1740, -1.1674, -1.0309, -1.0162, -0.9722, -0.9343,
        -1.0691, -1.1330, -1.0525, -1.1641, -1.0741, -1.1569, -1.1476, -0.2847])
