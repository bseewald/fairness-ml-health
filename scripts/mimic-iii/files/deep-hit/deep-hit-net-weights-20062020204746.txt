Weights: 
embeddings.embeddings.0.weight tensor([[-0.1463,  0.1764],
        [-0.2719,  0.1841],
        [ 0.0018, -0.1226],
        [ 0.2704,  0.3725]])
embeddings.embeddings.1.weight tensor([[ 0.1083, -0.0915],
        [-0.0371,  0.0067],
        [-0.3180, -0.2041],
        [ 0.0750, -0.1358],
        [ 0.0480,  0.1249]])
embeddings.embeddings.2.weight tensor([[-0.1577,  0.1831,  0.0487],
        [ 0.1273, -0.0742,  0.1009],
        [ 0.1268,  0.1150, -0.1032],
        [ 0.0335, -0.1891, -0.0675],
        [-0.0621,  0.1169, -0.0811],
        [-0.1007,  0.2695, -0.0114]])
embeddings.embeddings.3.weight tensor([[ 0.0820,  0.0599],
        [ 0.4869,  0.3633],
        [-0.3580,  0.3344],
        [-0.0689, -0.3913]])
embeddings.embeddings.4.weight tensor([[ 0.2392, -0.0597],
        [-0.4452, -0.2094],
        [ 0.2407,  0.1583],
        [-0.1090,  0.2044]])
mlp.net.0.linear.weight tensor([[-0.0753, -0.2282,  0.1744,  ...,  0.2218, -0.1339, -0.0575],
        [-0.1792,  0.1465, -0.1580,  ...,  0.1315,  0.0595, -0.0032],
        [-0.1221, -0.0524, -0.0796,  ..., -0.3176,  0.1971,  0.1783],
        ...,
        [-0.0095, -0.0344,  0.1489,  ...,  0.1390, -0.0143,  0.1797],
        [ 0.0251, -0.1132, -0.2781,  ...,  0.3215, -0.0247, -0.1500],
        [-0.0297, -0.0667,  0.0915,  ...,  0.1540,  0.0131,  0.1505]])
mlp.net.0.linear.bias tensor([ 0.1157,  0.0192, -0.1673,  0.1500,  0.1069, -0.1215,  0.0755,  0.0147,
         0.0021,  0.0192, -0.1274, -0.1037,  0.2434, -0.0354,  0.0968,  0.1149,
        -0.0688,  0.0050,  0.0948,  0.1353,  0.1962,  0.0346,  0.1917,  0.0496,
         0.0746, -0.1481, -0.0006,  0.0893,  0.1569,  0.1249,  0.0621,  0.0916,
        -0.0020, -0.1543, -0.0226, -0.2208,  0.0618,  0.0600, -0.0558,  0.0007,
         0.1831, -0.0251,  0.0075, -0.0230, -0.1208,  0.0593,  0.0417,  0.0187,
         0.0388,  0.2259, -0.0039, -0.0583, -0.0695,  0.0385, -0.0410,  0.0169,
         0.0286, -0.0735,  0.0252, -0.0598,  0.0132,  0.0905,  0.0097,  0.0846])
mlp.net.0.batch_norm.weight tensor([0.4386, 0.3872, 0.3333, 0.4381, 0.4828, 0.5132, 0.3297, 0.3263, 0.3399,
        0.3212, 0.2065, 0.3125, 0.3321, 0.4224, 0.3950, 0.3449, 0.4529, 0.4143,
        0.3838, 0.5372, 0.4522, 0.3623, 0.4185, 0.3894, 0.4350, 0.3882, 0.4038,
        0.5061, 0.4693, 0.4879, 0.2598, 0.3209, 0.3162, 0.4161, 0.2687, 0.3814,
        0.4715, 0.4332, 0.4141, 0.3965, 0.4908, 0.4016, 0.2903, 0.5355, 0.4115,
        0.3124, 0.2742, 0.4755, 0.4270, 0.3846, 0.4266, 0.4155, 0.3533, 0.4049,
        0.3659, 0.4458, 0.3704, 0.4217, 0.4556, 0.4651, 0.4592, 0.4981, 0.4575,
        0.3039])
mlp.net.0.batch_norm.bias tensor([ 0.1196, -0.0480, -0.1004,  0.0453,  0.1071,  0.1500,  0.0347, -0.1627,
         0.0350,  0.2302,  0.1502,  0.0932, -0.1456,  0.1057, -0.1641,  0.0535,
         0.1321,  0.0184, -0.0580, -0.2203, -0.0063,  0.1001, -0.2312,  0.1560,
         0.1567, -0.0194, -0.0207, -0.0036, -0.1250,  0.1651,  0.0357, -0.0918,
         0.1205,  0.2490, -0.0235,  0.1794,  0.0301,  0.2027, -0.3069, -0.0468,
        -0.1850,  0.1421,  0.0893,  0.0194,  0.0698,  0.0424,  0.0955, -0.0030,
         0.0612,  0.0949,  0.0540,  0.0887,  0.0995,  0.0023, -0.0481,  0.1049,
         0.1570,  0.2197,  0.0005,  0.1380,  0.1455,  0.1334,  0.2419, -0.0579])
mlp.net.0.batch_norm.running_mean tensor([1.9622e-01, 8.5595e-03, 2.0118e-01, 5.6162e-01, 1.8350e-01, 6.8915e-03,
        1.7763e-01, 2.7826e-01, 4.2540e-02, 1.0250e-01, 5.0183e-02, 3.8142e-04,
        7.9808e-01, 1.3899e-01, 6.3570e-01, 1.8645e-02, 1.8995e-02, 3.0864e-02,
        4.5519e-01, 4.7571e-01, 4.2358e-01, 1.9633e-01, 7.9777e-01, 8.7194e-02,
        2.3665e-01, 1.3082e-05, 7.5882e-02, 5.9787e-01, 5.1934e-01, 3.7731e-01,
        5.3276e-02, 3.8370e-01, 3.1627e-02, 8.3367e-06, 1.4731e-02, 1.4646e-06,
        1.6408e-01, 1.8953e-01, 6.2626e-01, 3.0142e-02, 8.1124e-01, 1.0825e-02,
        2.3326e-01, 4.9404e-03, 1.0872e-04, 1.5631e-01, 2.3551e-01, 8.3009e-03,
        1.6656e-01, 4.1344e-01, 4.5291e-02, 3.7982e-03, 5.4700e-02, 2.7102e-03,
        3.9497e-05, 3.3951e-02, 1.5132e-01, 1.2405e-01, 2.4682e-02, 6.3727e-03,
        1.4314e-01, 3.8670e-02, 8.0228e-02, 9.5146e-02])
mlp.net.0.batch_norm.running_var tensor([2.5106e-02, 1.4356e-03, 3.2836e-02, 2.9532e-02, 2.7191e-02, 7.6936e-04,
        3.5517e-02, 4.6283e-02, 7.8477e-03, 1.6801e-02, 7.2304e-03, 2.6106e-05,
        6.0785e-02, 2.3648e-02, 3.0734e-02, 2.2853e-03, 5.8936e-03, 5.7349e-03,
        4.0340e-02, 3.9035e-02, 3.9818e-02, 1.9667e-02, 6.1379e-02, 1.6403e-02,
        2.3635e-02, 8.4805e-07, 9.8670e-03, 4.8497e-02, 4.5641e-02, 4.0465e-02,
        1.0124e-02, 2.6126e-02, 5.4797e-03, 5.4680e-07, 2.3993e-03, 1.4894e-07,
        4.2767e-02, 1.9726e-02, 5.2762e-02, 6.3955e-03, 5.8050e-02, 1.3752e-03,
        1.7554e-02, 4.9440e-04, 1.0543e-05, 1.8690e-02, 4.1036e-02, 2.0548e-03,
        3.2977e-02, 3.5012e-02, 1.0397e-02, 5.5295e-04, 8.0849e-03, 4.0234e-04,
        3.2874e-06, 4.2129e-03, 3.0245e-02, 1.9866e-02, 3.8716e-03, 1.4711e-03,
        2.1442e-02, 7.6956e-03, 1.2303e-02, 1.5050e-02])
mlp.net.0.batch_norm.num_batches_tracked tensor(380)
mlp.net.1.linear.weight tensor([[ 0.0609,  0.0851, -0.1198,  ...,  0.0760,  0.1960, -0.1033],
        [-0.0761, -0.1158, -0.0552,  ..., -0.1109,  0.2232,  0.0016],
        [-0.1828,  0.0189,  0.2118,  ..., -0.1072, -0.1790, -0.2289],
        ...,
        [-0.0425, -0.1015,  0.0691,  ..., -0.0713, -0.0548,  0.0095],
        [-0.0680, -0.0325,  0.0061,  ...,  0.0057, -0.0059,  0.1599],
        [-0.0952,  0.0563,  0.0573,  ..., -0.2070, -0.1202, -0.0652]])
mlp.net.1.linear.bias tensor([ 0.1340,  0.1703,  0.1832, -0.0712, -0.0558, -0.0176, -0.0041,  0.1542,
         0.1926,  0.0027,  0.1193,  0.1495,  0.0231,  0.1834,  0.0254, -0.1304,
        -0.1179,  0.1494,  0.1721,  0.0880,  0.0643,  0.0771,  0.0917, -0.0313,
         0.0445,  0.1642,  0.1221, -0.0894,  0.0676,  0.0527,  0.0943,  0.0604,
         0.0523,  0.0071,  0.0295,  0.0901,  0.0130, -0.0512,  0.0685, -0.0636,
        -0.0157,  0.0734,  0.1124, -0.0806,  0.1802,  0.0243,  0.1110, -0.0538,
         0.0065,  0.0610,  0.0088, -0.2116,  0.2632, -0.1102, -0.0916,  0.0022,
         0.0910, -0.0743,  0.1066,  0.1697,  0.1209,  0.1283, -0.0058, -0.0597])
mlp.net.1.batch_norm.weight tensor([0.4139, 0.3401, 0.4347, 0.2464, 0.3774, 0.3725, 0.3883, 0.3778, 0.3823,
        0.3389, 0.4089, 0.2658, 0.4592, 0.5072, 0.3726, 0.4269, 0.3935, 0.4266,
        0.5671, 0.2404, 0.3963, 0.4018, 0.4015, 0.4533, 0.3784, 0.4706, 0.5325,
        0.3243, 0.3290, 0.3862, 0.3520, 0.4380, 0.2562, 0.3880, 0.3584, 0.4388,
        0.3002, 0.3893, 0.3977, 0.3237, 0.4404, 0.4721, 0.3889, 0.4379, 0.3153,
        0.2884, 0.4073, 0.3992, 0.5065, 0.2790, 0.4364, 0.3717, 0.4617, 0.3718,
        0.3632, 0.4460, 0.2196, 0.4080, 0.3561, 0.2862, 0.2862, 0.3423, 0.3609,
        0.4234])
mlp.net.1.batch_norm.bias tensor([ 0.1500,  0.1970, -0.1096,  0.2364,  0.0848,  0.1336, -0.1764,  0.1932,
        -0.0111,  0.1561,  0.1781,  0.2520,  0.2103,  0.1817, -0.1330, -0.1859,
        -0.2491,  0.1274,  0.0206,  0.3054,  0.0551,  0.1603, -0.0219,  0.1165,
        -0.2845,  0.1978,  0.1359,  0.1287,  0.1987,  0.1099,  0.0663,  0.0124,
        -0.0318, -0.1913,  0.1655,  0.1007,  0.1213,  0.0999,  0.1405,  0.0833,
         0.0298,  0.1109,  0.1798,  0.0619,  0.1198,  0.2717,  0.0562,  0.1854,
         0.0433,  0.1849,  0.1285,  0.1057,  0.0393,  0.2284,  0.0581,  0.1267,
         0.0621,  0.1505,  0.0311,  0.1561,  0.1915,  0.0928,  0.0569, -0.1986])
mlp.net.1.batch_norm.running_mean tensor([0.5203, 0.6193, 0.2635, 0.3799, 0.3262, 0.3612, 0.1901, 0.6518, 0.3656,
        0.3018, 0.3262, 0.4405, 0.4465, 0.3763, 0.1560, 0.1337, 0.1464, 0.5261,
        0.7060, 0.4311, 0.4130, 0.4073, 0.3110, 0.4015, 0.1775, 0.6164, 0.4583,
        0.2295, 0.5133, 0.3343, 0.4344, 0.5136, 0.1735, 0.2203, 0.4130, 0.3545,
        0.4427, 0.3247, 0.5002, 0.2828, 0.4643, 0.2867, 0.4825, 0.2779, 0.3742,
        0.3002, 0.5522, 0.4618, 0.2695, 0.4184, 0.3248, 0.2503, 0.8053, 0.2773,
        0.2722, 0.3865, 0.5279, 0.2651, 0.4086, 0.6226, 0.4102, 0.4085, 0.2971,
        0.1317])
mlp.net.1.batch_norm.running_var tensor([0.4009, 0.3861, 0.2067, 0.3062, 0.2106, 0.4421, 0.1313, 0.4883, 0.2417,
        0.1525, 0.1921, 0.2377, 0.4560, 0.2210, 0.1257, 0.1065, 0.1158, 0.4742,
        0.5840, 0.3093, 0.2693, 0.2766, 0.2241, 0.4487, 0.1039, 0.4601, 0.3244,
        0.1759, 0.3643, 0.1666, 0.3232, 0.4560, 0.1279, 0.1961, 0.3968, 0.2235,
        0.3504, 0.2631, 0.3683, 0.2445, 0.3782, 0.1919, 0.3999, 0.1600, 0.2156,
        0.1669, 0.3595, 0.4091, 0.2752, 0.2347, 0.2400, 0.1863, 0.4443, 0.2103,
        0.1779, 0.3264, 0.4150, 0.1471, 0.2495, 0.4181, 0.2982, 0.1975, 0.2339,
        0.0981])
mlp.net.1.batch_norm.num_batches_tracked tensor(380)
mlp.net.2.linear.weight tensor([[-0.0034,  0.0331, -0.2692,  ..., -0.0121, -0.2218, -0.1490],
        [ 0.0894, -0.1098,  0.2893,  ...,  0.0770, -0.0672,  0.1006],
        [ 0.1409,  0.0137, -0.0650,  ..., -0.0328, -0.1439, -0.2433],
        ...,
        [ 0.0268, -0.0183,  0.1117,  ..., -0.0881, -0.0609,  0.1675],
        [-0.0797,  0.0071, -0.1980,  ..., -0.1627,  0.0221, -0.2710],
        [ 0.1629,  0.1123, -0.0044,  ...,  0.0089,  0.0413,  0.0177]])
mlp.net.2.linear.bias tensor([ 0.2470,  0.0256,  0.1071,  0.2286,  0.2004,  0.0523, -0.0211,  0.1942,
         0.1641,  0.0532, -0.0569, -0.0402,  0.1989, -0.1625,  0.1310,  0.0140,
         0.0868, -0.1109,  0.0745,  0.2245,  0.1913, -0.1326,  0.0997, -0.0108,
        -0.0675,  0.2053, -0.0651,  0.1784,  0.1593, -0.0191,  0.1509,  0.1260,
         0.0770, -0.0584,  0.1978,  0.0465, -0.0793,  0.0388, -0.0114,  0.0431,
         0.0887,  0.1540,  0.1253, -0.0479,  0.0790,  0.0686, -0.0657,  0.1149,
         0.2088, -0.0792,  0.0938, -0.0053,  0.1147,  0.0904, -0.0502,  0.0564,
         0.2414,  0.0936,  0.0958, -0.1315, -0.0034,  0.1628,  0.0182,  0.0765])
mlp.net.2.batch_norm.weight tensor([0.5130, 0.4256, 0.3934, 0.4835, 0.3719, 0.3948, 0.4186, 0.4290, 0.5536,
        0.3978, 0.4679, 0.3179, 0.4208, 0.5348, 0.2579, 0.3518, 0.3067, 0.4001,
        0.4119, 0.4509, 0.4101, 0.4451, 0.4385, 0.4132, 0.4474, 0.4266, 0.4327,
        0.4644, 0.2839, 0.3498, 0.4690, 0.5081, 0.3281, 0.2689, 0.3115, 0.1422,
        0.3833, 0.3934, 0.4618, 0.3575, 0.3721, 0.3504, 0.4902, 0.4120, 0.3913,
        0.4101, 0.2960, 0.3165, 0.3397, 0.3170, 0.4766, 0.1003, 0.3385, 0.2420,
        0.2988, 0.1897, 0.3997, 0.3620, 0.4228, 0.2920, 0.3906, 0.3344, 0.4936,
        0.2976])
mlp.net.2.batch_norm.bias tensor([-0.0247, -0.2218,  0.0888,  0.0290,  0.2078, -0.0673, -0.0091,  0.1492,
         0.0035,  0.0059, -0.0461, -0.1014,  0.1426, -0.0595,  0.0980,  0.0595,
         0.1281, -0.1817, -0.0829,  0.1023,  0.1810, -0.0996,  0.0854, -0.1543,
        -0.1669, -0.0018,  0.0842,  0.0628, -0.1230, -0.1701,  0.0698, -0.0358,
        -0.0392,  0.1241,  0.1801, -0.0870,  0.0163,  0.1395, -0.1644, -0.2687,
         0.1235, -0.0421,  0.0749, -0.0473,  0.0554, -0.0157,  0.1801,  0.1345,
        -0.0659,  0.2077,  0.0988, -0.3481,  0.1684,  0.1913,  0.0384, -0.0863,
         0.1461,  0.1863, -0.1867,  0.1569, -0.1163, -0.1212, -0.0102,  0.1754])
mlp.net.2.batch_norm.running_mean tensor([0.7444, 0.1945, 0.5594, 0.5995, 0.7127, 0.1817, 0.2983, 0.6676, 0.7544,
        0.4450, 0.2147, 0.2194, 0.5720, 0.3355, 0.3631, 0.4683, 0.5324, 0.1495,
        0.1872, 0.7039, 0.7030, 0.1225, 0.4161, 0.1501, 0.1281, 0.3764, 0.4431,
        0.4866, 0.2953, 0.2488, 0.5051, 0.3212, 0.3935, 0.4633, 0.3015, 0.0998,
        0.3137, 0.4451, 0.2257, 0.2583, 0.4537, 0.4075, 0.4672, 0.3174, 0.3774,
        0.4978, 0.2040, 0.5859, 0.3184, 0.2198, 0.5819, 0.1300, 0.4575, 0.3739,
        0.2929, 0.1774, 0.4695, 0.5983, 0.2532, 0.3174, 0.2560, 0.2054, 0.7070,
        0.3866])
mlp.net.2.batch_norm.running_var tensor([0.3685, 0.2394, 0.3577, 0.3105, 0.6566, 0.1728, 0.1359, 0.6819, 0.7265,
        0.4770, 0.1735, 0.1767, 0.2338, 0.3967, 0.1798, 0.3515, 0.4336, 0.1451,
        0.1241, 0.5236, 0.6124, 0.0654, 0.2538, 0.1510, 0.1034, 0.1916, 0.4694,
        0.4883, 0.1929, 0.2726, 0.3709, 0.2291, 0.2020, 0.3878, 0.2239, 0.0373,
        0.2375, 0.4899, 0.2608, 0.1790, 0.4163, 0.2128, 0.2620, 0.1954, 0.2547,
        0.3460, 0.1487, 0.5728, 0.1945, 0.1622, 0.4561, 0.0704, 0.1688, 0.2872,
        0.2842, 0.1274, 0.2195, 0.5165, 0.2192, 0.2947, 0.2324, 0.1889, 0.6246,
        0.2051])
mlp.net.2.batch_norm.num_batches_tracked tensor(380)
mlp.net.3.linear.weight tensor([[ 0.0348,  0.0125,  0.1185,  ..., -0.0930,  0.1936,  0.0638],
        [ 0.1115, -0.0490,  0.2195,  ...,  0.0655, -0.0256,  0.1244],
        [ 0.0355, -0.2080,  0.1685,  ...,  0.0154,  0.0744,  0.0046],
        ...,
        [-0.0399, -0.1437,  0.1574,  ..., -0.0321,  0.1599,  0.0032],
        [-0.0450, -0.1076,  0.0041,  ..., -0.0343,  0.0014,  0.0914],
        [ 0.0371, -0.2225,  0.1630,  ...,  0.0388,  0.0846,  0.1071]])
mlp.net.3.linear.bias tensor([ 2.8300e-01,  5.5742e-02,  1.7246e-01,  1.4717e-01, -8.1099e-02,
         8.9857e-02, -3.1703e-02, -1.9549e-04,  2.5420e-01,  1.2718e-01,
         9.3075e-02,  1.7167e-01,  8.6184e-02,  2.0805e-01,  9.8856e-03,
         1.2744e-01,  1.5751e-01,  2.7957e-01,  5.6158e-02, -1.4440e-03,
         1.2329e-01, -8.1889e-02,  1.3941e-01,  1.5817e-01,  3.5596e-02,
         2.0002e-01,  1.1325e-01,  5.1769e-02,  3.5624e-01,  1.0858e-01,
         2.2267e-01,  1.4423e-01,  1.3926e-01,  1.5550e-01, -8.5665e-02,
         1.5927e-01,  2.0919e-01,  3.3162e-02, -3.8559e-02,  7.2799e-02,
         1.6663e-01,  1.5158e-01,  1.6029e-01,  8.3267e-02,  2.2000e-01,
         8.3677e-02,  4.1965e-01,  7.6622e-02, -2.5899e-03,  2.8582e-01,
        -2.4157e-02,  8.1799e-02,  5.4121e-02,  1.9634e-01,  7.8733e-02,
         1.6787e-01,  1.9062e-01,  1.6053e-01,  4.0839e-02, -2.9707e-02,
         1.1187e-01,  1.4843e-01,  1.2450e-01,  8.0080e-02])
mlp.net.3.batch_norm.weight tensor([0.3831, 0.3109, 0.4220, 0.2481, 0.3053, 0.3637, 0.3358, 0.2728, 0.2137,
        0.2498, 0.3280, 0.2217, 0.4071, 0.3632, 0.3619, 0.3291, 0.2737, 0.3970,
        0.3905, 0.2961, 0.3427, 0.4152, 0.1993, 0.4383, 0.3701, 0.3807, 0.2980,
        0.3881, 0.3585, 0.2674, 0.3599, 0.3468, 0.2141, 0.3465, 0.2216, 0.3539,
        0.3540, 0.3309, 0.5364, 0.2317, 0.4067, 0.5389, 0.4563, 0.3588, 0.3904,
        0.3789, 0.5139, 0.4197, 0.2655, 0.5630, 0.3306, 0.2699, 0.3004, 0.3904,
        0.3575, 0.4431, 0.3396, 0.3575, 0.3208, 0.3938, 0.3426, 0.2764, 0.3978,
        0.2734])
mlp.net.3.batch_norm.bias tensor([-0.1065, -0.1168, -0.1273, -0.2010, -0.1640, -0.3425,  0.1918, -0.2535,
        -0.0438, -0.2356, -0.2308, -0.0638, -0.0579, -0.2197,  0.1609, -0.1824,
        -0.2509, -0.0507,  0.1332, -0.3372, -0.2529,  0.1260, -0.4522, -0.2173,
         0.0442, -0.0897,  0.2280,  0.3149, -0.1403, -0.0136,  0.0093, -0.1100,
        -0.1976, -0.1597, -0.2554, -0.0818, -0.0699,  0.0350, -0.0481, -0.3417,
        -0.0723,  0.0395,  0.1043, -0.0319,  0.1735, -0.2958, -0.0669,  0.1222,
        -0.3905,  0.0046,  0.3911, -0.1059,  0.0906,  0.1044, -0.3045, -0.2101,
        -0.1444, -0.0364,  0.2996, -0.1794, -0.1326, -0.0393, -0.1836, -0.0752])
mlp.net.3.batch_norm.running_mean tensor([0.6953, 0.6990, 0.6473, 0.6601, 0.4290, 0.3470, 0.2555, 0.4000, 0.3499,
        0.4042, 0.4367, 0.4111, 0.3829, 0.6384, 0.2704, 0.6748, 0.6440, 0.9728,
        0.2923, 0.3860, 0.6054, 0.4484, 0.2642, 0.7481, 0.2758, 0.6996, 0.5173,
        0.3380, 0.9292, 0.4648, 0.6150, 0.4527, 0.5428, 0.3336, 0.3743, 0.5745,
        0.5948, 0.6187, 0.2966, 0.3854, 0.4120, 0.8377, 0.3087, 0.5715, 0.4115,
        0.6412, 0.8389, 0.6456, 0.4375, 0.9218, 0.4732, 0.6120, 0.2765, 0.7180,
        0.3606, 0.4421, 0.8269, 0.3513, 0.3156, 0.2762, 0.4635, 0.5658, 0.7593,
        0.3336])
mlp.net.3.batch_norm.running_var tensor([0.2907, 0.5036, 0.3137, 0.4173, 0.4139, 0.4924, 0.3868, 0.3525, 0.2083,
        0.1965, 0.3056, 0.4836, 0.3934, 0.3244, 0.2909, 0.5475, 0.6973, 0.4378,
        0.3567, 0.2117, 0.3121, 0.7343, 0.2315, 0.5175, 0.3685, 0.4119, 0.3389,
        0.2402, 0.2924, 0.1890, 0.2247, 0.4849, 0.3819, 0.2533, 0.3611, 0.5495,
        0.2313, 0.6065, 0.4849, 0.2305, 0.5320, 0.6051, 0.3768, 0.2893, 0.4337,
        0.5716, 0.3116, 0.6007, 0.2699, 0.3599, 0.4239, 0.5717, 0.3937, 0.4176,
        0.5270, 0.4039, 0.5035, 0.3380, 0.3022, 0.2305, 0.4248, 0.2973, 0.7137,
        0.1956])
mlp.net.3.batch_norm.num_batches_tracked tensor(380)
mlp.net.4.weight tensor([[ 0.0605, -0.0215,  0.1229,  ...,  0.1088,  0.1156,  0.0962],
        [-0.1306, -0.1111, -0.0774,  ..., -0.0770, -0.1522, -0.0992],
        [-0.1616, -0.0857, -0.0766,  ..., -0.0275, -0.1063, -0.0531],
        ...,
        [ 0.0734,  0.1319,  0.2730,  ...,  0.0832,  0.0504,  0.0401],
        [ 0.0656,  0.1489,  0.2628,  ...,  0.0740,  0.0380,  0.0603],
        [-0.0124, -0.0767, -0.0666,  ...,  0.1193,  0.0702, -0.0264]])
mlp.net.4.bias tensor([-7.6956e-01,  3.5752e-01,  1.4811e-01,  6.9339e-02,  2.4755e-02,
         9.9352e-02,  2.0303e-01,  4.9260e-02,  1.9162e-01,  1.6796e-01,
         1.0205e-01,  2.4553e-01,  3.6245e-01,  2.1698e-01,  1.8239e-01,
         1.0736e-01,  2.2760e-01,  1.6253e-01, -3.9804e-02,  8.9075e-02,
         1.4951e-01,  2.2686e-01,  3.9630e-02,  1.8266e-01,  4.0900e-02,
        -3.9791e-02, -4.6896e-02,  9.1467e-02,  9.0255e-02,  9.5354e-02,
         2.8709e-02,  2.3370e-01, -8.7039e-02, -4.7427e-02,  1.6232e-01,
         3.1354e-01, -7.2489e-05, -8.4590e-02, -2.3415e-01, -2.4586e-01,
        -1.8775e-01,  1.3240e-01,  5.6930e-02, -4.2682e-02,  3.7837e-02,
        -3.1842e-01,  9.6916e-02, -2.8002e-01, -1.3118e-01,  8.9672e-02,
        -7.6078e-02,  8.3011e-02, -7.0609e-01, -1.9310e-01, -2.3064e-01,
        -2.8627e-01, -1.2165e-01, -2.8865e-01, -7.1641e-01, -2.1420e-01,
        -1.5677e-01, -7.0957e-01, -1.4770e-03, -3.4437e-01, -6.9645e-01,
        -1.7201e-01, -7.1233e-01, -2.1518e-01, -2.1745e-01, -7.2968e-01,
        -6.6795e-01, -2.7305e-01, -6.6589e-01, -6.8920e-01,  7.1963e-03,
        -2.4023e-01, -2.3385e-01, -6.6280e-01, -9.3046e-02, -2.5351e-01,
        -6.5363e-01, -1.2979e-01, -6.2143e-01, -2.0247e-01, -7.1314e-01,
        -1.6070e-01, -1.7565e-01, -7.0073e-01, -1.4793e-01, -6.8381e-01,
        -6.2376e-01, -6.7975e-01, -6.1949e-01, -3.7740e-02, -6.0760e-01,
        -6.9167e-01, -6.2377e-01, -7.0312e-01, -1.3730e-01, -6.8405e-01,
        -6.1344e-02, -6.9652e-01, -1.0105e-01, -6.5279e-01, -6.3756e-01,
        -6.4241e-01, -5.9521e-02, -9.6561e-02, -6.6040e-01, -6.2286e-01,
        -5.9427e-01, -6.1641e-02, -5.8499e-01, -6.4406e-01, -5.8692e-01,
        -1.7192e-01, -6.1059e-01, -6.6452e-01, -6.1972e-01, -5.9721e-01,
        -5.9543e-01, -6.4092e-01, -1.1368e-01, -6.6436e-01, -6.7677e-01,
        -6.3573e-02, -6.5909e-01, -6.6446e-01, -1.0379e-01, -6.3483e-01,
        -1.2395e-01, -6.5348e-01, -6.3806e-01, -6.7628e-01, -6.2921e-01,
        -6.4762e-01, -5.7269e-01, -5.5567e-01, -6.5964e-01, -5.8464e-01,
        -6.0654e-01, -6.0378e-01, -6.5942e-01, -6.4459e-01, -5.9475e-01,
        -5.6338e-01, -6.4467e-01, -5.5815e-01, -6.5014e-01, -6.0441e-01,
        -5.9304e-01, -5.8189e-01, -5.7861e-01, -5.7922e-01, -6.1080e-02,
        -5.6497e-01, -6.4940e-01, -5.6269e-01, -5.8666e-01, -5.6772e-01,
        -9.3838e-02, -6.3665e-01, -5.9703e-01, -5.8240e-01, -6.4172e-01,
        -6.5566e-01, -5.9212e-01, -8.3755e-02, -6.1714e-01, -6.3240e-01,
        -6.5299e-01, -5.4825e-01, -5.6763e-01, -5.5348e-01, -6.1367e-01,
        -5.9717e-01, -5.5837e-01, -8.0502e-02, -5.7931e-01, -6.4471e-01,
        -5.7299e-01, -6.1827e-01, -5.5784e-01, -6.1121e-01, -6.0717e-01,
        -5.8217e-01, -6.2595e-01, -5.9093e-01, -6.5684e-01, -6.3285e-01,
        -6.0640e-01, -5.6577e-01, -5.7565e-01, -5.6123e-01, -6.1129e-01,
        -6.0238e-01, -6.4571e-01, -5.4832e-01, -5.5198e-01, -4.4204e-02])
