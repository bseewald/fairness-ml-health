Weights: 
embeddings.embeddings.0.weight tensor([[ 0.0108,  0.0087],
        [ 0.0440,  0.0492],
        [ 0.0624,  0.0493],
        [-0.1850, -0.1880]])
embeddings.embeddings.1.weight tensor([[-0.0041,  0.0071],
        [ 0.0727, -0.1123],
        [-0.0335,  0.0042],
        [ 0.0192, -0.0693],
        [-0.0354,  0.0553]])
embeddings.embeddings.2.weight tensor([[ 0.0103,  0.0039, -0.0051],
        [ 0.2148,  0.1916,  0.1103],
        [ 0.0548,  0.0481, -0.0002],
        [-0.0500, -0.0129, -0.0345],
        [-0.0482, -0.0483, -0.0142],
        [-0.0170, -0.0387, -0.0300]])
embeddings.embeddings.3.weight tensor([[ 0.0145,  0.0035],
        [ 0.1709,  0.1722],
        [ 0.0215,  0.0121],
        [-0.1540, -0.1434]])
embeddings.embeddings.4.weight tensor([[ 0.0172, -0.0096],
        [ 0.1678,  0.1400],
        [-0.0974, -0.0930],
        [-0.0062,  0.0074]])
mlp.net.0.linear.weight tensor([[ 0.0100, -0.0133, -0.0207,  ..., -0.1608, -0.0511, -0.0254],
        [-0.0122,  0.0692,  0.0081,  ..., -0.1777, -0.0596, -0.0544],
        [-0.0077,  0.0019,  0.0253,  ..., -0.1538, -0.0875, -0.0858],
        ...,
        [ 0.0495, -0.0297,  0.0145,  ...,  0.0723,  0.0550,  0.0499],
        [ 0.0265, -0.0976,  0.0168,  ...,  0.0779,  0.0369,  0.0575],
        [ 0.0226, -0.0170,  0.0017,  ...,  0.0586,  0.0545,  0.0353]])
mlp.net.0.linear.bias tensor([-0.0398, -0.0126, -0.0383,  0.0340, -0.0175,  0.0016, -0.0010,  0.0432,
        -0.0179,  0.0539,  0.0479,  0.0094, -0.0152, -0.0147,  0.0552, -0.0185,
        -0.0025, -0.0308,  0.0101, -0.0048,  0.0226,  0.0183, -0.0060, -0.0365,
        -0.0431, -0.0241,  0.0325,  0.0057, -0.0090, -0.0667, -0.0108,  0.0398,
        -0.0170, -0.0226, -0.0313, -0.0013,  0.0733,  0.0662, -0.0241,  0.0659,
         0.0800, -0.0282, -0.0436, -0.0031,  0.1160,  0.0099,  0.0979, -0.0320,
         0.0491,  0.0701,  0.0690, -0.0035, -0.0037, -0.0083, -0.0023,  0.0107,
         0.0605,  0.0457, -0.0167, -0.1198,  0.0141,  0.0373,  0.0060,  0.0518])
mlp.net.0.batch_norm.weight tensor([ 0.0799,  0.0996,  0.1026,  0.0697,  0.0004,  0.0231,  0.0281,  0.0537,
         0.0159,  0.0871,  0.0600,  0.0820,  0.0796,  0.0503,  0.0374,  0.0274,
        -0.0094,  0.0905,  0.0481,  0.0134,  0.0184, -0.0280,  0.0885,  0.0556,
         0.0788,  0.0084,  0.1023,  0.0503,  0.0186,  0.0611,  0.0852,  0.0616,
         0.0269,  0.0169,  0.0283,  0.0281,  0.0514,  0.0859,  0.0345,  0.0369,
         0.0891,  0.0170,  0.0483,  0.0845,  0.0665,  0.0734,  0.0984,  0.0481,
         0.0184,  0.0750,  0.0681, -0.0128,  0.0257,  0.0252,  0.0677, -0.0440,
         0.0784,  0.0966,  0.0230,  0.1098, -0.0157,  0.0105,  0.0293,  0.0426])
mlp.net.0.batch_norm.bias tensor([-0.0378, -0.0195, -0.0443, -0.0210,  0.0058, -0.0267, -0.0048,  0.0210,
         0.0292, -0.0290,  0.0176, -0.0406, -0.0127,  0.0144,  0.0159, -0.0092,
        -0.0135, -0.0139, -0.0101, -0.0249,  0.0113, -0.0173,  0.0129,  0.0057,
        -0.0353,  0.0392, -0.0091, -0.0571,  0.0050, -0.0170,  0.0123,  0.0264,
         0.0015, -0.0332,  0.0074,  0.0049, -0.0084,  0.0083,  0.0183,  0.0427,
         0.0112,  0.0188, -0.0368, -0.0393,  0.0366, -0.0357,  0.0332, -0.0214,
        -0.0202,  0.0485,  0.0219, -0.0126, -0.0234,  0.0002, -0.0221, -0.0134,
         0.0710,  0.0207, -0.0463, -0.0228,  0.0001, -0.0142,  0.0065,  0.0508])
mlp.net.0.batch_norm.running_mean tensor([4.0263e-03, 8.6290e-02, 5.1893e-02, 7.8296e-02, 5.8090e-08, 1.8505e-04,
        0.0000e+00, 1.3768e-01, 1.9341e-10, 1.4066e-01, 6.4013e-02, 5.8989e-02,
        4.3039e-02, 2.1727e-02, 9.3649e-02, 6.6898e-10, 1.0571e-02, 3.6594e-04,
        7.3202e-02, 2.5013e-07, 6.6348e-02, 1.3774e-01, 1.9353e-02, 1.9751e-08,
        5.7242e-02, 2.5919e-07, 8.6801e-02, 1.0287e-01, 6.0496e-12, 7.0234e-07,
        4.3646e-03, 7.8092e-02, 3.2221e-07, 7.3243e-10, 6.0254e-06, 0.0000e+00,
        1.2271e-01, 8.9183e-02, 2.8085e-10, 8.9149e-02, 7.8793e-02, 2.3357e-07,
        2.0078e-07, 3.3228e-02, 9.6092e-02, 7.2838e-02, 6.4680e-02, 2.7290e-08,
        1.0964e-01, 7.1957e-02, 8.6245e-02, 1.9342e-02, 3.2371e-16, 1.5890e-13,
        5.6489e-02, 5.4562e-03, 6.1682e-02, 8.1937e-02, 2.7756e-10, 4.7056e-04,
        1.3043e-01, 1.3393e-01, 5.9336e-02, 7.3159e-02])
mlp.net.0.batch_norm.running_var tensor([1.1606e-04, 2.9819e-03, 1.9419e-03, 1.3661e-03, 2.0184e-09, 4.0653e-06,
        1.5894e-11, 1.8379e-03, 2.2928e-11, 2.2680e-03, 7.3041e-04, 1.6204e-03,
        8.7617e-04, 8.5791e-04, 1.3608e-03, 5.5944e-11, 2.7975e-04, 1.4374e-05,
        2.3069e-03, 2.6773e-10, 7.0039e-04, 2.4816e-03, 7.5470e-04, 8.9774e-10,
        1.6071e-03, 1.0711e-08, 2.0649e-03, 1.8408e-03, 1.6290e-11, 2.0220e-08,
        1.4891e-04, 1.4249e-03, 7.6825e-09, 5.3507e-11, 1.0930e-07, 1.5894e-11,
        9.0951e-04, 1.4677e-03, 4.1240e-11, 1.3489e-03, 2.2749e-03, 9.1645e-09,
        7.5063e-09, 1.0504e-03, 1.3134e-03, 1.4213e-03, 1.7359e-03, 8.2310e-10,
        1.6688e-03, 1.6263e-03, 1.3775e-03, 4.4211e-04, 1.5894e-11, 1.5909e-11,
        2.3843e-03, 2.6427e-04, 1.1856e-03, 1.9387e-03, 3.6076e-11, 1.4189e-05,
        1.5101e-03, 2.2290e-03, 1.7291e-03, 5.9668e-04])
mlp.net.0.batch_norm.num_batches_tracked tensor(236)
mlp.net.1.linear.weight tensor([[-0.0341,  0.0368, -0.0718,  ...,  0.0308,  0.0029,  0.0504],
        [-0.0364, -0.0522,  0.0198,  ..., -0.0236,  0.0725,  0.0184],
        [-0.0446, -0.0201, -0.0528,  ...,  0.0006,  0.0066,  0.0234],
        ...,
        [-0.0046,  0.0781,  0.0613,  ..., -0.0229, -0.0493, -0.0836],
        [-0.0360,  0.0023, -0.0098,  ..., -0.0025, -0.0187,  0.0256],
        [-0.0731, -0.0326, -0.0398,  ..., -0.0073, -0.0110,  0.0030]])
mlp.net.1.linear.bias tensor([ 0.0820,  0.0674,  0.0331,  0.0107,  0.0429,  0.0601,  0.0251,  0.0505,
         0.0264,  0.0268, -0.0427,  0.0234,  0.0986, -0.0438,  0.0197, -0.0588,
        -0.0458,  0.0851,  0.0568,  0.0484, -0.0391,  0.0484,  0.0022,  0.0720,
         0.0476,  0.0541,  0.0147, -0.0283, -0.0114,  0.0711,  0.0597,  0.0897,
        -0.0422,  0.0382,  0.0617, -0.0163,  0.0215,  0.0635, -0.0089,  0.0776,
         0.0491,  0.0311,  0.0542,  0.0074,  0.0540, -0.0352,  0.0034,  0.0564,
         0.0024,  0.0201,  0.0501,  0.0125,  0.0574,  0.0903,  0.1201,  0.0731,
         0.0445,  0.0582,  0.0073, -0.0359,  0.0668,  0.0442,  0.0074,  0.0682])
mlp.net.1.batch_norm.weight tensor([ 0.0810,  0.0560,  0.0483,  0.0975,  0.0743,  0.0334,  0.0839,  0.0682,
         0.0354,  0.0268,  0.0238,  0.0494,  0.0427,  0.0544,  0.0855,  0.0783,
         0.0510,  0.0774,  0.0800,  0.0662,  0.0093,  0.0329,  0.0910,  0.0914,
         0.0444,  0.0859,  0.0302,  0.0211, -0.0082,  0.0942,  0.0767,  0.0679,
         0.0282,  0.0733,  0.0355,  0.1015,  0.0800,  0.0358,  0.0187,  0.0576,
         0.0652,  0.0403,  0.0527,  0.0610,  0.0695,  0.0024,  0.0545,  0.0411,
         0.0690,  0.0768,  0.0305,  0.0920,  0.0370,  0.0888,  0.0574,  0.0711,
         0.0498,  0.0423,  0.0471, -0.0017,  0.0456,  0.0678,  0.0069,  0.0618])
mlp.net.1.batch_norm.bias tensor([ 0.0087,  0.0338,  0.0183, -0.0219,  0.0201,  0.0151,  0.0082,  0.0094,
         0.0182,  0.0232,  0.0048, -0.0224,  0.0141,  0.0041, -0.0121,  0.0188,
        -0.0078, -0.0089, -0.0239,  0.0049,  0.0262,  0.0178, -0.0101,  0.0338,
        -0.0137,  0.0040,  0.0113, -0.0242,  0.0151,  0.0365,  0.0193,  0.0246,
         0.0067, -0.0128,  0.0279, -0.0152,  0.0045,  0.0404, -0.0301,  0.0152,
        -0.0005,  0.0422,  0.0059, -0.0003,  0.0297,  0.0110,  0.0171,  0.0359,
         0.0099,  0.0067,  0.0133, -0.0193, -0.0420,  0.0263,  0.0222,  0.0127,
         0.0091,  0.0087,  0.0322,  0.0419,  0.0270,  0.0095,  0.0055,  0.0187])
mlp.net.1.batch_norm.running_mean tensor([0.1137, 0.0930, 0.0588, 0.0164, 0.0715, 0.0836, 0.0488, 0.0740, 0.0349,
        0.0540, 0.0027, 0.0342, 0.1192, 0.0054, 0.0571, 0.0002, 0.0014, 0.1116,
        0.0756, 0.0813, 0.0026, 0.0748, 0.0247, 0.0934, 0.0394, 0.0836, 0.0432,
        0.0080, 0.0144, 0.1103, 0.0881, 0.1215, 0.0038, 0.0313, 0.0743, 0.0133,
        0.0218, 0.0759, 0.0219, 0.1113, 0.0819, 0.0475, 0.0736, 0.0448, 0.0749,
        0.0007, 0.0176, 0.0738, 0.0186, 0.0468, 0.0415, 0.0191, 0.0598, 0.1224,
        0.1467, 0.1048, 0.0536, 0.0871, 0.0211, 0.0053, 0.0878, 0.0383, 0.0201,
        0.0968])
mlp.net.1.batch_norm.running_var tensor([3.6505e-03, 2.9649e-03, 2.0704e-03, 9.3514e-04, 3.3023e-03, 2.3226e-03,
        1.6851e-03, 2.8826e-03, 6.0303e-04, 2.9510e-03, 1.0732e-04, 1.4979e-03,
        2.6052e-03, 2.8166e-04, 3.4899e-03, 1.4074e-05, 8.1566e-05, 3.8165e-03,
        2.4213e-03, 2.7506e-03, 1.0828e-04, 2.6227e-03, 2.4162e-03, 2.9283e-03,
        9.3338e-04, 3.9279e-03, 2.0373e-03, 2.9402e-04, 6.5473e-04, 5.7714e-03,
        3.1037e-03, 4.0770e-03, 2.0135e-04, 1.6809e-03, 1.7528e-03, 9.2824e-04,
        1.2899e-03, 1.8284e-03, 8.4771e-04, 3.1270e-03, 2.2979e-03, 1.5510e-03,
        2.2211e-03, 2.4869e-03, 2.8794e-03, 1.7562e-05, 1.0855e-03, 2.0349e-03,
        1.4608e-03, 1.8692e-03, 1.5314e-03, 1.2052e-03, 4.6119e-04, 5.9378e-03,
        5.0039e-03, 3.8563e-03, 1.2200e-03, 2.5039e-03, 9.2102e-04, 1.7532e-04,
        2.4436e-03, 2.2371e-03, 2.4923e-04, 3.3397e-03])
mlp.net.1.batch_norm.num_batches_tracked tensor(236)
mlp.net.2.linear.weight tensor([[ 5.8990e-02,  1.7383e-03,  2.8394e-02,  ..., -3.9256e-02,
          3.2514e-03, -1.0567e-02],
        [ 1.2814e-03,  3.1755e-02,  2.6370e-02,  ..., -1.7089e-02,
          8.8487e-05,  1.0754e-02],
        [ 2.2439e-02,  1.5511e-03, -4.5844e-02,  ...,  1.9578e-02,
          3.4635e-02, -2.6613e-02],
        ...,
        [ 1.4725e-02,  5.1968e-03, -1.6922e-03,  ..., -1.4261e-02,
          7.1620e-03,  2.7286e-03],
        [-2.8681e-02,  5.0401e-02,  2.3387e-02,  ...,  6.2682e-03,
          1.9485e-03, -3.9846e-03],
        [ 1.6429e-02, -1.7421e-04,  3.2601e-03,  ...,  1.9310e-02,
         -8.8284e-03, -5.2719e-03]])
mlp.net.2.linear.bias tensor([ 0.1023,  0.0775,  0.0350,  0.0532,  0.0849,  0.0814,  0.0501,  0.0931,
         0.0516,  0.0834, -0.0541,  0.0372,  0.0452,  0.0228,  0.0533,  0.0497,
         0.0632, -0.0216,  0.0410,  0.0295,  0.0272,  0.0559,  0.0159,  0.0719,
         0.0709,  0.0410,  0.1117,  0.0435,  0.0330, -0.0070,  0.0891,  0.0397,
         0.0802,  0.0627,  0.0857,  0.0019,  0.0198,  0.1006,  0.0928,  0.0950,
         0.0391,  0.0411,  0.0409,  0.0637, -0.0511,  0.0813,  0.0627,  0.0459,
         0.0357,  0.0646, -0.0045,  0.1139,  0.0404,  0.1254,  0.1008,  0.0734,
         0.0885, -0.0152,  0.0656,  0.1074,  0.0154,  0.0792,  0.0460,  0.1206])
mlp.net.2.batch_norm.weight tensor([ 0.0746,  0.0573,  0.0574,  0.0416,  0.0666,  0.0529,  0.0789,  0.0529,
         0.0773,  0.0589, -0.0061,  0.0827,  0.0733,  0.0753,  0.0819,  0.0706,
         0.0810,  0.0205,  0.0570,  0.0267,  0.0511,  0.0403,  0.0895,  0.0488,
         0.0124,  0.0244,  0.0590,  0.0476,  0.0603, -0.0417,  0.0319,  0.0792,
         0.0626,  0.0589,  0.0620,  0.0454,  0.0501,  0.0424,  0.0570,  0.0689,
         0.0161,  0.0190,  0.0785,  0.0656, -0.0145,  0.0716, -0.0019, -0.0140,
         0.0728,  0.0518,  0.0798,  0.0511,  0.0675,  0.0363,  0.0493, -0.0669,
         0.0722, -0.0253,  0.0706,  0.0481,  0.0671, -0.0113,  0.0754,  0.0583])
mlp.net.2.batch_norm.bias tensor([-0.0108,  0.0405, -0.0070, -0.0296,  0.0403,  0.0425, -0.0057,  0.0275,
         0.0173,  0.0362,  0.0001,  0.0081, -0.0002,  0.0106,  0.0113,  0.0061,
         0.0362, -0.0211, -0.0154,  0.0346, -0.0332,  0.0059, -0.0206,  0.0178,
         0.0281,  0.0383,  0.0346, -0.0309, -0.0318, -0.0271,  0.0370, -0.0065,
        -0.0349,  0.0124,  0.0169,  0.0012, -0.0317,  0.0426,  0.0070,  0.0208,
         0.0359,  0.0173,  0.0007,  0.0234, -0.0017, -0.0029, -0.0020, -0.0077,
        -0.0075,  0.0044,  0.0038,  0.0462,  0.0146,  0.0383,  0.0321,  0.0068,
         0.0369,  0.0301,  0.0321,  0.0609, -0.0074, -0.0006,  0.0212,  0.0388])
mlp.net.2.batch_norm.running_mean tensor([1.2240e-01, 8.9526e-02, 3.5366e-02, 4.9099e-02, 9.8588e-02, 9.8444e-02,
        5.4502e-02, 1.1374e-01, 8.1656e-02, 1.0222e-01, 2.7571e-06, 3.7208e-02,
        5.0556e-02, 4.3616e-02, 6.1666e-02, 5.3601e-02, 8.8568e-02, 3.5200e-03,
        4.5006e-02, 5.2244e-02, 3.2541e-02, 7.0918e-02, 3.6934e-02, 8.1377e-02,
        7.1522e-02, 6.4685e-02, 1.4312e-01, 3.9089e-02, 3.7342e-02, 3.2688e-02,
        1.1245e-01, 4.5318e-02, 7.3619e-02, 7.9772e-02, 1.0270e-01, 3.5205e-02,
        3.1280e-02, 1.1410e-01, 1.1584e-01, 9.3321e-02, 5.4705e-02, 4.0925e-02,
        4.1192e-02, 9.8518e-02, 1.4264e-05, 1.0038e-01, 6.0194e-02, 5.2385e-02,
        4.3176e-02, 8.1724e-02, 2.2860e-02, 1.3945e-01, 4.0554e-02, 1.5039e-01,
        1.1500e-01, 7.1736e-02, 9.9638e-02, 2.0535e-02, 9.7372e-02, 1.2878e-01,
        2.0515e-02, 8.4290e-02, 6.9137e-02, 1.3299e-01])
mlp.net.2.batch_norm.running_var tensor([4.6086e-03, 1.6466e-03, 1.8532e-03, 9.3840e-04, 1.8994e-03, 2.9340e-03,
        5.0629e-03, 4.0054e-03, 4.7012e-03, 3.4723e-03, 5.0773e-08, 3.1206e-03,
        4.7230e-03, 1.8406e-03, 5.8975e-03, 4.4819e-03, 5.6312e-03, 1.1827e-04,
        2.1902e-03, 1.9615e-03, 8.1957e-04, 1.9825e-03, 4.3440e-03, 1.1498e-03,
        1.6618e-03, 2.8079e-03, 4.9308e-03, 7.2173e-04, 3.2938e-03, 3.3503e-03,
        4.4794e-03, 2.4656e-03, 5.2678e-03, 2.4790e-03, 3.0966e-03, 1.9497e-03,
        3.2748e-03, 4.2915e-03, 5.2281e-03, 1.0688e-03, 1.0837e-03, 1.6763e-04,
        3.3448e-03, 5.9762e-03, 5.3585e-07, 4.5002e-03, 5.8443e-04, 1.1775e-03,
        3.6935e-03, 3.3052e-03, 9.3140e-04, 7.1955e-03, 2.5579e-03, 3.9025e-03,
        3.3641e-03, 7.1092e-03, 2.2039e-03, 9.5615e-04, 4.3827e-03, 5.8089e-03,
        1.0535e-03, 1.6910e-03, 3.7285e-03, 3.0600e-03])
mlp.net.2.batch_norm.num_batches_tracked tensor(236)
mlp.net.3.linear.weight tensor([[-0.0579, -0.0283,  0.0120,  ...,  0.0031, -0.0256, -0.0546],
        [-0.0151,  0.0179,  0.0301,  ..., -0.0265,  0.0365,  0.0083],
        [ 0.0100,  0.0734, -0.0353,  ..., -0.0044,  0.0401, -0.0237],
        ...,
        [ 0.0720,  0.0360, -0.0225,  ...,  0.0291,  0.0059,  0.0796],
        [ 0.0428,  0.0117, -0.0305,  ..., -0.0046,  0.0003,  0.0166],
        [ 0.0257,  0.0132,  0.0378,  ...,  0.0464, -0.0028,  0.0543]])
mlp.net.3.linear.bias tensor([ 0.0469,  0.0457,  0.1175,  0.0787,  0.1038,  0.0811,  0.0423,  0.0584,
         0.0246,  0.0731,  0.0680,  0.0349,  0.0799,  0.0674,  0.0582,  0.0372,
         0.0488,  0.0760,  0.0647,  0.0570,  0.0740,  0.0575,  0.0692,  0.0358,
         0.0467,  0.0309,  0.0582,  0.0516,  0.0448,  0.0650,  0.0450,  0.0622,
         0.0476,  0.0560,  0.0671,  0.0537,  0.0615,  0.0650,  0.0264,  0.0896,
         0.0655,  0.0808,  0.0510,  0.0728,  0.0650,  0.0313,  0.0703,  0.0444,
         0.0737,  0.0829,  0.0372,  0.0771,  0.0857, -0.0178,  0.0776,  0.0854,
         0.0909,  0.0583,  0.0430,  0.0716,  0.0516,  0.0811,  0.0692,  0.0867])
mlp.net.3.batch_norm.weight tensor([0.1524, 0.1526, 0.1729, 0.1646, 0.1542, 0.1941, 0.2049, 0.1832, 0.1443,
        0.2095, 0.1867, 0.1456, 0.2333, 0.1343, 0.1827, 0.1513, 0.1335, 0.1626,
        0.1794, 0.1938, 0.1770, 0.1454, 0.1782, 0.2166, 0.1127, 0.1168, 0.1630,
        0.2317, 0.1387, 0.1618, 0.1369, 0.1839, 0.1181, 0.2243, 0.1886, 0.2839,
        0.1783, 0.1752, 0.1517, 0.1742, 0.2096, 0.2073, 0.1329, 0.1866, 0.1627,
        0.1513, 0.2031, 0.1275, 0.1837, 0.2165, 0.1533, 0.1694, 0.1315, 0.0759,
        0.1538, 0.2075, 0.1303, 0.2046, 0.1573, 0.1540, 0.1701, 0.2022, 0.1912,
        0.1505])
mlp.net.3.batch_norm.bias tensor([ 0.1961, -0.1632, -0.1802, -0.1120, -0.1699, -0.1118, -0.0309,  0.1052,
        -0.1717, -0.1423,  0.1762, -0.1196,  0.0705, -0.1572, -0.1014, -0.1941,
        -0.1911, -0.2380, -0.0878, -0.1437,  0.1834,  0.2131, -0.1687, -0.1360,
        -0.2488,  0.2691, -0.0686,  0.0216,  0.2605, -0.1419,  0.1896, -0.0747,
        -0.1491,  0.0246, -0.0998, -0.1362, -0.0271, -0.1665,  0.2048,  0.2231,
         0.1530, -0.1074,  0.1703, -0.0654, -0.1030,  0.1598, -0.0817, -0.1554,
        -0.1525, -0.0901,  0.1337, -0.1414, -0.1729,  0.2872, -0.1756,  0.1794,
        -0.0930, -0.0627, -0.1377, -0.1822,  0.2437,  0.0256, -0.1002, -0.1904])
mlp.net.3.batch_norm.running_mean tensor([0.0436, 0.0907, 0.1453, 0.1107, 0.1266, 0.0999, 0.0852, 0.0503, 0.0686,
        0.1063, 0.0542, 0.0806, 0.1114, 0.0874, 0.1033, 0.0826, 0.0867, 0.1173,
        0.0993, 0.0942, 0.0645, 0.0454, 0.1097, 0.0968, 0.0972, 0.0323, 0.0782,
        0.0411, 0.0360, 0.1013, 0.0471, 0.0824, 0.0873, 0.0498, 0.0904, 0.0460,
        0.0904, 0.1055, 0.0300, 0.0751, 0.1008, 0.1191, 0.0445, 0.1085, 0.1033,
        0.0290, 0.1100, 0.0720, 0.1011, 0.1129, 0.0349, 0.1059, 0.1189, 0.0105,
        0.1072, 0.1113, 0.1045, 0.1001, 0.0828, 0.0945, 0.0421, 0.1271, 0.0989,
        0.1331])
mlp.net.3.batch_norm.running_var tensor([0.0032, 0.0053, 0.0053, 0.0045, 0.0045, 0.0029, 0.0034, 0.0039, 0.0038,
        0.0047, 0.0035, 0.0045, 0.0045, 0.0026, 0.0057, 0.0050, 0.0046, 0.0064,
        0.0040, 0.0041, 0.0047, 0.0029, 0.0045, 0.0066, 0.0060, 0.0026, 0.0020,
        0.0036, 0.0027, 0.0044, 0.0044, 0.0026, 0.0048, 0.0052, 0.0031, 0.0060,
        0.0032, 0.0050, 0.0027, 0.0046, 0.0040, 0.0052, 0.0021, 0.0045, 0.0044,
        0.0017, 0.0048, 0.0030, 0.0043, 0.0028, 0.0034, 0.0042, 0.0052, 0.0007,
        0.0035, 0.0042, 0.0024, 0.0049, 0.0045, 0.0034, 0.0033, 0.0062, 0.0042,
        0.0070])
mlp.net.3.batch_norm.num_batches_tracked tensor(236)
mlp.net.4.weight tensor([[ 0.0682, -0.0482, -0.0440,  ..., -0.0960, -0.0804, -0.0612],
        [ 0.0864, -0.0772, -0.0874,  ..., -0.0994, -0.1013, -0.1043],
        [ 0.0316, -0.0373, -0.0594,  ..., -0.0267, -0.0474, -0.0577],
        ...,
        [-0.1463,  0.1459,  0.1542,  ...,  0.0218,  0.1188,  0.1664],
        [-0.1427,  0.1462,  0.1524,  ...,  0.0198,  0.1217,  0.1659],
        [-0.1251,  0.1192,  0.1472,  ...,  0.0991,  0.1342,  0.1365]])
mlp.net.4.bias tensor([ 0.2132,  0.2841,  0.2279,  0.2815,  0.4077,  0.4064,  0.4072,  0.2393,
         0.3773,  0.4184,  0.3211,  0.3641,  0.3348,  0.2812,  0.3182,  0.2174,
         0.3295,  0.2181,  0.1225, -0.0499,  0.1870,  0.0334, -0.0946,  0.1500,
         0.0643, -0.1155, -0.1402,  0.0953,  0.0135, -0.1356, -0.0216, -0.0466,
        -0.3273, -0.1440, -0.0193, -0.0818, -0.2257, -0.2045, -0.2791, -0.1226,
        -0.3394, -0.0798, -0.2093, -0.2960, -0.2867, -0.2817, -0.1321, -0.2959,
        -0.3444, -0.2202, -0.3044, -0.2492, -0.3681, -0.0768, -0.3670, -0.2916,
        -0.3153, -0.3645, -0.3689, -0.2981, -0.3412, -0.3729, -0.3562, -0.3794,
        -0.3779, -0.3390, -0.3717, -0.3714, -0.3326, -0.3818, -0.3672, -0.3566,
        -0.3677, -0.3806, -0.1286, -0.2906, -0.3741, -0.3751, -0.3255, -0.3386,
        -0.3761, -0.3741, -0.3719, -0.3347, -0.3727, -0.2842, -0.3313, -0.3784,
        -0.3266, -0.3806, -0.3796, -0.3679, -0.3747, -0.3409, -0.3780, -0.3790,
        -0.3712, -0.3693, -0.3679, -0.3566, -0.3210, -0.3725, -0.3650, -0.3663,
        -0.3559, -0.3756, -0.3368, -0.3358, -0.3713, -0.3754, -0.3749, -0.3787,
        -0.3694, -0.3845, -0.3740, -0.3633, -0.3808, -0.3734, -0.3716, -0.3786,
        -0.3675, -0.3781, -0.3730, -0.3787, -0.3720, -0.3245, -0.3814, -0.3672,
        -0.3707, -0.3392, -0.3680, -0.3646, -0.3689, -0.3696, -0.3766, -0.3651,
        -0.3747, -0.3732, -0.3758, -0.3759, -0.3800, -0.3713, -0.3735, -0.3718,
        -0.3788, -0.3710, -0.3685, -0.3714, -0.3679, -0.3723, -0.3651, -0.3708,
        -0.3714, -0.3755, -0.3685, -0.3694, -0.3756, -0.3814, -0.3752, -0.3793,
        -0.3352, -0.3740, -0.3678, -0.3689, -0.3804, -0.3720, -0.3745, -0.3406,
        -0.3747, -0.3754, -0.3701, -0.3715, -0.3762, -0.3753, -0.3804, -0.3782,
        -0.3797, -0.3342, -0.3699, -0.3771, -0.3664, -0.3729, -0.3780, -0.3594,
        -0.3747, -0.3761, -0.3691, -0.3713, -0.3707, -0.3799, -0.3721, -0.3752,
        -0.3734, -0.3658, -0.3798, -0.3719, -0.3704, -0.3708, -0.3745, -0.3276])
