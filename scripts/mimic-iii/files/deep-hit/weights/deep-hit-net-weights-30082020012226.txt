Weights: 
embeddings.embeddings.0.weight tensor([[ 0.2186, -0.2561],
        [-0.2676,  0.2400],
        [-0.5488,  0.4608],
        [ 0.1326,  0.2432]])
embeddings.embeddings.1.weight tensor([[ 0.4879, -0.2305],
        [-0.3452, -0.5905],
        [-0.1507,  0.2579],
        [ 0.4677,  0.0275],
        [ 0.5654, -0.3842]])
embeddings.embeddings.2.weight tensor([[ 0.1123,  0.4870, -0.2744],
        [ 0.0144,  0.1566, -0.3038],
        [-0.1246, -0.2945, -0.3415],
        [-0.3971,  0.1068,  0.2556],
        [-0.0063,  0.4110,  0.2992],
        [-0.0719,  0.0733,  0.0555]])
embeddings.embeddings.3.weight tensor([[-0.1659,  0.4405],
        [-0.7516, -0.6912],
        [-0.0176,  0.6469],
        [ 0.0700, -0.3125]])
embeddings.embeddings.4.weight tensor([[ 0.0447, -0.1471],
        [ 0.1029,  0.2597],
        [ 0.3873, -0.0263],
        [ 0.3542,  0.0394]])
mlp.net.0.linear.weight tensor([[-0.1350, -0.2907, -0.1301,  ..., -0.9102, -0.4812,  0.1362],
        [ 0.3665,  0.3654,  0.5119,  ...,  0.0505,  0.1430, -0.4674],
        [ 0.2419, -0.4269, -0.0879,  ..., -0.1724,  0.1115, -0.3148],
        ...,
        [-0.2355,  0.6972,  0.5165,  ..., -0.3217, -0.1397,  0.0778],
        [-0.0980,  0.5474,  0.2471,  ..., -0.2089, -0.4583,  0.0362],
        [ 0.5795,  0.0808, -0.6337,  ...,  0.4100, -0.2663, -0.1978]])
mlp.net.0.linear.bias tensor([-0.1247, -0.1339,  0.0732, -0.2202, -0.1950, -0.0988,  0.0273,  0.0359,
         0.0679, -0.2012, -0.1665, -0.1545, -0.1788,  0.1504,  0.0087,  0.1707,
        -0.1710, -0.1789, -0.1275, -0.0331,  0.0524,  0.0164,  0.1462,  0.1590,
         0.0773, -0.0763,  0.0947,  0.1807,  0.1868, -0.2522,  0.2070,  0.0471,
         0.1360,  0.2360,  0.0551,  0.1742,  0.0567, -0.0395,  0.1728,  0.1926,
         0.2466,  0.0119, -0.0011,  0.0245,  0.1821, -0.1852, -0.1207, -0.0174,
        -0.0460, -0.0967,  0.1989, -0.1494, -0.0078,  0.1389, -0.0152,  0.1084,
         0.1672, -0.1221,  0.0551,  0.2009,  0.1899, -0.2402, -0.1335, -0.0326])
mlp.net.0.batch_norm.weight tensor([1.0956, 0.9027, 1.0055, 0.9481, 0.9882, 1.0393, 0.9833, 1.0730, 1.0349,
        0.9861, 1.0555, 1.0744, 0.9414, 0.9595, 0.9644, 0.9880, 1.0412, 0.9630,
        1.0295, 1.0406, 1.0245, 1.0606, 0.9934, 1.0474, 0.9972, 1.1131, 1.0830,
        0.8852, 0.9371, 0.9959, 1.0393, 1.0241, 0.9410, 1.0725, 1.0547, 0.9503,
        0.9128, 0.9195, 1.0253, 1.0585, 1.0136, 1.0388, 0.9754, 1.0111, 0.9686,
        0.9783, 0.9535, 0.9576, 1.0180, 0.9392, 0.9903, 0.9582, 1.0499, 0.9838,
        0.9865, 0.9829, 1.0232, 0.9415, 0.9545, 1.0207, 1.0236, 0.9911, 0.9760,
        1.0010])
mlp.net.0.batch_norm.bias tensor([-0.0109,  0.0315, -0.0043, -0.0160,  0.0133, -0.0084, -0.0046,  0.0301,
        -0.0214, -0.0013, -0.0083,  0.0030, -0.0107,  0.0187,  0.0397,  0.0186,
        -0.0056,  0.0083, -0.0081, -0.0035, -0.0364,  0.0068, -0.0300, -0.0685,
        -0.0183,  0.0015, -0.0107, -0.0223, -0.0040, -0.0021, -0.0248, -0.0306,
         0.0024, -0.0266,  0.0372, -0.0233, -0.0048,  0.0185,  0.0474, -0.0568,
         0.0265,  0.0211,  0.0150, -0.0456,  0.0300, -0.0273,  0.0103,  0.0297,
         0.0380,  0.0209,  0.0662, -0.0281,  0.0164,  0.0064, -0.0005,  0.0248,
         0.0289,  0.0081, -0.0112, -0.0003,  0.0022, -0.0198,  0.0144,  0.0167])
mlp.net.0.batch_norm.running_mean tensor([6.6873e-01, 9.4102e-01, 3.7256e-03, 9.2267e-02, 2.0593e-02, 2.5225e-01,
        1.0454e+00, 1.8341e-01, 1.1058e+00, 1.4892e-03, 3.8319e-02, 9.0598e-01,
        9.1481e-01, 1.3945e+00, 7.5098e-01, 4.6053e-01, 1.0859e+00, 1.7906e-03,
        2.2379e-01, 3.0587e-01, 7.6623e-01, 2.7654e-01, 4.8166e-02, 5.5439e-01,
        8.1996e-01, 2.0762e-01, 3.9796e-01, 1.8985e-02, 3.7252e-02, 3.0004e-01,
        9.8873e-02, 5.7458e-01, 3.2506e-04, 6.1343e-01, 5.9778e-02, 1.1301e-02,
        1.2635e-03, 4.4730e-01, 1.8366e-01, 3.8025e-01, 1.1371e-02, 1.4635e-01,
        5.9338e-01, 2.6440e-03, 4.8333e-01, 8.5865e-01, 1.5964e-01, 5.8950e-03,
        1.1900e-01, 2.6403e-01, 1.4459e-02, 5.0776e-01, 6.6358e-01, 6.5963e-01,
        3.2448e-01, 2.1645e+00, 2.1998e-01, 5.4765e-02, 3.7079e-01, 1.2903e+00,
        8.6832e-01, 6.0643e-01, 5.1700e-02, 8.4685e-02])
mlp.net.0.batch_norm.running_var tensor([3.8875e-01, 1.2984e-01, 1.4057e-03, 2.9866e-02, 6.4804e-03, 9.3652e-02,
        2.7095e-01, 3.9463e-02, 2.7647e-01, 6.1559e-04, 1.1834e-02, 1.3937e-01,
        8.4053e-02, 2.6874e-01, 1.4939e-01, 2.2058e-01, 1.2389e-01, 3.4174e-04,
        8.4493e-02, 8.7910e-02, 1.8975e-01, 1.0529e-01, 1.0465e-02, 1.3951e-01,
        1.1911e-01, 1.1512e-01, 9.7561e-02, 4.5357e-03, 1.3894e-02, 1.4901e-01,
        3.9711e-02, 6.5235e-02, 7.0132e-05, 2.4174e-01, 2.5109e-02, 2.5914e-03,
        2.7420e-04, 1.0767e-01, 8.6110e-02, 9.4158e-02, 1.9937e-03, 2.6503e-02,
        7.7527e-02, 6.2412e-04, 1.7455e-01, 2.2962e-01, 4.7819e-02, 1.4976e-03,
        3.1755e-02, 1.2030e-01, 3.2154e-03, 2.1014e-01, 1.9739e-01, 2.7968e-01,
        1.3439e-01, 3.2391e-01, 7.7287e-02, 2.7632e-02, 1.1830e-01, 4.1128e-01,
        1.2894e-01, 1.9289e-01, 1.4834e-02, 4.9584e-02])
mlp.net.0.batch_norm.num_batches_tracked tensor(775)
mlp.net.1.linear.weight tensor([[-0.2076,  0.1547, -0.0256,  ..., -0.0471,  0.1845,  0.0558],
        [-0.1069,  0.2947,  0.1577,  ..., -0.0721, -0.1619, -0.0043],
        [ 0.2043,  0.1519,  0.1068,  ...,  0.1934, -0.0859,  0.2075],
        ...,
        [-0.1307, -0.0265, -0.0313,  ...,  0.0345, -0.0030,  0.1180],
        [-0.0837,  0.2803,  0.1275,  ...,  0.2035,  0.0245,  0.0352],
        [-0.1597, -0.1926, -0.1234,  ...,  0.1034, -0.2546,  0.1191]])
mlp.net.1.linear.bias tensor([ 0.0987, -0.0266, -0.0677, -0.0628, -0.0942, -0.0326, -0.0951, -0.0633,
        -0.0164,  0.1057, -0.0724,  0.0809,  0.0731, -0.0383, -0.0336,  0.0704,
        -0.0101,  0.0641,  0.1462, -0.0414, -0.0350, -0.0977,  0.0899, -0.0118,
         0.1156, -0.0892,  0.0800, -0.0265,  0.1097,  0.0487, -0.0475,  0.0411,
        -0.0611,  0.1241,  0.1342, -0.1210,  0.0609, -0.0081, -0.1242, -0.0368,
         0.0486,  0.1113, -0.0823,  0.0931,  0.0588, -0.0360,  0.0152,  0.0481,
         0.0705,  0.0348,  0.0554, -0.0166, -0.0379, -0.0197,  0.0224, -0.0538,
        -0.0420,  0.0720, -0.1116,  0.0307,  0.1523,  0.0796,  0.0356,  0.1202])
mlp.net.1.batch_norm.weight tensor([0.9046, 1.0000, 0.9758, 0.9156, 0.8990, 0.8983, 0.9502, 0.8879, 0.9212,
        0.8920, 0.9802, 0.8829, 0.9231, 0.8845, 0.9279, 0.9203, 0.9128, 0.9023,
        0.8850, 0.9792, 1.0243, 0.9047, 0.9917, 0.8931, 0.9074, 0.9266, 0.8863,
        0.9448, 0.9176, 0.9359, 0.8642, 0.9287, 0.9019, 0.9287, 0.9456, 0.9662,
        0.9828, 0.9593, 0.9212, 0.9198, 0.9273, 1.0040, 0.9053, 0.9042, 0.9025,
        1.0381, 0.9446, 0.9019, 0.8840, 0.9283, 0.9285, 1.0052, 0.9500, 0.9014,
        1.0018, 0.8944, 1.0306, 0.9404, 0.9077, 0.8849, 0.9682, 0.8700, 0.9142,
        0.9723])
mlp.net.1.batch_norm.bias tensor([ 0.1379, -0.1324, -0.2574, -0.0565, -0.0448, -0.1242, -0.1434, -0.1904,
         0.0352,  0.0564, -0.0719,  0.1535, -0.1076, -0.1612,  0.1066,  0.0436,
         0.0967, -0.0057,  0.0595, -0.1870, -0.2322, -0.0809,  0.1579,  0.0587,
         0.1246,  0.1875,  0.1019, -0.2673, -0.2135, -0.1279,  0.1646, -0.0310,
        -0.2061, -0.1224,  0.0252, -0.2142, -0.2199, -0.2148, -0.2288, -0.2405,
         0.1993, -0.2273, -0.0852,  0.0840,  0.1949, -0.2066, -0.1933,  0.1234,
        -0.1277, -0.0743,  0.1583, -0.2538, -0.1817, -0.0876, -0.2453, -0.0900,
        -0.1780, -0.2091,  0.1884,  0.0315, -0.2715,  0.1174, -0.1549, -0.2063])
mlp.net.1.batch_norm.running_mean tensor([0.8980, 0.8981, 1.1031, 0.7430, 0.6090, 0.7527, 0.7522, 0.7508, 0.9645,
        0.9223, 0.7419, 0.6057, 0.8969, 0.9351, 0.8334, 1.0030, 0.8407, 0.8941,
        0.7374, 1.0010, 1.4038, 0.7198, 0.8479, 0.8003, 0.7207, 0.7380, 0.7723,
        1.0036, 0.9905, 0.9926, 0.8473, 0.8784, 0.8758, 0.8481, 0.9573, 1.0118,
        0.9200, 0.8798, 0.7007, 0.6750, 0.6621, 1.2619, 0.7626, 1.0336, 0.7823,
        0.9393, 0.8712, 0.7714, 0.9022, 0.8167, 0.8121, 0.8209, 0.6475, 0.7481,
        0.8384, 0.9017, 1.0336, 0.9044, 0.5720, 0.9497, 0.8568, 1.1484, 0.8173,
        0.9110])
mlp.net.1.batch_norm.running_var tensor([1.7185, 2.3113, 2.3674, 1.1745, 0.8502, 1.3218, 2.1111, 1.0755, 1.8675,
        1.8196, 1.4567, 0.9716, 2.0693, 2.3771, 1.6565, 2.2962, 1.5657, 1.8760,
        1.5311, 2.3555, 3.3879, 1.6670, 1.5302, 1.9173, 1.0769, 1.3418, 1.3877,
        3.0306, 2.4539, 2.4198, 1.8411, 2.2235, 1.7617, 1.2878, 1.5804, 2.1109,
        1.6613, 1.8221, 1.3494, 1.5927, 1.1883, 2.9716, 1.5647, 2.2959, 1.3463,
        1.7651, 1.9143, 1.7964, 1.7939, 1.5682, 1.3139, 1.3980, 0.9641, 1.3899,
        1.3441, 1.6902, 2.1152, 1.7495, 0.8863, 2.5837, 1.2144, 2.6438, 1.5830,
        1.7012])
mlp.net.1.batch_norm.num_batches_tracked tensor(775)
mlp.net.2.weight tensor([[ 0.0373,  0.0241, -0.0743,  ...,  0.0453,  0.0923, -0.0130],
        [ 0.0567, -0.1914, -0.1415,  ...,  0.0095, -0.0294, -0.0801],
        [ 0.0534, -0.1260, -0.1029,  ...,  0.0768, -0.0677, -0.1495],
        ...,
        [-0.1119,  0.0323,  0.0491,  ..., -0.0411,  0.0576,  0.0876],
        [-0.0892,  0.0635,  0.1336,  ..., -0.0208,  0.0222,  0.0716],
        [-0.0280,  0.0338, -0.0375,  ...,  0.0065,  0.0883,  0.0355]])
mlp.net.2.bias tensor([-0.4102,  0.1912,  0.3017,  0.1132,  0.2335,  0.2240,  0.3219,  0.2711,
         0.1411,  0.1020,  0.1843,  0.0844,  0.3032,  0.2884,  0.2607,  0.2287,
         0.1497, -0.0082,  0.0140,  0.1534, -0.0420,  0.1964,  0.1479,  0.0300,
         0.0281,  0.0007, -0.1457,  0.0031,  0.1113, -0.0444,  0.0015,  0.1918,
        -0.0460,  0.0842,  0.1316,  0.1155,  0.0237, -0.0396, -0.0781, -0.0080,
        -0.1817, -0.0510, -0.0796,  0.0460, -0.0467, -0.0999, -0.0430, -0.2448,
        -0.1607, -0.0421, -0.2654, -0.0793, -0.4086, -0.1959, -0.1501, -0.0946,
        -0.1189, -0.1672, -0.3183, -0.0768, -0.2002, -0.4671, -0.3321, -0.1171,
        -0.3700, -0.1670, -0.4292, -0.1335, -0.4955, -0.4086, -0.2735, -0.1996,
        -0.2717, -0.4299, -0.1845, -0.3181, -0.4728, -0.4192, -0.1452, -0.1563,
        -0.2511, -0.3729, -0.4110, -0.2286, -0.3393, -0.0747, -0.3275, -0.2728,
        -0.2703, -0.3664, -0.3224, -0.3496, -0.3210, -0.2134, -0.2972, -0.3619,
        -0.4288, -0.3440, -0.2026, -0.2421, -0.3773, -0.3990, -0.1226, -0.3861,
        -0.3045, -0.3133, -0.2422, -0.1699, -0.3836, -0.4007, -0.3849, -0.2870,
        -0.4411, -0.4784, -0.4636, -0.1150, -0.3293, -0.3517, -0.4338, -0.4050,
        -0.3519, -0.4609, -0.4478, -0.3936, -0.3683, -0.1136, -0.3832, -0.3902,
        -0.2977, -0.1522, -0.2094, -0.3963, -0.3892, -0.4765, -0.3481, -0.2876,
        -0.3390, -0.4202, -0.3258, -0.3600, -0.4022, -0.4684, -0.4107, -0.3406,
        -0.3626, -0.3250, -0.3735, -0.4050, -0.4280, -0.4555, -0.3208, -0.3017,
        -0.4656, -0.3358, -0.0986, -0.2855, -0.3816, -0.2698, -0.3868, -0.3171,
        -0.2775, -0.3139, -0.2290, -0.2594, -0.4137, -0.4044, -0.4779, -0.1466,
        -0.4056, -0.4025, -0.3272, -0.2688, -0.3956, -0.3602, -0.3369, -0.2485,
        -0.4393, -0.3166, -0.4008, -0.3436, -0.2786, -0.3508, -0.2688, -0.4030,
        -0.3146, -0.2800, -0.4261, -0.4028, -0.3822, -0.4040, -0.4370, -0.2859,
        -0.2802, -0.2809, -0.3821, -0.4090, -0.3452, -0.4471, -0.4419, -0.1736])
