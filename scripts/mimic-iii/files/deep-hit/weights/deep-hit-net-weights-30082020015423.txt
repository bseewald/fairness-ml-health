Weights: 
embeddings.embeddings.0.weight tensor([[ 0.0046,  0.0061],
        [-0.0072,  0.0024],
        [-0.0105, -0.0172],
        [ 0.0399,  0.0358]])
embeddings.embeddings.1.weight tensor([[-0.0022, -0.0136],
        [-0.0044,  0.0194],
        [-0.0062, -0.0119],
        [ 0.0069, -0.0150],
        [ 0.0182, -0.0172]])
embeddings.embeddings.2.weight tensor([[ 0.0137,  0.0088, -0.0090],
        [ 0.0239,  0.0080,  0.0286],
        [ 0.0157,  0.0076,  0.0275],
        [ 0.0033,  0.0120, -0.0006],
        [ 0.0045, -0.0023,  0.0033],
        [ 0.0108, -0.0003,  0.0045]])
embeddings.embeddings.3.weight tensor([[-0.0180,  0.0028],
        [-0.0224, -0.0409],
        [-0.0131,  0.0112],
        [ 0.0471,  0.0287]])
embeddings.embeddings.4.weight tensor([[ 0.0115, -0.0106],
        [ 0.0231,  0.0329],
        [-0.0197, -0.0092],
        [ 0.0114,  0.0007]])
mlp.net.0.linear.weight tensor([[ 0.0007,  0.0026,  0.0005,  ..., -0.0381,  0.0171,  0.0228],
        [ 0.0020, -0.0051,  0.0192,  ..., -0.0253,  0.0237,  0.0155],
        [-0.0006, -0.0016, -0.0018,  ...,  0.0549, -0.0207, -0.0317],
        ...,
        [ 0.0031,  0.0053,  0.0032,  ...,  0.0179,  0.0176,  0.0026],
        [ 0.0159, -0.0098, -0.0027,  ...,  0.0301, -0.0144, -0.0098],
        [-0.0153,  0.0002,  0.0100,  ..., -0.0213,  0.0080, -0.0027]])
mlp.net.0.linear.bias tensor([ 6.2094e-03,  1.9008e-03, -1.5660e-03,  4.3163e-03,  1.7610e-03,
        -2.9330e-03, -4.8079e-03, -3.1078e-03, -6.7634e-03, -9.3135e-04,
         3.4829e-03, -7.6777e-03,  4.4363e-03,  7.4862e-03,  1.8355e-03,
        -3.5383e-03,  1.0453e-03, -8.4470e-03,  6.7709e-03,  1.1702e-03,
         5.2300e-03,  3.1965e-03, -1.0085e-02,  1.3801e-03,  4.3646e-03,
         5.9707e-04,  1.6113e-03,  2.0128e-03, -3.5301e-03, -3.3936e-03,
        -2.1424e-03,  3.9481e-03, -6.2542e-04, -2.4413e-03,  1.7351e-03,
        -4.3067e-03,  8.1998e-03, -4.0578e-03,  4.6900e-03,  4.9520e-03,
         6.0448e-03,  4.4623e-03, -2.0921e-03,  6.9242e-05,  3.6028e-03,
        -2.9319e-03, -5.4745e-03, -8.8171e-03, -5.3750e-03,  4.1897e-03,
        -1.5467e-03, -1.0301e-03,  7.9993e-03, -2.5326e-03, -1.7685e-03,
        -3.4690e-03,  1.6153e-05,  5.2771e-03, -3.2602e-03, -5.6553e-03,
         4.4301e-03, -1.2566e-03,  3.6918e-04,  2.7386e-03])
mlp.net.0.batch_norm.weight tensor([0.0528, 0.0178, 0.0496, 0.0307, 0.0333, 0.0287, 0.0268, 0.0135, 0.0533,
        0.0185, 0.0200, 0.0365, 0.0319, 0.0342, 0.0355, 0.0325, 0.0282, 0.0338,
        0.0337, 0.0248, 0.0251, 0.0370, 0.0278, 0.0589, 0.0205, 0.0204, 0.0275,
        0.0393, 0.0165, 0.0501, 0.0486, 0.0255, 0.0367, 0.0289, 0.0274, 0.0499,
        0.0232, 0.0531, 0.0181, 0.0245, 0.0288, 0.0266, 0.0370, 0.0221, 0.0294,
        0.0341, 0.0606, 0.0522, 0.0364, 0.0490, 0.0205, 0.0431, 0.0279, 0.0272,
        0.0345, 0.0339, 0.0343, 0.0297, 0.0566, 0.0314, 0.0480, 0.0157, 0.0245,
        0.0186])
mlp.net.0.batch_norm.bias tensor([ 3.4878e-03,  3.6752e-03, -2.9262e-03, -7.7046e-04,  4.4872e-03,
        -1.5223e-04,  4.4655e-03, -6.1114e-03, -3.0268e-03,  5.4281e-03,
         3.4726e-04, -7.4806e-03, -5.7472e-03,  1.0378e-02,  5.7725e-04,
        -1.5000e-03, -3.2963e-03,  4.2328e-04, -4.9127e-03,  4.7262e-03,
        -2.3005e-03, -7.2705e-04, -4.4774e-03,  2.9239e-03, -2.4827e-03,
         4.3416e-04, -3.4102e-03,  1.3507e-03,  3.4693e-03, -2.6753e-03,
         4.8849e-04, -1.9745e-03,  4.8910e-03, -5.6990e-03,  3.1313e-03,
        -5.6629e-03,  1.9525e-03,  3.6196e-03,  4.6589e-03, -8.9091e-04,
         2.1726e-04,  2.3579e-04, -7.2032e-04,  6.5581e-04, -1.0590e-03,
         2.9360e-03, -4.1542e-03,  2.8924e-04, -2.5541e-04,  1.6057e-03,
         1.5227e-05,  2.3205e-03, -9.0778e-04, -1.9745e-03, -5.7947e-04,
        -2.6095e-03, -4.0920e-04,  4.1329e-03, -3.3852e-03,  1.8590e-03,
         1.5760e-03, -5.4915e-03, -4.8051e-03,  1.3180e-03])
mlp.net.0.batch_norm.running_mean tensor([5.9073e-03, 3.0401e-02, 2.4882e-03, 3.7341e-05, 8.5036e-06, 7.9569e-05,
        4.7391e-04, 4.7965e-03, 1.4088e-03, 6.5039e-03, 3.7069e-02, 2.2545e-04,
        1.1169e-04, 3.9244e-05, 1.0991e-03, 1.6917e-03, 2.6657e-04, 3.3369e-03,
        1.4758e-02, 6.7372e-04, 9.5423e-03, 1.5946e-04, 1.5003e-02, 3.8845e-03,
        4.7182e-02, 9.1603e-03, 2.8639e-02, 2.2445e-03, 3.0818e-03, 1.8732e-03,
        1.9096e-03, 2.0285e-03, 4.9054e-03, 6.4875e-06, 6.7494e-04, 1.8117e-03,
        2.8261e-02, 2.8671e-03, 7.7508e-04, 1.9365e-02, 9.1973e-03, 4.6868e-05,
        4.8519e-03, 1.8648e-03, 2.5314e-03, 6.9236e-04, 1.4273e-03, 1.5286e-03,
        2.0851e-03, 1.8810e-03, 5.0939e-02, 1.1854e-03, 3.3701e-04, 1.9917e-03,
        7.3142e-04, 1.7690e-04, 3.7613e-05, 4.4026e-04, 1.8926e-03, 6.9563e-05,
        5.7182e-03, 5.1006e-03, 1.2847e-03, 7.9759e-04])
mlp.net.0.batch_norm.running_var tensor([4.7695e-06, 1.5400e-04, 5.3854e-06, 2.0250e-07, 6.2701e-08, 4.8816e-07,
        4.3165e-06, 4.0824e-05, 3.2140e-06, 4.4330e-05, 1.3453e-04, 1.1533e-06,
        7.6437e-07, 2.1324e-07, 3.5905e-06, 9.8750e-06, 1.2091e-06, 6.3807e-06,
        1.2315e-05, 6.9150e-06, 2.2345e-05, 1.1000e-06, 3.5155e-05, 4.3630e-06,
        1.9876e-04, 8.0942e-05, 1.1689e-04, 1.0386e-05, 2.1846e-05, 4.7463e-06,
        3.6900e-06, 1.8291e-05, 1.5522e-05, 2.1790e-08, 3.4523e-06, 3.7458e-06,
        6.6047e-05, 4.7931e-06, 1.9430e-06, 1.1576e-05, 3.4739e-05, 1.5068e-07,
        7.9483e-06, 1.0129e-05, 5.1470e-06, 4.2528e-06, 3.4370e-06, 3.7176e-06,
        8.7991e-06, 6.4234e-06, 1.5269e-04, 3.3740e-06, 4.0316e-06, 1.2916e-05,
        4.1110e-06, 1.3097e-06, 2.3639e-07, 4.1415e-06, 3.6064e-06, 5.3956e-07,
        1.0549e-05, 9.0837e-06, 6.7872e-06, 4.6105e-06])
mlp.net.0.batch_norm.num_batches_tracked tensor(1672)
mlp.net.1.linear.weight tensor([[-2.1878e-02,  7.0799e-04,  1.8328e-02,  ..., -2.4879e-03,
         -2.6484e-04, -4.2761e-03],
        [-2.0007e-02, -2.8621e-03,  1.7111e-02,  ...,  6.6215e-03,
          3.0811e-03, -8.3626e-03],
        [ 2.1734e-02,  1.8119e-04, -1.7543e-02,  ..., -9.5291e-03,
         -2.4743e-03,  2.8322e-03],
        ...,
        [-1.3850e-02, -4.2720e-03,  1.4939e-02,  ...,  5.9398e-05,
          2.8862e-03,  1.0319e-03],
        [-2.0906e-02, -7.5636e-03,  1.5178e-02,  ..., -1.3783e-03,
          1.2436e-02, -4.0519e-03],
        [-2.3497e-02, -7.9277e-03,  1.5098e-02,  ..., -1.6293e-03,
          6.7760e-04,  1.1728e-03]])
mlp.net.1.linear.bias tensor([0.0089, 0.0090, 0.0158, 0.0156, 0.0151, 0.0146, 0.0160, 0.0150, 0.0151,
        0.0091, 0.0156, 0.0154, 0.0089, 0.0094, 0.0158, 0.0082, 0.0147, 0.0092,
        0.0097, 0.0092, 0.0092, 0.0147, 0.0097, 0.0090, 0.0163, 0.0151, 0.0097,
        0.0145, 0.0080, 0.0080, 0.0080, 0.0156, 0.0150, 0.0150, 0.0153, 0.0092,
        0.0100, 0.0089, 0.0155, 0.0084, 0.0083, 0.0084, 0.0085, 0.0152, 0.0087,
        0.0155, 0.0082, 0.0149, 0.0152, 0.0148, 0.0088, 0.0085, 0.0152, 0.0144,
        0.0157, 0.0099, 0.0149, 0.0081, 0.0092, 0.0145, 0.0153, 0.0085, 0.0097,
        0.0102])
mlp.net.1.batch_norm.weight tensor([0.0668, 0.0668, 0.0682, 0.0696, 0.0693, 0.0677, 0.0704, 0.0660, 0.0688,
        0.0672, 0.0678, 0.0689, 0.0676, 0.0684, 0.0698, 0.0677, 0.0679, 0.0681,
        0.0676, 0.0672, 0.0685, 0.0683, 0.0672, 0.0676, 0.0686, 0.0676, 0.0685,
        0.0662, 0.0682, 0.0679, 0.0689, 0.0684, 0.0676, 0.0696, 0.0697, 0.0661,
        0.0686, 0.0676, 0.0686, 0.0674, 0.0670, 0.0669, 0.0685, 0.0697, 0.0681,
        0.0692, 0.0670, 0.0687, 0.0692, 0.0675, 0.0675, 0.0682, 0.0683, 0.0685,
        0.0696, 0.0679, 0.0684, 0.0673, 0.0688, 0.0690, 0.0678, 0.0684, 0.0654,
        0.0680])
mlp.net.1.batch_norm.bias tensor([ 0.0420,  0.0413, -0.0420, -0.0418, -0.0417, -0.0421, -0.0415, -0.0419,
        -0.0404,  0.0405, -0.0422, -0.0416,  0.0415,  0.0403, -0.0416,  0.0414,
        -0.0407,  0.0421,  0.0424,  0.0420,  0.0420, -0.0426,  0.0421,  0.0412,
        -0.0141, -0.0414,  0.0418, -0.0417,  0.0409,  0.0411,  0.0385, -0.0406,
        -0.0414, -0.0420, -0.0419,  0.0406,  0.0426,  0.0418, -0.0414,  0.0410,
         0.0415,  0.0418,  0.0417, -0.0412,  0.0420, -0.0408,  0.0415, -0.0418,
        -0.0417, -0.0421,  0.0411,  0.0416, -0.0423, -0.0419, -0.0412,  0.0418,
        -0.0411,  0.0406,  0.0416, -0.0409, -0.0418,  0.0411,  0.0422,  0.0428])
mlp.net.1.batch_norm.running_mean tensor([0.0081, 0.0082, 0.0171, 0.0169, 0.0166, 0.0159, 0.0173, 0.0162, 0.0163,
        0.0084, 0.0168, 0.0167, 0.0082, 0.0086, 0.0171, 0.0077, 0.0160, 0.0084,
        0.0089, 0.0084, 0.0084, 0.0159, 0.0088, 0.0081, 0.0177, 0.0163, 0.0089,
        0.0158, 0.0075, 0.0075, 0.0074, 0.0169, 0.0162, 0.0165, 0.0167, 0.0087,
        0.0091, 0.0083, 0.0170, 0.0079, 0.0077, 0.0077, 0.0078, 0.0166, 0.0080,
        0.0167, 0.0076, 0.0162, 0.0166, 0.0160, 0.0081, 0.0080, 0.0163, 0.0157,
        0.0171, 0.0094, 0.0163, 0.0075, 0.0084, 0.0158, 0.0168, 0.0078, 0.0089,
        0.0094])
mlp.net.1.batch_norm.running_var tensor([5.6448e-05, 5.6795e-05, 5.4648e-05, 5.5199e-05, 5.3233e-05, 5.1331e-05,
        5.5106e-05, 5.1562e-05, 5.2356e-05, 5.7732e-05, 5.4466e-05, 5.4587e-05,
        5.5775e-05, 5.8079e-05, 5.4309e-05, 5.5899e-05, 5.1998e-05, 5.4560e-05,
        3.6193e-05, 5.2357e-05, 5.5542e-05, 5.3555e-05, 4.7700e-05, 5.6959e-05,
        5.4826e-05, 5.0335e-05, 5.1292e-05, 5.0687e-05, 5.5355e-05, 5.6375e-05,
        5.6193e-05, 5.4662e-05, 5.1836e-05, 5.3640e-05, 5.2737e-05, 3.5251e-05,
        5.3254e-05, 5.8758e-05, 5.6438e-05, 5.6869e-05, 5.7221e-05, 5.5296e-05,
        5.7594e-05, 5.2943e-05, 5.7213e-05, 5.2060e-05, 5.7058e-05, 5.1266e-05,
        5.4244e-05, 5.0787e-05, 5.7983e-05, 5.6826e-05, 5.2629e-05, 5.0164e-05,
        5.5287e-05, 4.3811e-05, 5.1353e-05, 5.7789e-05, 5.8182e-05, 4.9435e-05,
        5.3738e-05, 5.6691e-05, 5.5191e-05, 4.6927e-05])
mlp.net.1.batch_norm.num_batches_tracked tensor(1672)
mlp.net.2.weight tensor([[ 0.0309,  0.0280, -0.0285,  ...,  0.0346,  0.0134,  0.0031],
        [ 0.0330,  0.0357, -0.0325,  ...,  0.0364,  0.0335,  0.0226],
        [ 0.0354,  0.0342, -0.0371,  ...,  0.0370,  0.0273,  0.0178],
        ...,
        [-0.0333, -0.0387,  0.0348,  ..., -0.0397, -0.0367, -0.0393],
        [-0.0382, -0.0379,  0.0354,  ..., -0.0391, -0.0397, -0.0358],
        [-0.0332, -0.0223,  0.0243,  ..., -0.0304, -0.0253, -0.0081]])
mlp.net.2.bias tensor([-0.0353,  0.0345,  0.0363,  0.0350,  0.0343,  0.0333,  0.0330,  0.0315,
         0.0330,  0.0293,  0.0352,  0.0323,  0.0295,  0.0348,  0.0268,  0.0260,
         0.0237,  0.0180,  0.0151,  0.0215,  0.0248,  0.0273,  0.0116,  0.0184,
         0.0146, -0.0204,  0.0004,  0.0111,  0.0017,  0.0148, -0.0003,  0.0147,
        -0.0252, -0.0071,  0.0175,  0.0111, -0.0137, -0.0107, -0.0254, -0.0256,
        -0.0236, -0.0019, -0.0137, -0.0130, -0.0113, -0.0269, -0.0067, -0.0312,
        -0.0368, -0.0232, -0.0334, -0.0048, -0.0364, -0.0148, -0.0224, -0.0223,
        -0.0285, -0.0334, -0.0359, -0.0364, -0.0343, -0.0362, -0.0211, -0.0294,
        -0.0409, -0.0261, -0.0340, -0.0312, -0.0295, -0.0375, -0.0398, -0.0350,
        -0.0360, -0.0352, -0.0235, -0.0280, -0.0370, -0.0404, -0.0338, -0.0320,
        -0.0372, -0.0392, -0.0367, -0.0308, -0.0351, -0.0261, -0.0340, -0.0394,
        -0.0390, -0.0397, -0.0371, -0.0351, -0.0394, -0.0335, -0.0380, -0.0360,
        -0.0363, -0.0381, -0.0309, -0.0397, -0.0282, -0.0368, -0.0285, -0.0350,
        -0.0372, -0.0398, -0.0320, -0.0303, -0.0387, -0.0385, -0.0363, -0.0352,
        -0.0388, -0.0398, -0.0401, -0.0319, -0.0373, -0.0360, -0.0352, -0.0368,
        -0.0390, -0.0355, -0.0394, -0.0406, -0.0401, -0.0326, -0.0357, -0.0395,
        -0.0387, -0.0368, -0.0301, -0.0396, -0.0385, -0.0345, -0.0403, -0.0385,
        -0.0393, -0.0400, -0.0391, -0.0367, -0.0401, -0.0409, -0.0348, -0.0383,
        -0.0339, -0.0377, -0.0398, -0.0369, -0.0370, -0.0339, -0.0343, -0.0382,
        -0.0373, -0.0367, -0.0341, -0.0356, -0.0404, -0.0368, -0.0370, -0.0399,
        -0.0317, -0.0376, -0.0404, -0.0375, -0.0374, -0.0361, -0.0368, -0.0306,
        -0.0367, -0.0407, -0.0386, -0.0395, -0.0402, -0.0345, -0.0357, -0.0370,
        -0.0368, -0.0352, -0.0362, -0.0362, -0.0349, -0.0340, -0.0343, -0.0368,
        -0.0391, -0.0403, -0.0361, -0.0395, -0.0405, -0.0343, -0.0345, -0.0346,
        -0.0365, -0.0360, -0.0396, -0.0378, -0.0364, -0.0363, -0.0386, -0.0330])
