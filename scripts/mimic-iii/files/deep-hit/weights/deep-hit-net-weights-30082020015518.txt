Weights: 
embeddings.embeddings.0.weight tensor([[ 0.6105,  0.2936],
        [ 0.2131,  0.3433],
        [ 0.0221,  0.0602],
        [-0.1945,  0.6898]])
embeddings.embeddings.1.weight tensor([[ 0.4423, -0.0394],
        [-0.5195, -0.4581],
        [ 0.5240,  0.2942],
        [ 0.0036,  0.0949],
        [ 0.4030, -0.0400]])
embeddings.embeddings.2.weight tensor([[ 0.0473,  0.2908,  0.2342],
        [-0.2127, -0.2260, -0.1976],
        [-0.1394, -0.1257,  0.1303],
        [ 0.4106, -0.2125, -0.1471],
        [ 0.3829,  0.4018,  0.1245],
        [ 0.0146, -0.3122, -0.3051]])
embeddings.embeddings.3.weight tensor([[ 0.1547, -0.2270],
        [-0.3490,  0.8164],
        [ 0.2624,  0.4814],
        [-0.5228, -0.3375]])
embeddings.embeddings.4.weight tensor([[ 0.0192, -0.2709],
        [ 0.1873,  0.1504],
        [-0.7742, -0.3657],
        [-0.3614, -0.6109]])
mlp.net.0.linear.weight tensor([[-0.0597, -0.9549,  0.4041,  ..., -0.3777,  0.4303,  0.2847],
        [-0.0012,  0.1831, -0.1640,  ...,  0.1300, -0.4218,  0.7882],
        [-0.0433, -0.7773,  0.7050,  ...,  0.1186,  0.1371, -0.2203],
        ...,
        [-0.0617,  0.1325, -0.0107,  ..., -0.6121, -0.3629,  0.3618],
        [-0.0011,  0.1485, -0.2548,  ..., -0.2047, -0.3712,  0.1456],
        [-0.2661, -0.1991,  0.7069,  ...,  0.4605, -0.1216, -0.5582]])
mlp.net.0.linear.bias tensor([-0.1105, -0.1991, -0.0421, -0.0475, -0.0856,  0.1863,  0.0208, -0.0415,
        -0.1371,  0.0756,  0.0932, -0.0605,  0.0890, -0.0329,  0.0985, -0.1407,
         0.0899,  0.1410, -0.2272, -0.0675, -0.0653, -0.1803,  0.2057,  0.2164,
        -0.0813,  0.0530,  0.0367,  0.0399, -0.1463,  0.0247, -0.0682, -0.0826,
        -0.1363,  0.0890, -0.0304, -0.0849, -0.1621,  0.1950,  0.2483,  0.1883,
        -0.0114, -0.1740, -0.0988,  0.2077,  0.0788, -0.0447,  0.0590, -0.1313,
         0.2099,  0.0020, -0.0937, -0.0487,  0.0990,  0.0462, -0.2120,  0.0896,
        -0.1539, -0.0384, -0.0669, -0.0897, -0.2700,  0.1729,  0.1081,  0.0243])
mlp.net.0.batch_norm.weight tensor([0.9618, 0.9472, 0.8433, 0.9481, 0.7981, 0.8905, 0.9566, 0.9132, 0.9769,
        0.8928, 0.9623, 0.9756, 0.9427, 0.9356, 0.9412, 0.8249, 0.9545, 0.9538,
        0.8949, 1.0222, 0.9671, 0.9464, 0.9152, 0.9310, 0.8699, 1.0506, 0.9302,
        1.0580, 0.9390, 0.8288, 0.9528, 1.1192, 0.9382, 0.9822, 0.9207, 0.8747,
        0.8984, 0.8912, 1.0091, 0.8786, 0.8905, 0.8878, 0.9872, 0.9151, 1.0489,
        0.8457, 0.9267, 0.9017, 0.9407, 0.8890, 0.8498, 1.0192, 1.0448, 1.0217,
        0.9562, 0.9365, 0.8985, 0.9205, 0.8455, 1.0084, 0.9968, 1.0125, 0.9589,
        1.0474])
mlp.net.0.batch_norm.bias tensor([-0.0144, -0.0413,  0.0918, -0.0174, -0.0009, -0.0497,  0.1250,  0.0536,
        -0.0069,  0.0726,  0.0400, -0.0371, -0.1147,  0.0608,  0.0666,  0.0451,
        -0.1134, -0.0227, -0.0058,  0.0523,  0.0198,  0.0433,  0.0619, -0.0917,
         0.0604, -0.0260,  0.0537, -0.0824, -0.0518, -0.0394, -0.1475, -0.0619,
         0.0805,  0.0219,  0.0145, -0.0015,  0.0110, -0.0282,  0.0447,  0.0015,
        -0.0381,  0.0806, -0.0190,  0.0227, -0.0650,  0.1325,  0.0064,  0.0600,
         0.0866,  0.0125,  0.0619, -0.0775, -0.0361,  0.0946, -0.1226,  0.0471,
        -0.0408,  0.0415, -0.0400,  0.0151, -0.1595,  0.0920, -0.0015, -0.1445])
mlp.net.0.batch_norm.running_mean tensor([1.3004e-02, 2.0616e-01, 5.7248e-01, 5.7199e-01, 5.0379e-01, 4.4608e-01,
        1.5336e+00, 2.8952e-01, 1.6202e-01, 2.9540e-01, 9.3011e-01, 2.0000e-02,
        3.0559e-01, 4.0543e-01, 4.2016e-01, 1.5826e-02, 5.6643e-04, 4.9731e-01,
        1.3786e-01, 5.1148e-01, 1.4102e-01, 4.4792e-02, 3.5582e-01, 1.8658e-02,
        1.4841e-01, 9.3845e-01, 6.4474e-01, 6.5451e-01, 6.5842e-02, 2.3702e-01,
        7.8138e-02, 6.4447e-01, 2.1392e-01, 5.7384e-01, 2.7474e-01, 3.9101e-01,
        6.3089e-01, 9.2059e-01, 6.7762e-01, 5.3040e-01, 3.7973e-02, 5.6238e-03,
        6.4536e-03, 1.0178e+00, 6.4405e-01, 4.3756e-01, 5.4489e-01, 2.3948e-02,
        1.2074e+00, 4.7121e-02, 1.0004e+00, 2.6413e-02, 3.0916e-01, 7.1663e-01,
        3.4916e-03, 4.0171e-01, 6.9122e-04, 9.9106e-03, 4.7781e-01, 5.4296e-02,
        5.1689e-01, 2.3943e-01, 5.4620e-01, 8.7888e-01])
mlp.net.0.batch_norm.running_var tensor([4.2832e-03, 5.2350e-02, 1.7927e-01, 1.1617e-01, 1.9721e-01, 1.7587e-01,
        1.6582e-01, 1.1160e-01, 7.5179e-02, 8.7627e-02, 1.0644e-01, 4.0841e-03,
        1.0372e-01, 1.3359e-01, 1.1588e-01, 3.8404e-03, 3.4527e-04, 8.4839e-02,
        4.9316e-02, 1.3215e-01, 5.0773e-02, 1.8701e-02, 1.2579e-01, 4.7755e-03,
        8.5855e-02, 1.2659e-01, 1.3973e-01, 1.0482e-01, 2.2906e-02, 8.1991e-02,
        2.0222e-02, 1.3190e-01, 3.7558e-02, 8.0480e-02, 8.4692e-02, 9.0906e-02,
        1.1112e-01, 1.0083e-01, 1.1025e-01, 7.2129e-02, 1.4356e-02, 1.3923e-03,
        1.5313e-03, 1.8636e-01, 7.0294e-02, 1.0252e-01, 1.5767e-01, 8.7139e-03,
        2.3437e-01, 1.1025e-02, 1.0926e-01, 7.4340e-03, 1.0815e-01, 1.0966e-01,
        7.0727e-04, 9.0459e-02, 1.6120e-04, 3.8835e-03, 1.3070e-01, 1.6517e-02,
        1.6299e-01, 8.2732e-02, 1.1558e-01, 2.3184e-01])
mlp.net.0.batch_norm.num_batches_tracked tensor(93)
mlp.net.1.linear.weight tensor([[-0.2418, -0.0939,  0.2531,  ..., -0.0540,  0.2591, -0.2605],
        [-0.1400,  0.0326,  0.1948,  ...,  0.0989,  0.1442, -0.1558],
        [-0.1898, -0.0571,  0.0038,  ...,  0.0394, -0.1678, -0.5731],
        ...,
        [ 0.0550,  0.0795,  0.0321,  ...,  0.1123, -0.3345,  0.1471],
        [ 0.2000, -0.0973, -0.0508,  ...,  0.0875,  0.3389, -0.1219],
        [ 0.0859, -0.1292, -0.2745,  ..., -0.2522,  0.1148,  0.0667]])
mlp.net.1.linear.bias tensor([ 0.0176, -0.1657,  0.0890, -0.0361,  0.0705,  0.0116, -0.1298,  0.0825,
         0.0037,  0.1333,  0.0520,  0.1328, -0.0230,  0.0665,  0.1740,  0.1554,
        -0.0101,  0.2196, -0.0566,  0.0259,  0.0760, -0.0555,  0.0709,  0.1125,
        -0.1230, -0.1560,  0.1066,  0.0497, -0.0750, -0.0459, -0.0205, -0.0332,
        -0.0664,  0.1061, -0.1262,  0.2109,  0.0966,  0.1261,  0.0437, -0.0263,
        -0.0098, -0.0823,  0.0722, -0.0241,  0.1204, -0.1073, -0.0299,  0.0972,
        -0.2091,  0.0548,  0.0351, -0.0437, -0.0126,  0.1079,  0.0293,  0.0455,
         0.1010, -0.0026, -0.1028, -0.0241, -0.0111,  0.0048,  0.1659, -0.0164])
mlp.net.1.batch_norm.weight tensor([0.8489, 0.8255, 0.9533, 0.9043, 0.9483, 0.8644, 0.8788, 0.8224, 0.9320,
        0.8921, 0.8666, 0.9691, 0.8665, 0.8072, 0.7901, 0.8504, 0.9527, 0.8955,
        0.7853, 0.8953, 0.8096, 0.9293, 0.9351, 0.8375, 0.9785, 1.0019, 0.9807,
        0.9242, 1.0186, 0.8757, 0.8538, 0.9272, 0.9714, 0.9720, 0.8560, 0.8200,
        0.8858, 0.9617, 0.8257, 0.9525, 0.8374, 0.7762, 0.8287, 0.7893, 0.8007,
        0.9701, 0.9599, 0.7460, 1.0145, 0.7997, 0.8717, 0.9953, 0.9101, 0.7809,
        0.9256, 0.8174, 0.9299, 0.9132, 0.8261, 0.9229, 0.9386, 0.8491, 0.8532,
        0.9315])
mlp.net.1.batch_norm.bias tensor([ 0.0839, -0.0029,  0.1643, -0.1768, -0.1361,  0.0794,  0.1588,  0.0433,
        -0.0515, -0.0309, -0.1619,  0.1540,  0.1321, -0.1112,  0.1619,  0.1739,
        -0.1741,  0.1116,  0.0147,  0.1245, -0.1092, -0.1320,  0.1644,  0.1368,
        -0.0694, -0.2392, -0.0864, -0.1814, -0.1582,  0.1198,  0.0984,  0.0988,
        -0.1931, -0.0997, -0.0364,  0.1986, -0.2026,  0.0976,  0.0546, -0.1217,
         0.1761, -0.0613, -0.0544,  0.2125, -0.0208, -0.0915,  0.0814, -0.0519,
        -0.2735, -0.0433,  0.1818, -0.1005,  0.1816,  0.0408, -0.0845, -0.0997,
         0.1247, -0.0875,  0.0096, -0.0900, -0.0173, -0.0361,  0.0829, -0.1390])
mlp.net.1.batch_norm.running_mean tensor([0.8692, 0.4552, 0.9959, 0.8152, 0.5260, 0.6891, 0.3382, 0.4670, 0.4586,
        0.8139, 0.7038, 1.1919, 0.8176, 0.6955, 0.9463, 0.7516, 0.6986, 0.8443,
        0.7124, 0.9539, 0.5243, 0.6277, 0.9883, 0.6939, 0.5536, 0.5345, 0.7206,
        0.8715, 0.6433, 0.7366, 0.6802, 0.8399, 0.4974, 0.8009, 0.3503, 0.9140,
        0.6609, 1.1758, 0.7996, 0.7006, 0.5693, 0.6902, 0.6661, 0.5345, 0.5712,
        0.5387, 0.8637, 0.5491, 0.3881, 0.7611, 0.6672, 0.8159, 0.4378, 0.6692,
        0.7080, 0.8290, 0.9837, 0.7478, 0.6863, 0.7522, 0.5934, 0.7257, 0.9523,
        0.8636])
mlp.net.1.batch_norm.running_var tensor([2.0143, 0.7251, 1.7008, 1.2476, 0.6406, 0.8395, 0.3312, 0.5096, 0.6336,
        1.4558, 1.2682, 2.8177, 1.3499, 0.9960, 1.5225, 0.7360, 1.9070, 1.3413,
        0.7772, 1.6149, 0.5963, 1.2388, 1.9672, 0.8907, 0.7294, 0.8740, 1.2665,
        1.1693, 0.9652, 0.8247, 1.2552, 1.4609, 0.7125, 1.0210, 0.3749, 1.1130,
        0.6775, 3.4738, 0.9265, 0.9825, 0.7385, 1.1396, 0.8307, 0.6599, 0.7239,
        0.6732, 1.8762, 0.4409, 0.7554, 0.9073, 0.9591, 1.3601, 0.5069, 0.9665,
        0.9493, 1.7419, 2.0116, 1.1134, 1.1441, 1.2438, 0.9927, 1.1060, 1.5309,
        1.6830])
mlp.net.1.batch_norm.num_batches_tracked tensor(93)
mlp.net.2.weight tensor([[ 0.0371,  0.0655,  0.1309,  ..., -0.0410,  0.1044, -0.1541],
        [ 0.0939,  0.0110,  0.0459,  ..., -0.0602,  0.0161, -0.1204],
        [ 0.0906, -0.0773,  0.1546,  ...,  0.0290, -0.0355, -0.0158],
        ...,
        [-0.0078,  0.0586, -0.1578,  ..., -0.1063,  0.0699,  0.0590],
        [ 0.0204, -0.0449, -0.0030,  ..., -0.1135,  0.1155, -0.0139],
        [ 0.0108,  0.0170, -0.1283,  ...,  0.0996,  0.0799,  0.1103]])
mlp.net.2.bias tensor([ 1.5787e-01,  1.8460e-01,  1.1437e-01,  2.9521e-01,  9.0260e-02,
         6.4289e-02,  3.5816e-01,  7.2960e-02,  2.6275e-01,  2.9496e-01,
         6.7224e-02,  2.8807e-01,  2.5881e-01,  2.0482e-02,  1.4881e-01,
         2.0045e-01,  1.3759e-01,  8.2665e-02, -2.0067e-02,  3.2333e-02,
         1.1065e-01,  7.3124e-02, -8.2034e-02,  7.2585e-02,  1.2837e-01,
        -1.1958e-01, -9.7906e-02, -9.0299e-02, -7.1317e-03,  1.7423e-04,
        -2.9863e-03, -2.7424e-02, -6.6586e-02, -2.1445e-01,  3.8635e-02,
        -1.2574e-01, -5.5974e-02, -1.2042e-02, -2.2452e-01, -2.0628e-01,
        -1.6209e-01,  7.0573e-02, -1.3354e-01, -3.5010e-03, -1.4428e-01,
        -1.4208e-01, -1.7634e-01, -2.2995e-01, -2.4458e-01, -1.5764e-01,
        -2.1710e-01, -1.9925e-01, -2.2310e-01, -2.8013e-01, -2.3197e-01,
        -2.1709e-01, -1.5435e-01, -1.1928e-01, -4.2252e-01, -2.0336e-01,
        -6.3371e-02, -4.3131e-01, -2.0468e-01, -6.3509e-02, -4.2005e-01,
        -2.8681e-01, -3.4200e-01, -3.0446e-01, -3.5464e-01, -2.3642e-01,
        -2.7717e-01, -3.3298e-01, -2.6417e-01, -3.4914e-01, -1.0355e-01,
        -2.8937e-01, -3.0394e-01, -3.8260e-01, -4.4581e-01, -3.5717e-01,
        -2.5698e-01, -3.3651e-01, -3.1052e-01, -2.1204e-01, -2.4176e-01,
        -2.3247e-01, -1.9989e-01, -2.9952e-01, -2.0071e-01, -2.0878e-01,
        -2.2351e-01, -3.1202e-01, -2.2075e-01, -1.7780e-01, -8.1550e-02,
        -2.9813e-01, -1.5301e-01, -1.8609e-01, -3.8655e-01, -2.9998e-01,
        -1.1366e-01, -2.6519e-01, -1.4801e-01, -2.4303e-01, -2.4043e-01,
        -4.1410e-01, -1.4543e-01, -3.4372e-01, -3.7137e-01, -4.1922e-01,
        -2.6601e-01, -3.5913e-01, -4.1028e-01, -2.6818e-01, -2.6839e-01,
        -3.9347e-01, -1.3946e-01, -3.5080e-01, -2.1323e-01, -2.9667e-01,
        -2.9953e-01, -3.1159e-01, -2.8899e-01, -2.6693e-01, -1.9062e-01,
        -2.4843e-01, -1.7325e-01, -2.3227e-01, -2.8488e-01, -3.5201e-01,
        -3.2675e-01, -3.8411e-01, -2.7443e-01, -2.1621e-01, -2.1178e-01,
        -3.9713e-01, -2.0560e-01, -3.3296e-01, -2.9727e-01, -2.9975e-01,
        -2.2214e-01, -4.1696e-01, -2.3631e-01, -4.7631e-01, -4.4032e-01,
        -2.5493e-01, -2.0581e-01, -2.6565e-01, -2.0929e-01, -3.6756e-01,
        -2.7849e-01, -2.4477e-01, -4.1169e-01, -2.0034e-01, -1.5319e-01,
        -3.4477e-01, -4.3183e-01, -2.5855e-01, -2.5653e-01, -3.9116e-01,
        -2.1540e-01, -2.5415e-01, -3.5053e-01, -2.1478e-01, -2.1637e-01,
        -3.8677e-01, -3.5076e-01, -1.2425e-01, -3.0565e-01, -3.1928e-01,
        -2.0736e-01, -4.1804e-01, -4.1008e-01, -2.8650e-01, -2.8168e-01,
        -2.0025e-01, -3.3197e-01, -3.6975e-01, -3.0817e-01, -1.6967e-01,
        -3.5420e-01, -2.2594e-01, -2.5320e-01, -3.2929e-01, -3.2942e-01,
        -3.0113e-01, -1.9403e-01, -2.4421e-01, -2.9527e-01, -3.0094e-01,
        -3.9306e-01, -3.6600e-01, -3.1725e-01, -2.1230e-01, -2.5411e-01,
        -4.2264e-01, -1.7481e-01, -2.8272e-01, -3.7731e-01, -3.0374e-01])
