Weights: 
net.embeddings.embeddings.0.weight tensor([[-0.1186, -0.2144],
        [-0.0047,  0.1062],
        [ 0.2950, -0.1857],
        [-0.0437, -0.3233]])
net.embeddings.embeddings.1.weight tensor([[0.1667, 0.1940],
        [0.3299, 0.0292],
        [0.2123, 0.0140],
        [0.2345, 0.3303],
        [0.2511, 0.3271]])
net.embeddings.embeddings.2.weight tensor([[-1.8450e-01,  3.5186e-02,  1.1649e-01],
        [-8.6692e-02,  2.3864e-01,  8.1899e-02],
        [-1.9093e-01, -4.5869e-02, -3.8841e-02],
        [-1.3097e-02,  8.3025e-02,  2.8304e-01],
        [-1.2947e-01, -2.6513e-01,  2.7111e-04],
        [-2.5832e-01,  2.1151e-01, -2.1967e-01]])
net.embeddings.embeddings.3.weight tensor([[-0.1710, -0.3062],
        [ 0.4141, -0.1740],
        [ 0.2648,  0.2050],
        [-0.4530,  0.3056]])
net.embeddings.embeddings.4.weight tensor([[-0.0538, -0.1755],
        [-0.3454,  0.4384],
        [ 0.2142,  0.3250],
        [-0.2207,  0.0427]])
net.mlp.net.0.linear.weight tensor([[-0.1952, -0.1549,  0.0948,  ...,  0.2170,  0.1773,  0.1288],
        [-0.0864,  0.0321,  0.0017,  ...,  0.0446,  0.0893, -0.0735],
        [-0.1552,  0.0844,  0.1514,  ...,  0.0261,  0.1511, -0.1971],
        ...,
        [-0.2091,  0.2612,  0.2643,  ...,  0.2592,  0.4695, -0.1052],
        [-0.0551, -0.0031,  0.0060,  ..., -0.0379,  0.0686,  0.0872],
        [-0.0972,  0.0628,  0.2020,  ..., -0.0307, -0.2344, -0.0495]])
net.mlp.net.0.linear.bias tensor([ 0.0108,  0.0096,  0.1663, -0.0453, -0.0414, -0.0504, -0.1140,  0.0823,
        -0.0493, -0.0891, -0.0223,  0.0683,  0.0826,  0.0015, -0.0369, -0.0303,
         0.1600, -0.0121,  0.0255,  0.0049,  0.0257,  0.0182,  0.1072,  0.0053,
        -0.0213, -0.0057,  0.0552, -0.1055,  0.1170, -0.0689,  0.0310, -0.0458,
        -0.1533, -0.0873, -0.0501, -0.0340,  0.1412, -0.0670, -0.0228,  0.0786,
        -0.0195,  0.0169, -0.0330, -0.0727,  0.1314,  0.0968, -0.1068,  0.0198,
         0.0107, -0.1200, -0.0157,  0.0745,  0.0468, -0.0629,  0.0146, -0.0086,
        -0.0627, -0.0501,  0.0530,  0.0675,  0.1202, -0.0593,  0.0220, -0.0930])
net.mlp.net.0.batch_norm.weight tensor([0.5334, 0.5725, 0.5112, 0.5215, 0.5862, 0.5200, 0.5680, 0.5874, 0.6190,
        0.6970, 0.5724, 0.5384, 0.5827, 0.5539, 0.5702, 0.5153, 0.5785, 0.5384,
        0.5316, 0.5183, 0.5663, 0.5796, 0.5191, 0.5804, 0.5305, 0.5726, 0.5316,
        0.5518, 0.5162, 0.5628, 0.6468, 0.5556, 0.5542, 0.5219, 0.5357, 0.5116,
        0.5611, 0.5114, 0.4943, 0.5493, 0.5042, 0.5109, 0.5342, 0.5524, 0.5276,
        0.5343, 0.5808, 0.5363, 0.5296, 0.5474, 0.5190, 0.5404, 0.6006, 0.5234,
        0.5183, 0.4914, 0.5665, 0.5777, 0.5175, 0.5507, 0.5926, 0.6342, 0.5604,
        0.5562])
net.mlp.net.0.batch_norm.bias tensor([-0.0094, -0.0282, -0.0181,  0.0231, -0.0202,  0.0051, -0.0069, -0.0049,
         0.0190, -0.0457, -0.0295,  0.0060, -0.0104, -0.0430,  0.0145,  0.0334,
         0.0096,  0.0160, -0.0110,  0.0175,  0.0214, -0.0160,  0.0032,  0.0212,
        -0.0067,  0.0048,  0.0153,  0.0253,  0.0035,  0.0042,  0.0120, -0.0028,
         0.0024,  0.0161, -0.0161,  0.0235,  0.0059,  0.0506, -0.0004,  0.0449,
         0.0042,  0.0206,  0.0134,  0.0203, -0.0106,  0.0081,  0.0005, -0.0020,
        -0.0428,  0.0061, -0.0015,  0.0199, -0.0168,  0.0015,  0.0378, -0.0053,
         0.0402, -0.0276,  0.0317, -0.0382, -0.0117, -0.0022,  0.0011,  0.0128])
net.mlp.net.0.batch_norm.running_mean tensor([2.6486e-02, 8.7329e-02, 1.4763e-01, 1.0320e-01, 8.2472e-03, 2.0493e-02,
        1.2895e-01, 4.6690e-03, 1.0107e-01, 5.6527e-02, 2.2235e-01, 3.3306e-01,
        6.6196e-02, 5.1218e-01, 7.3225e-02, 2.9521e-02, 6.6417e-01, 2.1823e-02,
        2.3540e-02, 5.4626e-01, 5.7948e-02, 1.0233e-02, 4.7567e-01, 4.6211e-01,
        2.0599e-02, 3.5519e-01, 3.8856e-02, 8.4514e-03, 9.5842e-02, 5.3866e-01,
        3.7257e-01, 4.6074e-02, 1.8774e-02, 4.2449e-02, 7.1541e-03, 3.2250e-01,
        1.9723e-01, 9.4533e-02, 1.7037e-01, 3.2048e-01, 6.9353e-03, 1.3435e-01,
        5.0233e-02, 5.0101e-01, 4.5490e-01, 1.0963e-01, 3.4865e-01, 3.4741e-01,
        2.8146e-02, 3.4122e-13, 6.4193e-02, 2.7498e-01, 3.5441e-01, 2.3858e-02,
        1.3540e-01, 1.6369e-01, 2.1415e-02, 3.1865e-02, 9.8730e-01, 1.4509e-01,
        3.3068e-01, 3.2224e-01, 7.0943e-02, 9.1747e-02])
net.mlp.net.0.batch_norm.running_var tensor([5.0597e-03, 1.5901e-02, 2.3502e-02, 2.5449e-02, 1.0557e-03, 8.1354e-03,
        2.6803e-02, 9.9601e-04, 1.7194e-02, 1.2328e-02, 6.3039e-02, 4.1692e-02,
        3.9591e-02, 5.6316e-02, 1.4167e-02, 8.9218e-03, 5.5400e-02, 2.3083e-02,
        5.7029e-03, 8.3043e-02, 8.4449e-02, 1.4093e-03, 8.9557e-02, 2.7078e-01,
        1.5102e-02, 9.0004e-02, 6.5693e-03, 2.2607e-03, 3.3266e-02, 8.7772e-02,
        5.0792e-02, 9.9679e-03, 1.6581e-02, 7.1840e-03, 9.2935e-04, 6.3805e-02,
        4.9806e-02, 3.8422e-02, 4.3981e-02, 1.7352e-01, 1.3177e-03, 6.6552e-02,
        3.8124e-02, 1.0509e-01, 1.2322e-01, 2.5108e-02, 3.2357e-02, 4.4006e-02,
        5.0924e-03, 9.3727e-16, 1.1959e-02, 2.3272e-01, 4.0769e-02, 4.5234e-03,
        9.0811e-02, 2.3248e-02, 4.2239e-03, 4.4858e-03, 1.3973e-01, 3.5528e-02,
        6.2070e-02, 3.7787e-02, 3.4923e-02, 1.5299e-02])
net.mlp.net.0.batch_norm.num_batches_tracked tensor(930)
net.mlp.net.1.linear.weight tensor([[ 0.0845, -0.1314, -0.0148,  ..., -0.0553,  0.1454, -0.0690],
        [-0.0523,  0.0971,  0.0545,  ..., -0.1005,  0.0081,  0.0850],
        [ 0.0088, -0.1062, -0.1140,  ..., -0.1303,  0.0265, -0.0396],
        ...,
        [-0.1019,  0.0934,  0.0081,  ..., -0.0101, -0.0300,  0.0749],
        [ 0.1124,  0.0263, -0.0677,  ..., -0.0800, -0.0986,  0.0556],
        [ 0.1598,  0.0582,  0.0124,  ..., -0.0431, -0.0266,  0.1552]])
net.mlp.net.1.linear.bias tensor([-0.0015,  0.0032,  0.0002,  0.0455, -0.0140,  0.0811,  0.0412, -0.0349,
         0.0358,  0.0374,  0.0176, -0.0075,  0.0322, -0.0524,  0.0470,  0.0836,
        -0.0818,  0.0450, -0.0201, -0.0623, -0.0693, -0.0045, -0.0115,  0.0466,
        -0.0312, -0.0399, -0.0492, -0.0388,  0.0396, -0.0341,  0.0019, -0.0575,
         0.0282,  0.0141,  0.0145, -0.0670,  0.0753,  0.0213,  0.0421, -0.0112,
         0.0333,  0.0417,  0.0394, -0.0622, -0.0375, -0.0446, -0.0369, -0.0134,
         0.0058, -0.0482,  0.0419,  0.0833, -0.0604,  0.0075, -0.0166,  0.0289,
         0.0378, -0.0226,  0.0794, -0.0027,  0.0305, -0.0086,  0.0829,  0.0638])
net.mlp.net.1.batch_norm.weight tensor([0.5381, 0.6228, 0.5322, 0.6142, 0.5552, 0.5235, 0.5573, 0.5776, 0.5673,
        0.5474, 0.5698, 0.6166, 0.6189, 0.5904, 0.5135, 0.5166, 0.5390, 0.5576,
        0.5654, 0.5407, 0.5516, 0.5394, 0.5183, 0.5320, 0.5300, 0.5737, 0.6109,
        0.5576, 0.5301, 0.5286, 0.6289, 0.5676, 0.5581, 0.5495, 0.5271, 0.5713,
        0.5606, 0.5761, 0.5557, 0.5411, 0.5437, 0.5675, 0.6316, 0.5369, 0.4986,
        0.5505, 0.5495, 0.5631, 0.5586, 0.5352, 0.4995, 0.5799, 0.5115, 0.5083,
        0.5049, 0.5153, 0.5088, 0.5452, 0.5587, 0.5575, 0.5462, 0.5367, 0.5989,
        0.5569])
net.mlp.net.1.batch_norm.bias tensor([-0.0046,  0.0196, -0.0208, -0.0155, -0.0241, -0.0070,  0.0192,  0.0086,
         0.0202, -0.0062, -0.0083, -0.0049, -0.0118,  0.0149,  0.0023,  0.0125,
        -0.0120, -0.0091,  0.0098, -0.0040, -0.0074,  0.0107,  0.0136,  0.0108,
         0.0011,  0.0311,  0.0129,  0.0105, -0.0008, -0.0126,  0.0243,  0.0224,
        -0.0078, -0.0176,  0.0102,  0.0109, -0.0087, -0.0124,  0.0189,  0.0135,
        -0.0014, -0.0128,  0.0142, -0.0177, -0.0056, -0.0110, -0.0182,  0.0057,
        -0.0055, -0.0017, -0.0117,  0.0241, -0.0158,  0.0155,  0.0192, -0.0077,
         0.0022,  0.0180,  0.0152, -0.0117, -0.0069,  0.0058,  0.0080,  0.0018])
net.mlp.net.1.batch_norm.running_mean tensor([0.1619, 0.2505, 0.2014, 0.2713, 0.1816, 0.2735, 0.2224, 0.2604, 0.1949,
        0.2311, 0.2387, 0.3158, 0.3193, 0.1994, 0.2186, 0.2754, 0.2695, 0.2858,
        0.2009, 0.1799, 0.2183, 0.1983, 0.1764, 0.1883, 0.2310, 0.2105, 0.2031,
        0.2423, 0.2017, 0.1947, 0.2400, 0.1730, 0.2251, 0.2905, 0.2244, 0.2181,
        0.3118, 0.2496, 0.2800, 0.2338, 0.2342, 0.2662, 0.3250, 0.1804, 0.2050,
        0.1937, 0.2705, 0.2065, 0.2779, 0.1530, 0.2420, 0.2424, 0.1434, 0.2131,
        0.2623, 0.2408, 0.1840, 0.2118, 0.3036, 0.1841, 0.2093, 0.2211, 0.2453,
        0.2363])
net.mlp.net.1.batch_norm.running_var tensor([0.0860, 0.1561, 0.1086, 0.1225, 0.1088, 0.1754, 0.1067, 0.1551, 0.1320,
        0.1070, 0.1293, 0.2129, 0.2417, 0.1255, 0.0801, 0.1580, 0.2740, 0.1569,
        0.0745, 0.0950, 0.1337, 0.1532, 0.1173, 0.1578, 0.0900, 0.1328, 0.1546,
        0.1626, 0.1220, 0.1472, 0.1755, 0.0957, 0.1225, 0.1681, 0.2441, 0.1139,
        0.2224, 0.1649, 0.1417, 0.0924, 0.1579, 0.1555, 0.2445, 0.1536, 0.1500,
        0.0953, 0.1602, 0.1312, 0.1766, 0.0660, 0.1469, 0.2098, 0.0508, 0.1084,
        0.1699, 0.1459, 0.0992, 0.1530, 0.1817, 0.0919, 0.1457, 0.1283, 0.1210,
        0.1250])
net.mlp.net.1.batch_norm.num_batches_tracked tensor(930)
net.mlp.net.2.linear.weight tensor([[ 0.0216,  0.0969,  0.0331,  ...,  0.0390, -0.0891,  0.0327],
        [-0.0581,  0.0213,  0.0036,  ...,  0.0260, -0.1312,  0.0024],
        [-0.0498, -0.0477,  0.0140,  ..., -0.0254,  0.0969,  0.1302],
        ...,
        [-0.0839, -0.2183, -0.0283,  ..., -0.0471, -0.0764, -0.0800],
        [ 0.0054,  0.0628,  0.1575,  ..., -0.1033, -0.1335,  0.0731],
        [ 0.0811, -0.0327,  0.0931,  ...,  0.1502,  0.1238, -0.1152]])
net.mlp.net.2.linear.bias tensor([ 0.0707,  0.0028, -0.0906,  0.0066,  0.0796, -0.0474, -0.0394, -0.0160,
        -0.0266,  0.0396,  0.0310, -0.0835, -0.0877,  0.0180,  0.0170,  0.0211,
        -0.0017,  0.0673,  0.0205, -0.0113, -0.0835, -0.0407, -0.0260,  0.0676,
        -0.0335, -0.0078, -0.0303,  0.0387,  0.0824, -0.0161, -0.0411, -0.0400,
         0.0697,  0.0058, -0.0409,  0.0382,  0.0286,  0.0826, -0.0241, -0.0593,
        -0.0263,  0.0612, -0.0172, -0.0266, -0.0340,  0.0273, -0.0555, -0.0620,
        -0.0766, -0.0297,  0.0170,  0.0320, -0.0107, -0.0250, -0.0598,  0.0467,
         0.0635,  0.0337, -0.0610, -0.0669,  0.0460, -0.0071,  0.0348, -0.0127])
net.mlp.net.2.batch_norm.weight tensor([0.5534, 0.5735, 0.5006, 0.5871, 0.5915, 0.5213, 0.6305, 0.5506, 0.5414,
        0.5583, 0.5230, 0.5433, 0.5327, 0.6017, 0.5888, 0.5222, 0.5385, 0.5896,
        0.5662, 0.5872, 0.5665, 0.5811, 0.5394, 0.5235, 0.5339, 0.5507, 0.5235,
        0.5123, 0.5579, 0.5413, 0.5299, 0.5260, 0.5398, 0.5760, 0.5237, 0.5474,
        0.6061, 0.5778, 0.5777, 0.5085, 0.6088, 0.5628, 0.5788, 0.5332, 0.5460,
        0.5225, 0.5292, 0.5384, 0.5776, 0.5508, 0.5653, 0.5503, 0.5311, 0.5191,
        0.5180, 0.5379, 0.5453, 0.5953, 0.5795, 0.5346, 0.5900, 0.5776, 0.5315,
        0.5312])
net.mlp.net.2.batch_norm.bias tensor([ 0.0131,  0.0017,  0.0055, -0.0099,  0.0058,  0.0033, -0.0028,  0.0099,
         0.0373,  0.0153, -0.0181,  0.0118, -0.0289,  0.0024, -0.0027, -0.0097,
         0.0544,  0.0006,  0.0175, -0.0140,  0.0337,  0.0280, -0.0296, -0.0278,
         0.0019,  0.0099,  0.0216,  0.0159, -0.0117,  0.0059,  0.0190, -0.0045,
         0.0052,  0.0101,  0.0038,  0.0331,  0.0106,  0.0141, -0.0226, -0.0131,
         0.0224, -0.0069, -0.0145, -0.0076,  0.0154, -0.0067, -0.0109, -0.0170,
        -0.0337, -0.0040, -0.0120,  0.0090,  0.0189,  0.0290, -0.0135, -0.0167,
         0.0031, -0.0165,  0.0170,  0.0087, -0.0125, -0.0145, -0.0009,  0.0057])
net.mlp.net.2.batch_norm.running_mean tensor([0.3204, 0.2617, 0.1605, 0.2685, 0.3661, 0.1912, 0.3170, 0.2482, 0.2105,
        0.2355, 0.2344, 0.1811, 0.1803, 0.3713, 0.2940, 0.2676, 0.2034, 0.3425,
        0.3474, 0.2731, 0.1777, 0.3215, 0.2562, 0.2806, 0.1991, 0.2355, 0.2109,
        0.2521, 0.3035, 0.2562, 0.1718, 0.2517, 0.3360, 0.3780, 0.2164, 0.2556,
        0.2920, 0.3676, 0.3323, 0.1298, 0.2694, 0.3081, 0.2630, 0.2389, 0.2452,
        0.2961, 0.2031, 0.1844, 0.2289, 0.2209, 0.3129, 0.2365, 0.1771, 0.2191,
        0.1576, 0.3107, 0.2439, 0.3589, 0.3018, 0.2679, 0.3739, 0.3311, 0.2841,
        0.2269])
net.mlp.net.2.batch_norm.running_var tensor([0.2609, 0.2687, 0.1059, 0.2386, 0.3632, 0.1219, 0.2767, 0.1676, 0.1636,
        0.1773, 0.1364, 0.1065, 0.1156, 0.3545, 0.2518, 0.1310, 0.1455, 0.2895,
        0.2873, 0.2005, 0.1140, 0.3582, 0.1932, 0.1407, 0.1343, 0.1904, 0.2327,
        0.1494, 0.1849, 0.2125, 0.0974, 0.1607, 0.2730, 0.4674, 0.1755, 0.2099,
        0.2985, 0.3527, 0.4100, 0.0470, 0.1811, 0.1990, 0.2066, 0.1623, 0.1668,
        0.2320, 0.1426, 0.1302, 0.2145, 0.1436, 0.3632, 0.1728, 0.1148, 0.1562,
        0.0799, 0.3603, 0.1597, 0.3935, 0.2884, 0.2627, 0.3924, 0.2030, 0.2660,
        0.1538])
net.mlp.net.2.batch_norm.num_batches_tracked tensor(930)
net.mlp.net.3.linear.weight tensor([[-0.0177, -0.0946, -0.0658,  ..., -0.0411,  0.0687, -0.0106],
        [-0.0619,  0.0487,  0.1686,  ...,  0.0486, -0.0273, -0.0693],
        [-0.1875, -0.0255,  0.1021,  ..., -0.0688, -0.0814,  0.1255],
        ...,
        [-0.0918,  0.0972, -0.0283,  ...,  0.1172,  0.1205,  0.0574],
        [-0.0186, -0.0465,  0.1572,  ...,  0.1016,  0.0117, -0.0046],
        [-0.0340,  0.1067, -0.1133,  ...,  0.0471, -0.0536, -0.0349]])
net.mlp.net.3.linear.bias tensor([ 4.8344e-02,  2.2409e-02, -5.7058e-02, -2.6626e-02, -3.3257e-02,
         6.3882e-02,  1.8445e-02,  5.0453e-02, -3.2714e-03,  5.6910e-02,
        -2.9952e-02,  2.2455e-02, -4.2375e-02,  4.0931e-02, -2.5598e-02,
        -8.3342e-03,  1.6841e-02, -6.6203e-03, -3.1563e-02, -6.5456e-02,
         5.2782e-02,  1.4711e-02,  4.4699e-02,  9.3527e-03,  2.5195e-02,
        -3.7849e-02,  4.1706e-02,  7.0150e-02,  2.7600e-03,  1.3229e-02,
         3.5632e-02,  9.5654e-03,  3.2207e-02, -1.5857e-02, -4.7451e-02,
        -5.3224e-02, -6.3491e-02,  1.1790e-03, -1.2387e-02, -8.9480e-02,
        -1.5341e-02,  5.0585e-02,  3.2738e-03,  6.9474e-03, -3.3110e-02,
         2.2422e-02,  8.6380e-04, -3.2591e-02,  4.2107e-02, -8.5944e-02,
        -4.4117e-02,  6.2268e-02,  2.7009e-02, -1.6405e-02, -3.4310e-06,
        -8.3542e-03, -3.7629e-02, -6.8054e-02,  5.8668e-02, -4.7127e-02,
         2.6089e-02,  5.7662e-02,  2.4976e-02,  2.3032e-02])
net.mlp.net.3.batch_norm.weight tensor([0.5098, 0.5448, 0.5599, 0.5244, 0.5605, 0.5451, 0.5400, 0.5498, 0.5009,
        0.5233, 0.5548, 0.5490, 0.5463, 0.5410, 0.5310, 0.5317, 0.5240, 0.5542,
        0.5368, 0.5404, 0.5199, 0.5561, 0.5457, 0.5724, 0.5035, 0.5112, 0.5256,
        0.5053, 0.5224, 0.5449, 0.5235, 0.5727, 0.5483, 0.5161, 0.5354, 0.5700,
        0.5349, 0.5328, 0.5373, 0.5177, 0.5934, 0.5268, 0.5535, 0.5316, 0.5228,
        0.5387, 0.5337, 0.5490, 0.5375, 0.5524, 0.5056, 0.5031, 0.5668, 0.5346,
        0.5223, 0.5606, 0.5627, 0.5274, 0.5328, 0.5314, 0.5129, 0.5278, 0.5500,
        0.5016])
net.mlp.net.3.batch_norm.bias tensor([-0.0279,  0.0471,  0.0877, -0.0208,  0.0199, -0.0048,  0.0598, -0.0350,
         0.0202,  0.0315,  0.0489, -0.0002,  0.0475, -0.0057,  0.0509,  0.0269,
         0.0058,  0.0841,  0.0368,  0.0367,  0.0365, -0.0142, -0.0033, -0.0253,
        -0.0186, -0.0206,  0.0829,  0.0226,  0.0026,  0.0724, -0.0356,  0.0345,
         0.0378,  0.0524,  0.0008,  0.0717,  0.0461, -0.0178,  0.0355, -0.0090,
         0.0530,  0.0271, -0.0231,  0.0654,  0.0166,  0.0573,  0.0365,  0.0608,
        -0.0070,  0.0561,  0.0073, -0.0399,  0.0081, -0.0297,  0.0139, -0.0141,
         0.0737,  0.0543,  0.0367,  0.0451,  0.0525, -0.0148,  0.0846, -0.0077])
net.mlp.net.3.batch_norm.running_mean tensor([0.2191, 0.2494, 0.3118, 0.2348, 0.3364, 0.3295, 0.3335, 0.2915, 0.1960,
        0.3273, 0.2551, 0.2370, 0.1716, 0.2467, 0.2401, 0.3203, 0.1980, 0.3489,
        0.2503, 0.2484, 0.2326, 0.2695, 0.2999, 0.3457, 0.1911, 0.2455, 0.2956,
        0.2877, 0.1824, 0.3506, 0.2173, 0.3151, 0.3265, 0.1904, 0.3541, 0.2337,
        0.1640, 0.2487, 0.2780, 0.1600, 0.3852, 0.3392, 0.2449, 0.2623, 0.1985,
        0.2779, 0.2839, 0.2597, 0.2441, 0.2279, 0.1550, 0.2475, 0.2647, 0.2183,
        0.2998, 0.3044, 0.2821, 0.2113, 0.2583, 0.3013, 0.2533, 0.3610, 0.2552,
        0.2102])
net.mlp.net.3.batch_norm.running_var tensor([0.1063, 0.2651, 0.5058, 0.2510, 0.5372, 0.1172, 0.5044, 0.2469, 0.1372,
        0.2919, 0.2701, 0.1668, 0.1784, 0.1532, 0.2926, 0.5200, 0.1122, 0.4591,
        0.2556, 0.3088, 0.1039, 0.2752, 0.1561, 0.3997, 0.1144, 0.1553, 0.3874,
        0.1989, 0.1166, 0.4168, 0.1398, 0.4466, 0.3790, 0.1277, 0.4964, 0.2413,
        0.1168, 0.2393, 0.2711, 0.1202, 0.7435, 0.3303, 0.1353, 0.2200, 0.0608,
        0.2715, 0.2861, 0.2130, 0.1790, 0.2655, 0.0677, 0.1358, 0.2983, 0.2013,
        0.2931, 0.4201, 0.3741, 0.2683, 0.2371, 0.3439, 0.1959, 0.4745, 0.2647,
        0.1621])
net.mlp.net.3.batch_norm.num_batches_tracked tensor(930)
net.mlp.net.4.weight tensor([[ 0.0078, -0.0082, -0.0219,  0.0049,  0.0377,  0.0057, -0.0300,  0.0240,
         -0.0044, -0.0235, -0.0221,  0.0191, -0.0069,  0.0122, -0.0125, -0.0233,
          0.0060, -0.0361,  0.0489, -0.0254, -0.0080,  0.0257,  0.0149,  0.0264,
          0.0035,  0.0019, -0.0237, -0.0053, -0.0167, -0.0363, -0.0060, -0.0247,
         -0.0142, -0.0105,  0.0243, -0.0264, -0.0126,  0.0197, -0.0185,  0.0039,
         -0.0387,  0.0275,  0.0266, -0.0098, -0.0073, -0.0101, -0.0077, -0.0269,
          0.0218, -0.0237, -0.0015, -0.0041, -0.0197,  0.0130, -0.0196,  0.0311,
         -0.0321, -0.0182, -0.0095,  0.0409, -0.0136,  0.0154, -0.0184,  0.0047]])
