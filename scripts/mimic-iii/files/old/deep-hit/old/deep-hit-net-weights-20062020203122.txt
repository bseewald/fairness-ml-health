Weights: 
embeddings.embeddings.0.weight tensor([[-0.0624,  0.0803],
        [-0.0785, -0.2288],
        [ 0.1430,  0.0997],
        [ 0.2201,  0.0228]])
embeddings.embeddings.1.weight tensor([[ 0.0319, -0.0689],
        [-0.2052, -0.0848],
        [-0.0878,  0.0735],
        [ 0.0701, -0.1318],
        [ 0.1392, -0.1606]])
embeddings.embeddings.2.weight tensor([[ 0.1727,  0.1627,  0.1133],
        [-0.1733,  0.0896,  0.1114],
        [-0.1059,  0.1623, -0.1758],
        [ 0.1541, -0.0262, -0.1032],
        [-0.0450, -0.1477,  0.1149],
        [-0.0649,  0.1419, -0.1881]])
embeddings.embeddings.3.weight tensor([[ 0.2060, -0.0467],
        [-0.2900, -0.0888],
        [ 0.0091, -0.1032],
        [-0.0819,  0.2074]])
embeddings.embeddings.4.weight tensor([[ 0.2560, -0.0007],
        [ 0.2623,  0.3229],
        [ 0.1219, -0.1201],
        [-0.2139,  0.1809]])
mlp.net.0.linear.weight tensor([[ 0.0203,  0.0816,  0.1316,  ...,  0.1414, -0.1444, -0.1276],
        [-0.0210,  0.0250,  0.0911,  ...,  0.0196, -0.1185, -0.0248],
        [ 0.1787,  0.0043,  0.0347,  ..., -0.0524, -0.0728, -0.0322],
        ...,
        [-0.1247, -0.0051,  0.2588,  ...,  0.0106, -0.1520, -0.0014],
        [-0.1175,  0.1609, -0.0919,  ..., -0.1228,  0.0951,  0.2704],
        [-0.0905, -0.0857,  0.1003,  ...,  0.3877, -0.0152, -0.0684]])
mlp.net.0.linear.bias tensor([-2.2757e-02, -7.7023e-02,  2.3026e-02, -1.9654e-02,  6.5905e-02,
        -6.7405e-02,  1.0674e-01,  1.0458e-02,  4.9344e-03, -1.3039e-02,
         4.3012e-02, -1.7475e-02, -3.9383e-03, -7.7066e-03, -1.8605e-02,
        -3.3251e-02, -5.8626e-02, -3.5218e-02, -2.8779e-02,  1.9854e-02,
         7.8949e-02, -4.6687e-02, -8.4478e-03,  2.7973e-02,  9.6336e-02,
         9.2234e-02,  2.5542e-02, -5.0145e-06,  8.1990e-02, -8.8330e-02,
         1.2179e-02,  3.9591e-02, -5.6127e-02, -5.0061e-02,  7.0975e-02,
        -1.5393e-02, -3.1117e-02,  1.9855e-02, -4.0315e-02, -1.3752e-02,
         4.5007e-02, -6.7913e-02,  2.2392e-02,  8.1788e-02,  1.7908e-02,
        -6.7256e-02, -1.3677e-03, -2.0089e-02,  5.6336e-02,  6.1190e-02,
        -6.0999e-02,  3.6185e-02,  1.1923e-02,  6.7691e-02,  9.1305e-03,
        -4.1794e-02,  2.2056e-02,  4.8031e-03, -3.5820e-02,  7.6650e-02,
        -6.4473e-02,  7.6491e-02, -3.6753e-02, -1.3982e-02])
mlp.net.0.batch_norm.weight tensor([0.4392, 0.3824, 0.3550, 0.3954, 0.4051, 0.4152, 0.4117, 0.4130, 0.3984,
        0.3683, 0.3671, 0.3819, 0.4015, 0.3637, 0.3701, 0.3837, 0.3525, 0.3906,
        0.3894, 0.4259, 0.4211, 0.3857, 0.4164, 0.3627, 0.4047, 0.3784, 0.3758,
        0.3951, 0.3691, 0.3890, 0.4175, 0.3926, 0.4307, 0.4333, 0.3575, 0.4039,
        0.3920, 0.4268, 0.3510, 0.3754, 0.4268, 0.3879, 0.4219, 0.3872, 0.3968,
        0.3770, 0.4114, 0.3626, 0.3647, 0.3500, 0.3937, 0.3978, 0.3711, 0.3999,
        0.4025, 0.4430, 0.4568, 0.3936, 0.3680, 0.3641, 0.4299, 0.3949, 0.4365,
        0.4600])
mlp.net.0.batch_norm.bias tensor([-0.0149,  0.0276,  0.0152,  0.0187, -0.0063, -0.0160,  0.0122, -0.0138,
        -0.0152,  0.0116, -0.0049,  0.0229,  0.0179, -0.0239, -0.0246,  0.0197,
         0.0159,  0.0325,  0.0102,  0.0071, -0.0101,  0.0197, -0.0208,  0.0085,
         0.0077, -0.0134, -0.0300,  0.0205, -0.0337,  0.0185,  0.0255,  0.0282,
        -0.0173,  0.0319, -0.0134, -0.0221, -0.0190,  0.0275, -0.0058, -0.0203,
         0.0213,  0.0163,  0.0215,  0.0129,  0.0200,  0.0211, -0.0114, -0.0047,
         0.0188, -0.0056, -0.0253,  0.0305,  0.0029, -0.0128,  0.0140, -0.0356,
         0.0212, -0.0112, -0.0179, -0.0165, -0.0120,  0.0020,  0.0057, -0.0115])
mlp.net.0.batch_norm.running_mean tensor([0.0291, 0.0111, 0.0558, 0.1868, 0.0308, 0.0218, 0.0331, 0.0747, 0.6630,
        0.2006, 0.1579, 0.0969, 0.0064, 0.0182, 0.0489, 0.0665, 0.2067, 0.0232,
        0.0063, 0.0370, 0.1295, 0.0117, 0.2331, 0.0323, 0.2320, 0.0093, 0.3404,
        0.1179, 0.0644, 0.0655, 0.1529, 0.0964, 0.0542, 0.0818, 0.0550, 0.0897,
        0.0272, 0.0016, 0.0044, 0.0699, 0.1344, 0.0215, 0.0035, 0.0170, 0.0435,
        0.0110, 0.0190, 0.2763, 0.2571, 0.0044, 0.0046, 0.0069, 0.0607, 0.0285,
        0.0225, 0.0235, 0.0480, 0.0678, 0.0019, 0.1085, 0.0048, 0.4919, 0.0255,
        0.1097])
mlp.net.0.batch_norm.running_var tensor([0.0020, 0.0013, 0.0083, 0.0276, 0.0020, 0.0023, 0.0067, 0.0096, 0.0532,
        0.0249, 0.0207, 0.0097, 0.0008, 0.0022, 0.0080, 0.0066, 0.0351, 0.0016,
        0.0004, 0.0020, 0.0076, 0.0013, 0.0198, 0.0048, 0.0287, 0.0010, 0.0284,
        0.0132, 0.0086, 0.0072, 0.0321, 0.0153, 0.0052, 0.0060, 0.0064, 0.0077,
        0.0048, 0.0001, 0.0006, 0.0109, 0.0228, 0.0018, 0.0002, 0.0028, 0.0077,
        0.0010, 0.0033, 0.0136, 0.0233, 0.0005, 0.0003, 0.0011, 0.0105, 0.0059,
        0.0027, 0.0022, 0.0033, 0.0061, 0.0002, 0.0186, 0.0003, 0.0306, 0.0028,
        0.0068])
mlp.net.0.batch_norm.num_batches_tracked tensor(2330)
mlp.net.1.linear.weight tensor([[-0.0057,  0.0232,  0.0214,  ..., -0.0945, -0.0222, -0.0109],
        [-0.0456, -0.0530,  0.0255,  ..., -0.0351,  0.0081, -0.1326],
        [ 0.1123, -0.0589,  0.0391,  ...,  0.0153,  0.0783,  0.0759],
        ...,
        [-0.0971,  0.0043,  0.0866,  ..., -0.0014, -0.0383, -0.0154],
        [-0.0018,  0.0673, -0.0088,  ..., -0.0236,  0.0409, -0.0701],
        [ 0.0052,  0.0856, -0.0177,  ..., -0.0730,  0.1177, -0.0238]])
mlp.net.1.linear.bias tensor([ 0.0108, -0.0130,  0.0764,  0.0010, -0.0353,  0.0027, -0.0017,  0.0661,
         0.0706, -0.0286,  0.0483,  0.0250,  0.0130, -0.0230, -0.0390,  0.0498,
        -0.0341, -0.0268,  0.0241, -0.0065,  0.0452,  0.0558,  0.0207, -0.0385,
         0.0048,  0.0117,  0.0050,  0.0625,  0.0335, -0.0342,  0.0352,  0.0028,
        -0.0030,  0.0391,  0.0149,  0.0333, -0.0420, -0.0227,  0.0408,  0.0306,
         0.0586, -0.0019,  0.0330,  0.0250,  0.0726,  0.0756,  0.0242,  0.0009,
         0.0345,  0.0055, -0.0341,  0.0674,  0.0688,  0.0573, -0.0546,  0.0488,
         0.0220, -0.0496, -0.0528,  0.0953, -0.0025,  0.0004, -0.0204,  0.0458])
mlp.net.1.batch_norm.weight tensor([0.4166, 0.4439, 0.4525, 0.4702, 0.4385, 0.4755, 0.4483, 0.4263, 0.4807,
        0.4492, 0.4640, 0.4372, 0.4513, 0.4292, 0.4409, 0.4323, 0.4558, 0.4653,
        0.4077, 0.4539, 0.4702, 0.4763, 0.4387, 0.3996, 0.4648, 0.4599, 0.4577,
        0.4598, 0.4406, 0.4183, 0.4437, 0.4307, 0.4071, 0.4154, 0.4522, 0.4697,
        0.4489, 0.4201, 0.4539, 0.4514, 0.4586, 0.4572, 0.4369, 0.4253, 0.4380,
        0.4357, 0.4168, 0.4223, 0.4609, 0.4692, 0.4422, 0.4728, 0.4448, 0.4634,
        0.4243, 0.4501, 0.4605, 0.4290, 0.3970, 0.4677, 0.4333, 0.4424, 0.4439,
        0.4760])
mlp.net.1.batch_norm.bias tensor([-0.0160, -0.0900,  0.0929, -0.0895,  0.0893, -0.0932,  0.0904, -0.0439,
        -0.0926, -0.0844,  0.0941,  0.0944, -0.0901, -0.0267, -0.0879, -0.0929,
        -0.0941, -0.0892,  0.0919, -0.0950, -0.0934, -0.0909, -0.0496,  0.0143,
         0.0917, -0.0920,  0.0831,  0.0914, -0.0909,  0.0926, -0.0748,  0.0908,
        -0.0875,  0.0923, -0.0926, -0.0904, -0.0897,  0.0645,  0.0913, -0.0947,
         0.0894,  0.0811,  0.0912, -0.0930, -0.0871,  0.0916,  0.0791,  0.0920,
         0.0888, -0.0902, -0.0907, -0.0921, -0.0540, -0.0914, -0.0921,  0.0529,
        -0.0925, -0.0924,  0.0916, -0.0863,  0.0875, -0.0900, -0.0760, -0.0914])
mlp.net.1.batch_norm.running_mean tensor([0.0897, 0.0869, 0.1602, 0.1186, 0.0806, 0.1377, 0.1139, 0.1627, 0.1888,
        0.0785, 0.1148, 0.0956, 0.1201, 0.1123, 0.0778, 0.1150, 0.0994, 0.1010,
        0.1474, 0.1229, 0.1449, 0.1137, 0.1359, 0.1073, 0.0929, 0.1380, 0.1129,
        0.1367, 0.1346, 0.1017, 0.1408, 0.1242, 0.1240, 0.1086, 0.1208, 0.1719,
        0.0949, 0.0692, 0.1426, 0.1423, 0.1321, 0.0929, 0.1169, 0.1174, 0.1368,
        0.1277, 0.1075, 0.0718, 0.1161, 0.0990, 0.0856, 0.1481, 0.1663, 0.1244,
        0.0568, 0.1447, 0.1333, 0.0852, 0.0881, 0.1938, 0.0767, 0.0853, 0.0955,
        0.1347])
mlp.net.1.batch_norm.running_var tensor([0.0170, 0.0151, 0.0616, 0.0240, 0.0178, 0.0535, 0.0300, 0.0332, 0.0371,
        0.0355, 0.0253, 0.0165, 0.0249, 0.0437, 0.0204, 0.0213, 0.0308, 0.0434,
        0.0482, 0.0461, 0.0344, 0.0188, 0.0289, 0.0467, 0.0167, 0.0387, 0.0248,
        0.0285, 0.0364, 0.0237, 0.0423, 0.0484, 0.0232, 0.0191, 0.0396, 0.0769,
        0.0263, 0.0200, 0.0263, 0.0457, 0.0304, 0.0369, 0.0233, 0.0305, 0.0221,
        0.0268, 0.0246, 0.0127, 0.0311, 0.0266, 0.0220, 0.0222, 0.0316, 0.0318,
        0.0102, 0.0317, 0.0230, 0.0205, 0.0241, 0.0450, 0.0137, 0.0115, 0.0276,
        0.0290])
mlp.net.1.batch_norm.num_batches_tracked tensor(2330)
mlp.net.2.weight tensor([[-0.0369,  0.0174, -0.0800,  ...,  0.0326,  0.0428,  0.0226],
        [-0.0146, -0.0882,  0.0419,  ..., -0.0494, -0.0946, -0.1046],
        [-0.0754, -0.0155,  0.0167,  ..., -0.0717,  0.0347, -0.0991],
        ...,
        [ 0.0348,  0.0269, -0.0739,  ...,  0.0590, -0.0196,  0.0586],
        [-0.0197,  0.0643, -0.0834,  ...,  0.0570,  0.0118,  0.0634],
        [-0.0093,  0.0952, -0.0100,  ...,  0.0302,  0.0116,  0.0753]])
mlp.net.2.bias tensor([-0.1102,  0.0470,  0.0801,  0.0411,  0.0812,  0.0953,  0.0328, -0.0145,
         0.0192,  0.0239, -0.0474,  0.0263, -0.0586, -0.0853, -0.0425, -0.0842,
        -0.0986, -0.0792, -0.0790, -0.1199, -0.0596, -0.0413, -0.0484, -0.0937,
        -0.0957, -0.0431, -0.0687, -0.0877, -0.1360, -0.0502, -0.0620, -0.1054,
        -0.1182, -0.1157, -0.0500, -0.0685, -0.1201, -0.0518, -0.1351, -0.0535,
        -0.0889, -0.1037, -0.1298, -0.0790, -0.0871, -0.0901, -0.0479, -0.0901,
        -0.1104, -0.1296])
