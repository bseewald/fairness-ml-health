Weights: 
embeddings.embeddings.0.weight tensor([[-0.0621, -0.0625],
        [ 0.0712,  0.2324],
        [ 0.3050,  0.1457],
        [-0.0122,  0.0384]])
embeddings.embeddings.1.weight tensor([[-0.0034,  0.2689],
        [-0.2816,  0.3125],
        [ 0.0302,  0.3841],
        [-0.1457, -0.2316],
        [ 0.1499,  0.0858]])
embeddings.embeddings.2.weight tensor([[ 0.0212,  0.0398, -0.0500],
        [ 0.1680,  0.0493,  0.2652],
        [ 0.2177,  0.1168,  0.0289],
        [-0.1795, -0.1109, -0.2122],
        [-0.0938, -0.0969,  0.2207],
        [ 0.0761, -0.0151, -0.0929]])
embeddings.embeddings.3.weight tensor([[ 0.1311,  0.1349],
        [ 0.1305, -0.5834],
        [ 0.3830,  0.2536],
        [-0.3099,  0.1433]])
embeddings.embeddings.4.weight tensor([[ 0.0194, -0.1978],
        [-0.3584,  0.3667],
        [ 0.0902, -0.1947],
        [-0.2502,  0.2473]])
mlp.net.0.linear.weight tensor([[ 0.0171, -0.0142, -0.1575,  ..., -0.2209, -0.2067,  0.1119],
        [-0.3171, -0.0983,  0.0336,  ...,  0.0601, -0.0759, -0.1721],
        [-0.0838, -0.0263, -0.1505,  ...,  0.1654,  0.1214, -0.0629],
        ...,
        [-0.2393,  0.1512,  0.0169,  ..., -0.0846,  0.0455, -0.2428],
        [ 0.1972, -0.2021,  0.1067,  ..., -0.2646,  0.0990, -0.0293],
        [ 0.1919, -0.0510,  0.0601,  ...,  0.2164, -0.4596,  0.1894]])
mlp.net.0.linear.bias tensor([ 0.0102, -0.0533,  0.0198, -0.0941,  0.1016, -0.1054,  0.0526, -0.2505,
         0.0656, -0.1525,  0.0472,  0.0213, -0.0015,  0.0486, -0.0124, -0.0462,
         0.0284, -0.0748, -0.1006, -0.0444, -0.0394, -0.1814,  0.1198, -0.0634,
         0.0603, -0.1369, -0.0793,  0.0660, -0.0045,  0.0684, -0.1534, -0.0770,
        -0.0178,  0.1166,  0.0125, -0.0194,  0.0235, -0.0217, -0.0952, -0.0571,
         0.0628, -0.0084,  0.2223, -0.0811, -0.0040, -0.0591, -0.0719, -0.0020,
         0.0920, -0.0370, -0.0295,  0.0300, -0.0124,  0.0385,  0.0604,  0.0104,
        -0.1785, -0.1082,  0.0535, -0.0464, -0.0260,  0.0499, -0.0194,  0.0808])
mlp.net.0.batch_norm.weight tensor([0.6153, 0.4500, 0.4383, 0.4578, 0.4630, 0.6156, 0.3768, 0.5845, 0.5698,
        0.6565, 0.5081, 0.5182, 0.5025, 0.5890, 0.4042, 0.5072, 0.4587, 0.4496,
        0.4120, 0.4868, 0.4843, 0.5063, 0.4821, 0.5786, 0.4479, 0.3614, 0.5007,
        0.5305, 0.4693, 0.5709, 0.5326, 0.5396, 0.4804, 0.4847, 0.6311, 0.4345,
        0.4475, 0.3578, 0.4655, 0.3680, 0.3045, 0.4166, 0.4601, 0.4973, 0.5464,
        0.4769, 0.4450, 0.5560, 0.4304, 0.4883, 0.4251, 0.4977, 0.5160, 0.4550,
        0.5394, 0.4453, 0.4427, 0.3600, 0.4798, 0.3538, 0.4409, 0.4535, 0.3831,
        0.4518])
mlp.net.0.batch_norm.bias tensor([-0.0021,  0.0689,  0.0140,  0.0398, -0.0093,  0.0090,  0.0094, -0.0241,
         0.1272,  0.0909, -0.0801, -0.0486, -0.0715, -0.0082,  0.0157,  0.0752,
         0.0091,  0.0082, -0.0005, -0.0518,  0.0253,  0.0642, -0.1276,  0.0127,
         0.0429, -0.0852,  0.0360,  0.0539,  0.0266,  0.0927,  0.0052,  0.0262,
        -0.0846, -0.1080, -0.0211,  0.1067, -0.0571, -0.0595, -0.1445, -0.0526,
         0.0405, -0.0501,  0.0710, -0.0586,  0.0193, -0.0759, -0.0389,  0.0325,
         0.0276, -0.0313, -0.0662,  0.0404, -0.1628,  0.0888, -0.0173,  0.1373,
         0.0423, -0.0021,  0.0266,  0.1141,  0.0544,  0.0194,  0.0750, -0.0016])
mlp.net.0.batch_norm.running_mean tensor([2.1495e-02, 2.4526e-02, 1.0181e-01, 7.4538e-03, 5.5806e-02, 1.5144e-02,
        7.7463e-02, 1.3539e-01, 1.7843e-01, 2.0728e-02, 8.6715e-02, 1.4885e-01,
        1.4042e-01, 1.0388e-02, 3.2637e-01, 8.1455e-02, 4.8303e-03, 4.6336e-01,
        2.0955e-01, 3.8502e-02, 6.3784e-05, 2.1147e-02, 4.8049e-01, 5.6351e-01,
        7.1510e-02, 4.1339e-02, 1.6371e-02, 1.1690e-01, 7.7102e-03, 2.6815e-03,
        2.9179e-01, 1.8992e-03, 6.7803e-02, 5.0046e-01, 1.6702e-02, 2.2645e-01,
        5.2760e-01, 5.4914e-02, 2.8069e-01, 2.3875e-01, 6.5985e-01, 2.0454e-01,
        6.6345e-02, 6.7011e-02, 1.2874e-01, 2.3213e-01, 2.4637e-01, 4.2159e-01,
        3.2423e-01, 3.5034e-02, 5.6894e-02, 6.2889e-02, 2.6377e-03, 6.3731e-02,
        4.6649e-01, 2.1950e-01, 2.8193e-02, 1.1885e-04, 1.7724e-02, 5.0831e-01,
        4.9060e-03, 4.2835e-01, 1.4469e-01, 4.5668e-01])
mlp.net.0.batch_norm.running_var tensor([2.9886e-03, 4.5667e-03, 2.4357e-02, 1.7415e-03, 7.8509e-03, 2.3083e-03,
        1.3284e-02, 1.8907e-02, 3.8733e-02, 3.0953e-03, 9.2137e-03, 1.5834e-02,
        2.5413e-02, 1.8418e-03, 3.5820e-02, 1.2597e-02, 6.8001e-04, 1.0964e-01,
        5.0665e-02, 7.7930e-03, 4.0760e-06, 4.3439e-03, 3.6537e-02, 3.7524e-02,
        1.3056e-02, 7.3629e-03, 2.2444e-03, 1.9523e-02, 2.1750e-03, 3.4223e-04,
        2.9596e-02, 3.1670e-04, 1.3889e-02, 4.4888e-02, 5.1109e-03, 3.1489e-02,
        3.9712e-02, 1.1833e-02, 3.8201e-02, 5.9176e-02, 3.7781e-02, 1.6649e-02,
        8.7212e-03, 1.3604e-02, 1.9439e-02, 2.8652e-02, 4.3468e-02, 5.0899e-02,
        2.0804e-02, 6.0754e-03, 7.3379e-03, 7.7873e-03, 4.2632e-04, 1.2361e-02,
        4.1943e-02, 2.3048e-02, 6.3014e-03, 9.5619e-06, 2.1886e-03, 6.1701e-02,
        5.9921e-04, 3.9033e-02, 3.1838e-02, 4.3544e-02])
mlp.net.0.batch_norm.num_batches_tracked tensor(205)
mlp.net.1.linear.weight tensor([[-0.1347, -0.1039,  0.0276,  ..., -0.1619,  0.0944,  0.0828],
        [ 0.0309, -0.0288, -0.0573,  ..., -0.0379,  0.0834,  0.2201],
        [ 0.0739,  0.0348,  0.0921,  ..., -0.0322,  0.0261,  0.0805],
        ...,
        [-0.1107, -0.1195, -0.1272,  ..., -0.0585, -0.0479, -0.0240],
        [ 0.0836, -0.0416, -0.1833,  ...,  0.1533,  0.0702, -0.0306],
        [ 0.0793, -0.1331, -0.0743,  ...,  0.1560,  0.0090, -0.0236]])
mlp.net.1.linear.bias tensor([ 0.1404,  0.0842, -0.0323,  0.0668,  0.0782,  0.0161,  0.0989, -0.1125,
         0.0729,  0.0990,  0.0333,  0.0245,  0.1762,  0.0596,  0.1192, -0.1722,
         0.1230, -0.0233, -0.0106,  0.0737, -0.0801, -0.0476, -0.0092, -0.0656,
         0.1479, -0.0864,  0.0332,  0.0399,  0.0870,  0.0363,  0.1867,  0.0763,
         0.1199, -0.0862, -0.0210,  0.0502,  0.0340, -0.0132,  0.1379, -0.1294,
         0.2068,  0.0490,  0.0414, -0.0671,  0.1521,  0.0253, -0.1251,  0.0224,
         0.0180, -0.0148,  0.0770,  0.0806,  0.0015, -0.0543,  0.0846,  0.0099,
         0.0143,  0.1111,  0.0042, -0.0460,  0.1726, -0.0163,  0.1277,  0.0020])
mlp.net.1.batch_norm.weight tensor([0.5024, 0.5149, 0.4981, 0.5565, 0.4587, 0.4429, 0.4937, 0.4881, 0.4091,
        0.4946, 0.5341, 0.5371, 0.4729, 0.5083, 0.4244, 0.4701, 0.4093, 0.3989,
        0.4405, 0.4248, 0.5207, 0.4891, 0.4696, 0.4949, 0.4617, 0.4359, 0.4279,
        0.4943, 0.4803, 0.5166, 0.4378, 0.4800, 0.4611, 0.4719, 0.4295, 0.4152,
        0.4925, 0.4663, 0.3786, 0.4842, 0.4205, 0.4264, 0.4127, 0.4662, 0.5092,
        0.4133, 0.5021, 0.4453, 0.5694, 0.4915, 0.4504, 0.4610, 0.3942, 0.5020,
        0.4231, 0.4431, 0.5445, 0.4520, 0.4520, 0.3947, 0.4502, 0.5226, 0.4869,
        0.4642])
mlp.net.1.batch_norm.bias tensor([ 0.0706,  0.0223,  0.0314,  0.0749, -0.0073, -0.0834,  0.1362,  0.0919,
        -0.1211,  0.0507,  0.0778,  0.1857,  0.1097,  0.1213,  0.1749,  0.0885,
        -0.0033,  0.3108,  0.0065, -0.1615,  0.0127,  0.0724,  0.1298,  0.0252,
         0.1750,  0.0137,  0.0718,  0.1981,  0.0121, -0.0046, -0.0394,  0.1929,
        -0.0823, -0.0211,  0.0171,  0.0861,  0.0180, -0.0869, -0.1438, -0.1503,
         0.0167, -0.1070,  0.1226,  0.0066,  0.0615,  0.0401,  0.0064,  0.0905,
         0.0035,  0.0394,  0.1063,  0.1049,  0.0138,  0.1041,  0.0459, -0.0783,
         0.0172,  0.0806,  0.0584,  0.1658,  0.1159,  0.1065,  0.1569,  0.0601])
mlp.net.1.batch_norm.running_mean tensor([0.4334, 0.2865, 0.2524, 0.2946, 0.2298, 0.2764, 0.3604, 0.2214, 0.2507,
        0.4200, 0.2952, 0.3965, 0.5491, 0.3797, 0.4665, 0.1554, 0.3488, 0.2655,
        0.2323, 0.2779, 0.3195, 0.3122, 0.2871, 0.1931, 0.5083, 0.2297, 0.3030,
        0.3877, 0.3535, 0.3743, 0.4339, 0.3694, 0.4279, 0.3389, 0.2032, 0.3683,
        0.2835, 0.2971, 0.4117, 0.2786, 0.4426, 0.2775, 0.3733, 0.2593, 0.3789,
        0.2735, 0.2249, 0.4100, 0.4389, 0.2459, 0.3906, 0.3329, 0.2845, 0.3103,
        0.2955, 0.3983, 0.2695, 0.3981, 0.2296, 0.3496, 0.4827, 0.2845, 0.4170,
        0.2921])
mlp.net.1.batch_norm.running_var tensor([0.3193, 0.1875, 0.2760, 0.2371, 0.2011, 0.2328, 0.2049, 0.2052, 0.1394,
        0.3129, 0.2480, 0.3884, 0.4408, 0.2931, 0.2715, 0.1689, 0.1610, 0.1658,
        0.1047, 0.1548, 0.1996, 0.2537, 0.2955, 0.1438, 0.4458, 0.1897, 0.2450,
        0.4756, 0.2515, 0.4034, 0.2387, 0.3332, 0.2700, 0.2647, 0.1066, 0.2861,
        0.2444, 0.1748, 0.3135, 0.2657, 0.3045, 0.1514, 0.3495, 0.2085, 0.2740,
        0.1210, 0.2413, 0.3422, 0.3748, 0.1850, 0.2292, 0.1906, 0.1338, 0.3443,
        0.2224, 0.3501, 0.2655, 0.2838, 0.2176, 0.4160, 0.2809, 0.2939, 0.3046,
        0.2652])
mlp.net.1.batch_norm.num_batches_tracked tensor(205)
mlp.net.2.linear.weight tensor([[ 0.2126,  0.0249, -0.0608,  ...,  0.0649,  0.1546,  0.0058],
        [-0.1716, -0.0216, -0.1392,  ...,  0.0418,  0.1053,  0.0651],
        [-0.2056, -0.0753, -0.1102,  ..., -0.0936, -0.0319,  0.0544],
        ...,
        [ 0.1327,  0.0022,  0.1508,  ...,  0.1384,  0.0574,  0.0932],
        [ 0.0034, -0.0828,  0.0171,  ...,  0.0883,  0.0226,  0.0047],
        [-0.0746, -0.1209, -0.2063,  ...,  0.0485, -0.1559,  0.0467]])
mlp.net.2.linear.bias tensor([-0.0017,  0.0136, -0.0414,  0.0614,  0.1049,  0.0018,  0.0554, -0.0909,
         0.0259,  0.0186,  0.0071,  0.0575,  0.1357, -0.0307,  0.1240, -0.0266,
         0.1005,  0.0121, -0.0151,  0.0728,  0.0123,  0.0652,  0.1056,  0.3063,
         0.1516, -0.0254,  0.0704,  0.0317,  0.0447,  0.0696,  0.0294,  0.0673,
         0.0452,  0.0405,  0.1177, -0.0062, -0.0266,  0.1344,  0.0271, -0.0625,
        -0.0063,  0.2008,  0.0606,  0.1109,  0.1168,  0.1083,  0.1248, -0.0069,
         0.0196, -0.1189, -0.0212, -0.0595,  0.1192,  0.0944,  0.1714, -0.1334,
         0.0337, -0.0270, -0.0048,  0.2238, -0.0326,  0.1778,  0.0039,  0.1904])
mlp.net.2.batch_norm.weight tensor([0.4504, 0.5365, 0.3786, 0.4820, 0.5048, 0.5672, 0.5265, 0.4388, 0.4923,
        0.4397, 0.4418, 0.3981, 0.4486, 0.6329, 0.4933, 0.4533, 0.4899, 0.5220,
        0.6152, 0.4236, 0.4593, 0.4811, 0.4940, 0.4968, 0.5288, 0.4932, 0.5016,
        0.4156, 0.5128, 0.4392, 0.4264, 0.4743, 0.4799, 0.4715, 0.4371, 0.5388,
        0.3856, 0.4697, 0.4018, 0.3902, 0.2988, 0.4947, 0.4451, 0.5057, 0.4869,
        0.4460, 0.4818, 0.5134, 0.5233, 0.4776, 0.3703, 0.4603, 0.4059, 0.5107,
        0.5039, 0.4741, 0.4809, 0.4933, 0.6198, 0.5189, 0.4787, 0.3936, 0.4932,
        0.4561])
mlp.net.2.batch_norm.bias tensor([ 0.0206,  0.0047, -0.1033,  0.1582, -0.0048,  0.0388,  0.0253,  0.0591,
         0.0780,  0.1375, -0.0382,  0.0576, -0.0303, -0.0140,  0.1502, -0.1317,
        -0.1082, -0.1487,  0.0026, -0.1213, -0.2231,  0.0170,  0.0329,  0.1516,
        -0.0460, -0.1386,  0.0343,  0.0186,  0.0545,  0.0486,  0.0311, -0.1310,
         0.0582,  0.0612,  0.1487,  0.0920,  0.1747,  0.0641, -0.0662, -0.0133,
         0.1465,  0.1080,  0.0867, -0.1232,  0.0758,  0.0052,  0.0747,  0.1205,
         0.0480, -0.0167,  0.1009,  0.0348,  0.0720, -0.0054,  0.0816,  0.0267,
        -0.0717,  0.1270,  0.0728,  0.1592,  0.0226,  0.0970,  0.1029, -0.0926])
mlp.net.2.batch_norm.running_mean tensor([0.3459, 0.2757, 0.2626, 0.3968, 0.3259, 0.3054, 0.3799, 0.1608, 0.2613,
        0.4212, 0.2558, 0.3072, 0.3624, 0.3534, 0.4992, 0.2106, 0.3638, 0.2876,
        0.3718, 0.2904, 0.2793, 0.3358, 0.3275, 0.6413, 0.3804, 0.2879, 0.3730,
        0.2149, 0.3726, 0.3985, 0.4674, 0.3484, 0.3362, 0.3965, 0.3297, 0.3191,
        0.3042, 0.2918, 0.2947, 0.2992, 0.2618, 0.3850, 0.2980, 0.3753, 0.4381,
        0.3152, 0.3568, 0.2936, 0.4031, 0.1367, 0.1870, 0.1857, 0.4086, 0.3691,
        0.4705, 0.1941, 0.3128, 0.2288, 0.3942, 0.6429, 0.2738, 0.4349, 0.3216,
        0.3352])
mlp.net.2.batch_norm.running_var tensor([0.2512, 0.2542, 0.2383, 0.4080, 0.2755, 0.2781, 0.2145, 0.1168, 0.2216,
        0.3604, 0.1904, 0.2158, 0.3592, 0.4144, 0.3968, 0.1316, 0.3398, 0.2237,
        0.6030, 0.2005, 0.2515, 0.4632, 0.2404, 0.5319, 0.3299, 0.2226, 0.4737,
        0.0904, 0.2594, 0.3118, 0.4807, 0.2819, 0.2614, 0.4386, 0.2225, 0.3999,
        0.2541, 0.1874, 0.1985, 0.3202, 0.2245, 0.2511, 0.2596, 0.2923, 0.3532,
        0.2668, 0.2805, 0.2862, 0.4913, 0.0918, 0.0931, 0.0965, 0.2546, 0.3161,
        0.3790, 0.1631, 0.2711, 0.2021, 0.4736, 0.5174, 0.2593, 0.3779, 0.2927,
        0.2723])
mlp.net.2.batch_norm.num_batches_tracked tensor(205)
mlp.net.3.linear.weight tensor([[-0.1377, -0.0074,  0.0060,  ...,  0.0550,  0.0811, -0.0179],
        [ 0.1118,  0.0212, -0.0646,  ..., -0.0426,  0.0189, -0.0246],
        [ 0.2743,  0.0652, -0.1263,  ..., -0.0298,  0.0461, -0.0067],
        ...,
        [ 0.0329,  0.0299,  0.0433,  ..., -0.1506, -0.0199, -0.0796],
        [ 0.0288,  0.0097,  0.0010,  ..., -0.0812,  0.0930,  0.1517],
        [ 0.0052,  0.0855, -0.0011,  ...,  0.1548,  0.1317, -0.1684]])
mlp.net.3.linear.bias tensor([-0.0161,  0.0070,  0.0559,  0.0553,  0.2086,  0.0162,  0.0896, -0.0104,
         0.2200, -0.0216,  0.1406,  0.0707,  0.2321, -0.0716,  0.0161,  0.0104,
         0.0644,  0.0721,  0.0264,  0.2185,  0.1946,  0.1010, -0.0458, -0.0019,
         0.0539,  0.0859,  0.1355,  0.0167,  0.2064,  0.1079,  0.1138,  0.0784,
         0.1899,  0.0083, -0.0700, -0.0317,  0.1465,  0.0988, -0.0139,  0.0323,
         0.0124,  0.0233, -0.0549,  0.0887,  0.0915,  0.1284, -0.0039,  0.0596,
         0.0751,  0.1789,  0.0830,  0.0366,  0.0718,  0.0399, -0.0652,  0.0313,
         0.0464,  0.0764,  0.0287, -0.0307,  0.1091,  0.0134,  0.0358,  0.1078])
mlp.net.3.batch_norm.weight tensor([0.3559, 0.2443, 0.4533, 0.3133, 0.3303, 0.2979, 0.3885, 0.4295, 0.3597,
        0.3045, 0.2480, 0.3227, 0.4138, 0.3262, 0.4075, 0.3286, 0.3762, 0.3196,
        0.3722, 0.3273, 0.3941, 0.4151, 0.4875, 0.3557, 0.3983, 0.4238, 0.4183,
        0.3526, 0.4018, 0.3838, 0.4048, 0.2505, 0.3526, 0.4358, 0.3676, 0.3700,
        0.3756, 0.3833, 0.4378, 0.3956, 0.4392, 0.2915, 0.4120, 0.3614, 0.3402,
        0.4730, 0.4027, 0.3212, 0.3538, 0.3921, 0.2235, 0.2265, 0.2990, 0.3826,
        0.2431, 0.3675, 0.3785, 0.3163, 0.4158, 0.4187, 0.4530, 0.3584, 0.3043,
        0.3970])
mlp.net.3.batch_norm.bias tensor([-1.5820e-01,  2.7086e-01,  1.5545e-01, -1.7411e-01,  2.1152e-01,
        -2.1656e-01, -8.2315e-02,  2.0225e-01, -1.5345e-01,  4.7559e-01,
         4.4347e-01, -4.2299e-02, -2.2111e-01, -2.4550e-01, -1.5452e-01,
        -2.3886e-01, -2.1704e-01,  4.0988e-01,  1.1888e-01,  1.6452e-01,
        -5.6744e-02,  1.0997e-01,  1.6117e-01,  7.7782e-02,  1.3413e-01,
         2.5506e-01,  5.0118e-02, -1.6217e-05, -1.7813e-01,  1.7098e-01,
        -1.7563e-03,  2.0946e-01,  2.4347e-01,  2.1982e-01, -1.4578e-01,
        -4.5646e-02,  1.3771e-02, -7.8924e-02, -1.4682e-01, -3.7445e-02,
        -3.2183e-02, -2.1485e-01, -4.6750e-02, -6.4304e-02, -2.5930e-01,
         2.1154e-01, -1.4340e-01, -3.5608e-01, -6.7422e-02,  2.5235e-01,
        -4.2808e-01, -4.8252e-01, -2.1355e-01,  1.1636e-01, -4.0064e-01,
        -9.7549e-02,  4.7132e-02, -2.0128e-01,  2.3251e-01,  1.1041e-01,
         1.3157e-01, -5.8770e-02, -1.5839e-01,  1.3523e-02])
mlp.net.3.batch_norm.running_mean tensor([0.3311, 0.2646, 0.5984, 0.3808, 0.6652, 0.3286, 0.3114, 0.4953, 0.4928,
        0.2684, 0.4649, 0.4603, 0.4359, 0.3456, 0.3561, 0.3036, 0.3257, 0.3082,
        0.4327, 0.5675, 0.5363, 0.3796, 0.2857, 0.5376, 0.4485, 0.5388, 0.5251,
        0.3739, 0.3753, 0.5694, 0.3822, 0.3698, 0.5953, 0.5736, 0.2595, 0.3737,
        0.3893, 0.2557, 0.4224, 0.4105, 0.4289, 0.2369, 0.2897, 0.3754, 0.3406,
        0.6324, 0.4549, 0.3963, 0.4566, 0.5245, 0.4892, 0.3726, 0.4067, 0.4769,
        0.3092, 0.4675, 0.4371, 0.3083, 0.4689, 0.3689, 0.4991, 0.3877, 0.3333,
        0.4861])
mlp.net.3.batch_norm.running_var tensor([0.2893, 0.1117, 0.5405, 0.3079, 0.6355, 0.4778, 0.4167, 0.9513, 0.4807,
        0.2399, 0.1966, 0.2788, 0.3786, 0.5089, 0.2798, 0.1676, 0.2348, 0.2154,
        0.4795, 0.3949, 0.4427, 0.5043, 0.2499, 0.5835, 0.2946, 0.3571, 0.2796,
        0.5401, 0.1481, 0.3714, 0.2840, 0.4754, 0.4214, 0.7044, 0.2744, 0.5671,
        0.1676, 0.1651, 0.5391, 0.5512, 0.6203, 0.2149, 0.3520, 0.3604, 0.2433,
        0.9495, 0.7652, 0.3727, 0.4691, 0.3243, 0.2426, 0.5710, 0.3599, 0.3693,
        0.3390, 0.4696, 0.4348, 0.2411, 0.5700, 0.4594, 0.6274, 0.5551, 0.4862,
        0.6726])
mlp.net.3.batch_norm.num_batches_tracked tensor(205)
mlp.net.4.weight tensor([[ 0.0769, -0.1151, -0.1259,  ...,  0.0111,  0.0671, -0.0113],
        [-0.0551, -0.0075, -0.1143,  ..., -0.0630, -0.0795, -0.0713],
        [ 0.0007,  0.0802,  0.0496,  ...,  0.0506, -0.0107,  0.0308],
        ...,
        [-0.0652,  0.0219, -0.0422,  ..., -0.0871, -0.0037, -0.0425],
        [ 0.0643, -0.0265,  0.0460,  ...,  0.0602,  0.0893,  0.0421],
        [ 0.0285, -0.0289,  0.0763,  ...,  0.0644,  0.0453,  0.0206]])
mlp.net.4.bias tensor([-0.2751,  0.5666,  0.7311,  0.6406,  0.4745,  0.3711,  0.2499,  0.0529,
         0.2490,  0.1893, -0.2863, -0.1208, -0.3958, -0.2062, -0.4073, -0.6050,
        -0.4765, -0.5945, -0.5294, -0.4655, -0.5405, -0.6899, -0.5491, -0.2835,
        -0.5785, -0.6699, -0.5000, -0.4435, -0.5726, -0.6498, -0.4829, -0.6038,
        -0.6596, -0.6926, -0.6051, -0.6189, -0.5954, -0.7662, -0.6705, -0.7724,
        -0.5806, -0.6203, -0.7710, -0.6870, -0.6744, -0.5484, -0.5123, -0.5428,
        -0.4304, -0.6670])
